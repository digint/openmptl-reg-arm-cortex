/*
 * OpenMPTL - C++ Microprocessor Template Library
 *
 * This program is a derivative representation of a CMSIS System View
 * Description (SVD) file, and is subject to the corresponding license
 * (see "Freescale CMSIS-SVD License Agreement.pdf" in the parent directory).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */

////////////////////////////////////////////////////////////////////////
//
//  Import from CMSIS-SVD: "Freescale/MK50D10.svd"
//
//  vendor: Freescale Semiconductor, Inc.
//  vendorID: Freescale
//  name: MK50D10
//  series: Kinetis_K
//  version: 1.6
//  description: MK50D10 Freescale Microcontroller
//  --------------------------------------------------------------------
//
//  C++ Header file, containing architecture specific register
//  declarations for use in OpenMPTL. It has been converted directly
//  from a CMSIS-SVD file.
//
//  https://digint.ch/openmptl
//  https://github.com/posborne/cmsis-svd
//

#ifndef ARCH_REG_ADDRESS_MAP_HPP_INCLUDED
#define ARCH_REG_ADDRESS_MAP_HPP_INCLUDED

#warning "using untested register declarations"

#include <register_type.hpp>

namespace mptl {

template<reg_addr_t addr>
struct address_map {
  static constexpr const char * name_str = nullptr;
};

template<> struct address_map< 0x00000400 > { static constexpr const char * name_str = "FTFL_FlashConfig::BACKKEY3"; };
template<> struct address_map< 0x00000401 > { static constexpr const char * name_str = "FTFL_FlashConfig::BACKKEY2"; };
template<> struct address_map< 0x00000402 > { static constexpr const char * name_str = "FTFL_FlashConfig::BACKKEY1"; };
template<> struct address_map< 0x00000403 > { static constexpr const char * name_str = "FTFL_FlashConfig::BACKKEY0"; };
template<> struct address_map< 0x00000404 > { static constexpr const char * name_str = "FTFL_FlashConfig::BACKKEY7"; };
template<> struct address_map< 0x00000405 > { static constexpr const char * name_str = "FTFL_FlashConfig::BACKKEY6"; };
template<> struct address_map< 0x00000406 > { static constexpr const char * name_str = "FTFL_FlashConfig::BACKKEY5"; };
template<> struct address_map< 0x00000407 > { static constexpr const char * name_str = "FTFL_FlashConfig::BACKKEY4"; };
template<> struct address_map< 0x00000408 > { static constexpr const char * name_str = "FTFL_FlashConfig::FPROT3"; };
template<> struct address_map< 0x00000409 > { static constexpr const char * name_str = "FTFL_FlashConfig::FPROT2"; };
template<> struct address_map< 0x0000040a > { static constexpr const char * name_str = "FTFL_FlashConfig::FPROT1"; };
template<> struct address_map< 0x0000040b > { static constexpr const char * name_str = "FTFL_FlashConfig::FPROT0"; };
template<> struct address_map< 0x0000040c > { static constexpr const char * name_str = "FTFL_FlashConfig::FSEC"; };
template<> struct address_map< 0x0000040d > { static constexpr const char * name_str = "FTFL_FlashConfig::FOPT"; };
template<> struct address_map< 0x0000040e > { static constexpr const char * name_str = "FTFL_FlashConfig::FEPROT"; };
template<> struct address_map< 0x0000040f > { static constexpr const char * name_str = "FTFL_FlashConfig::FDPROT"; };
template<> struct address_map< 0x40000000 > { static constexpr const char * name_str = "AIPS0::MPRA"; };
template<> struct address_map< 0x40000020 > { static constexpr const char * name_str = "AIPS0::PACRA"; };
template<> struct address_map< 0x40000024 > { static constexpr const char * name_str = "AIPS0::PACRB"; };
template<> struct address_map< 0x40000028 > { static constexpr const char * name_str = "AIPS0::PACRC"; };
template<> struct address_map< 0x4000002c > { static constexpr const char * name_str = "AIPS0::PACRD"; };
template<> struct address_map< 0x40000040 > { static constexpr const char * name_str = "AIPS0::PACRE"; };
template<> struct address_map< 0x40000044 > { static constexpr const char * name_str = "AIPS0::PACRF"; };
template<> struct address_map< 0x40000048 > { static constexpr const char * name_str = "AIPS0::PACRG"; };
template<> struct address_map< 0x4000004c > { static constexpr const char * name_str = "AIPS0::PACRH"; };
template<> struct address_map< 0x40000050 > { static constexpr const char * name_str = "AIPS0::PACRI"; };
template<> struct address_map< 0x40000054 > { static constexpr const char * name_str = "AIPS0::PACRJ"; };
template<> struct address_map< 0x40000058 > { static constexpr const char * name_str = "AIPS0::PACRK"; };
template<> struct address_map< 0x4000005c > { static constexpr const char * name_str = "AIPS0::PACRL"; };
template<> struct address_map< 0x40000060 > { static constexpr const char * name_str = "AIPS0::PACRM"; };
template<> struct address_map< 0x40000064 > { static constexpr const char * name_str = "AIPS0::PACRN"; };
template<> struct address_map< 0x40000068 > { static constexpr const char * name_str = "AIPS0::PACRO"; };
template<> struct address_map< 0x4000006c > { static constexpr const char * name_str = "AIPS0::PACRP"; };
template<> struct address_map< 0x40004000 > { static constexpr const char * name_str = "AXBS::PRS%s"; };
template<> struct address_map< 0x40004010 > { static constexpr const char * name_str = "AXBS::CRS%s"; };
template<> struct address_map< 0x40004800 > { static constexpr const char * name_str = "AXBS::MGPCR0"; };
template<> struct address_map< 0x40004900 > { static constexpr const char * name_str = "AXBS::MGPCR1"; };
template<> struct address_map< 0x40004a00 > { static constexpr const char * name_str = "AXBS::MGPCR2"; };
template<> struct address_map< 0x40004c00 > { static constexpr const char * name_str = "AXBS::MGPCR4"; };
template<> struct address_map< 0x40004d00 > { static constexpr const char * name_str = "AXBS::MGPCR5"; };
template<> struct address_map< 0x40008000 > { static constexpr const char * name_str = "DMA::CR"; };
template<> struct address_map< 0x40008004 > { static constexpr const char * name_str = "DMA::ES"; };
template<> struct address_map< 0x4000800c > { static constexpr const char * name_str = "DMA::ERQ"; };
template<> struct address_map< 0x40008014 > { static constexpr const char * name_str = "DMA::EEI"; };
template<> struct address_map< 0x40008018 > { static constexpr const char * name_str = "DMA::CEEI"; };
template<> struct address_map< 0x40008019 > { static constexpr const char * name_str = "DMA::SEEI"; };
template<> struct address_map< 0x4000801a > { static constexpr const char * name_str = "DMA::CERQ"; };
template<> struct address_map< 0x4000801b > { static constexpr const char * name_str = "DMA::SERQ"; };
template<> struct address_map< 0x4000801c > { static constexpr const char * name_str = "DMA::CDNE"; };
template<> struct address_map< 0x4000801d > { static constexpr const char * name_str = "DMA::SSRT"; };
template<> struct address_map< 0x4000801e > { static constexpr const char * name_str = "DMA::CERR"; };
template<> struct address_map< 0x4000801f > { static constexpr const char * name_str = "DMA::CINT"; };
template<> struct address_map< 0x40008024 > { static constexpr const char * name_str = "DMA::INT"; };
template<> struct address_map< 0x4000802c > { static constexpr const char * name_str = "DMA::ERR"; };
template<> struct address_map< 0x40008034 > { static constexpr const char * name_str = "DMA::HRS"; };
template<> struct address_map< 0x40008100 > { static constexpr const char * name_str = "DMA::DCHPRI%s"; };
template<> struct address_map< 0x40009000 > { static constexpr const char * name_str = "DMA::TCD%s_SADDR"; };
template<> struct address_map< 0x40009004 > { static constexpr const char * name_str = "DMA::TCD%s_SOFF"; };
template<> struct address_map< 0x40009006 > { static constexpr const char * name_str = "DMA::TCD%s_ATTR"; };
template<> struct address_map< 0x40009008 > { static constexpr const char * name_str = "DMA::TCD%s_NBYTES_MLNO"; };  /* svd2hpp: duplicate address for: DMA::TCD%s_NBYTES_MLNO, DMA::TCD%s_NBYTES_MLOFFNO, DMA::TCD%s_NBYTES_MLOFFYES */
template<> struct address_map< 0x4000900c > { static constexpr const char * name_str = "DMA::TCD%s_SLAST"; };
template<> struct address_map< 0x40009010 > { static constexpr const char * name_str = "DMA::TCD%s_DADDR"; };
template<> struct address_map< 0x40009014 > { static constexpr const char * name_str = "DMA::TCD%s_DOFF"; };
template<> struct address_map< 0x40009016 > { static constexpr const char * name_str = "DMA::TCD%s_CITER_ELINKNO"; };  /* svd2hpp: duplicate address for: DMA::TCD%s_CITER_ELINKNO, DMA::TCD%s_CITER_ELINKYES */
template<> struct address_map< 0x40009018 > { static constexpr const char * name_str = "DMA::TCD%s_DLASTSGA"; };
template<> struct address_map< 0x4000901c > { static constexpr const char * name_str = "DMA::TCD%s_CSR"; };
template<> struct address_map< 0x4000901e > { static constexpr const char * name_str = "DMA::TCD%s_BITER_ELINKNO"; };  /* svd2hpp: duplicate address for: DMA::TCD%s_BITER_ELINKNO, DMA::TCD%s_BITER_ELINKYES */
template<> struct address_map< 0x4000c000 > { static constexpr const char * name_str = "FB::CSAR%s"; };
template<> struct address_map< 0x4000c004 > { static constexpr const char * name_str = "FB::CSMR%s"; };
template<> struct address_map< 0x4000c008 > { static constexpr const char * name_str = "FB::CSCR%s"; };
template<> struct address_map< 0x4000c060 > { static constexpr const char * name_str = "FB::CSPMCR"; };
template<> struct address_map< 0x4000d000 > { static constexpr const char * name_str = "MPU::CESR"; };
template<> struct address_map< 0x4000d010 > { static constexpr const char * name_str = "MPU::EAR%s"; };
template<> struct address_map< 0x4000d014 > { static constexpr const char * name_str = "MPU::EDR%s"; };
template<> struct address_map< 0x4000d400 > { static constexpr const char * name_str = "MPU::RGD%s_WORD0"; };
template<> struct address_map< 0x4000d404 > { static constexpr const char * name_str = "MPU::RGD%s_WORD1"; };
template<> struct address_map< 0x4000d408 > { static constexpr const char * name_str = "MPU::RGD%s_WORD2"; };
template<> struct address_map< 0x4000d40c > { static constexpr const char * name_str = "MPU::RGD%s_WORD3"; };
template<> struct address_map< 0x4000d800 > { static constexpr const char * name_str = "MPU::RGDAAC%s"; };
template<> struct address_map< 0x4001f000 > { static constexpr const char * name_str = "FMC::PFAPR"; };
template<> struct address_map< 0x4001f004 > { static constexpr const char * name_str = "FMC::PFB0CR"; };
template<> struct address_map< 0x4001f008 > { static constexpr const char * name_str = "FMC::PFB1CR"; };
template<> struct address_map< 0x4001f100 > { static constexpr const char * name_str = "FMC::TAGVDW0S%s"; };
template<> struct address_map< 0x4001f120 > { static constexpr const char * name_str = "FMC::TAGVDW1S%s"; };
template<> struct address_map< 0x4001f140 > { static constexpr const char * name_str = "FMC::TAGVDW2S%s"; };
template<> struct address_map< 0x4001f160 > { static constexpr const char * name_str = "FMC::TAGVDW3S%s"; };
template<> struct address_map< 0x4001f200 > { static constexpr const char * name_str = "FMC::DATAW0S%sU"; };
template<> struct address_map< 0x4001f204 > { static constexpr const char * name_str = "FMC::DATAW0S%sL"; };
template<> struct address_map< 0x4001f240 > { static constexpr const char * name_str = "FMC::DATAW1S%sU"; };
template<> struct address_map< 0x4001f244 > { static constexpr const char * name_str = "FMC::DATAW1S%sL"; };
template<> struct address_map< 0x4001f280 > { static constexpr const char * name_str = "FMC::DATAW2S%sU"; };
template<> struct address_map< 0x4001f284 > { static constexpr const char * name_str = "FMC::DATAW2S%sL"; };
template<> struct address_map< 0x4001f2c0 > { static constexpr const char * name_str = "FMC::DATAW3S%sU"; };
template<> struct address_map< 0x4001f2c4 > { static constexpr const char * name_str = "FMC::DATAW3S%sL"; };
template<> struct address_map< 0x40020000 > { static constexpr const char * name_str = "FTFL::FSTAT"; };
template<> struct address_map< 0x40020001 > { static constexpr const char * name_str = "FTFL::FCNFG"; };
template<> struct address_map< 0x40020002 > { static constexpr const char * name_str = "FTFL::FSEC"; };
template<> struct address_map< 0x40020003 > { static constexpr const char * name_str = "FTFL::FOPT"; };
template<> struct address_map< 0x40020004 > { static constexpr const char * name_str = "FTFL::FCCOB%s"; };
template<> struct address_map< 0x40020010 > { static constexpr const char * name_str = "FTFL::FPROT%s"; };
template<> struct address_map< 0x40021000 > { static constexpr const char * name_str = "DMAMUX::CHCFG%s"; };
template<> struct address_map< 0x4002c000 > { static constexpr const char * name_str = "SPI0::MCR"; };
template<> struct address_map< 0x4002c008 > { static constexpr const char * name_str = "SPI0::TCR"; };
template<> struct address_map< 0x4002c00c > { static constexpr const char * name_str = "SPI0::CTAR%s"; };  /* svd2hpp: duplicate address for: SPI0::CTAR%s, SPI0::CTAR_SLAVE */
template<> struct address_map< 0x4002c02c > { static constexpr const char * name_str = "SPI0::SR"; };
template<> struct address_map< 0x4002c030 > { static constexpr const char * name_str = "SPI0::RSER"; };
template<> struct address_map< 0x4002c034 > { static constexpr const char * name_str = "SPI0::PUSHR"; };  /* svd2hpp: duplicate address for: SPI0::PUSHR, SPI0::PUSHR_SLAVE */
template<> struct address_map< 0x4002c038 > { static constexpr const char * name_str = "SPI0::POPR"; };
template<> struct address_map< 0x4002c03c > { static constexpr const char * name_str = "SPI0::TXFR%s"; };
template<> struct address_map< 0x4002c07c > { static constexpr const char * name_str = "SPI0::RXFR%s"; };
template<> struct address_map< 0x4002d000 > { static constexpr const char * name_str = "SPI1::MCR"; };
template<> struct address_map< 0x4002d008 > { static constexpr const char * name_str = "SPI1::TCR"; };
template<> struct address_map< 0x4002d00c > { static constexpr const char * name_str = "SPI1::CTAR%s"; };  /* svd2hpp: duplicate address for: SPI1::CTAR%s, SPI1::CTAR_SLAVE */
template<> struct address_map< 0x4002d02c > { static constexpr const char * name_str = "SPI1::SR"; };
template<> struct address_map< 0x4002d030 > { static constexpr const char * name_str = "SPI1::RSER"; };
template<> struct address_map< 0x4002d034 > { static constexpr const char * name_str = "SPI1::PUSHR"; };  /* svd2hpp: duplicate address for: SPI1::PUSHR, SPI1::PUSHR_SLAVE */
template<> struct address_map< 0x4002d038 > { static constexpr const char * name_str = "SPI1::POPR"; };
template<> struct address_map< 0x4002d03c > { static constexpr const char * name_str = "SPI1::TXFR%s"; };
template<> struct address_map< 0x4002d07c > { static constexpr const char * name_str = "SPI1::RXFR%s"; };
template<> struct address_map< 0x4002f000 > { static constexpr const char * name_str = "I2S0::TCSR"; };
template<> struct address_map< 0x4002f004 > { static constexpr const char * name_str = "I2S0::TCR1"; };
template<> struct address_map< 0x4002f008 > { static constexpr const char * name_str = "I2S0::TCR2"; };
template<> struct address_map< 0x4002f00c > { static constexpr const char * name_str = "I2S0::TCR3"; };
template<> struct address_map< 0x4002f010 > { static constexpr const char * name_str = "I2S0::TCR4"; };
template<> struct address_map< 0x4002f014 > { static constexpr const char * name_str = "I2S0::TCR5"; };
template<> struct address_map< 0x4002f020 > { static constexpr const char * name_str = "I2S0::TDR%s"; };
template<> struct address_map< 0x4002f040 > { static constexpr const char * name_str = "I2S0::TFR%s"; };
template<> struct address_map< 0x4002f060 > { static constexpr const char * name_str = "I2S0::TMR"; };
template<> struct address_map< 0x4002f080 > { static constexpr const char * name_str = "I2S0::RCSR"; };
template<> struct address_map< 0x4002f084 > { static constexpr const char * name_str = "I2S0::RCR1"; };
template<> struct address_map< 0x4002f088 > { static constexpr const char * name_str = "I2S0::RCR2"; };
template<> struct address_map< 0x4002f08c > { static constexpr const char * name_str = "I2S0::RCR3"; };
template<> struct address_map< 0x4002f090 > { static constexpr const char * name_str = "I2S0::RCR4"; };
template<> struct address_map< 0x4002f094 > { static constexpr const char * name_str = "I2S0::RCR5"; };
template<> struct address_map< 0x4002f0a0 > { static constexpr const char * name_str = "I2S0::RDR%s"; };
template<> struct address_map< 0x4002f0c0 > { static constexpr const char * name_str = "I2S0::RFR%s"; };
template<> struct address_map< 0x4002f0e0 > { static constexpr const char * name_str = "I2S0::RMR"; };
template<> struct address_map< 0x4002f100 > { static constexpr const char * name_str = "I2S0::MCR"; };
template<> struct address_map< 0x4002f104 > { static constexpr const char * name_str = "I2S0::MDR"; };
template<> struct address_map< 0x40032000 > { static constexpr const char * name_str = "CRC::CRC"; };  /* svd2hpp: duplicate address for: CRC::CRC, CRC::CRCL, CRC::CRCLL */
template<> struct address_map< 0x40032001 > { static constexpr const char * name_str = "CRC::CRCLU"; };
template<> struct address_map< 0x40032002 > { static constexpr const char * name_str = "CRC::CRCH"; };  /* svd2hpp: duplicate address for: CRC::CRCH, CRC::CRCHL */
template<> struct address_map< 0x40032003 > { static constexpr const char * name_str = "CRC::CRCHU"; };
template<> struct address_map< 0x40032004 > { static constexpr const char * name_str = "CRC::GPOLY"; };  /* svd2hpp: duplicate address for: CRC::GPOLY, CRC::GPOLYL, CRC::GPOLYLL */
template<> struct address_map< 0x40032005 > { static constexpr const char * name_str = "CRC::GPOLYLU"; };
template<> struct address_map< 0x40032006 > { static constexpr const char * name_str = "CRC::GPOLYH"; };  /* svd2hpp: duplicate address for: CRC::GPOLYH, CRC::GPOLYHL */
template<> struct address_map< 0x40032007 > { static constexpr const char * name_str = "CRC::GPOLYHU"; };
template<> struct address_map< 0x40032008 > { static constexpr const char * name_str = "CRC::CTRL"; };
template<> struct address_map< 0x4003200b > { static constexpr const char * name_str = "CRC::CTRLHU"; };
template<> struct address_map< 0x40035000 > { static constexpr const char * name_str = "USBDCD::CONTROL"; };
template<> struct address_map< 0x40035004 > { static constexpr const char * name_str = "USBDCD::CLOCK"; };
template<> struct address_map< 0x40035008 > { static constexpr const char * name_str = "USBDCD::STATUS"; };
template<> struct address_map< 0x40035010 > { static constexpr const char * name_str = "USBDCD::TIMER0"; };
template<> struct address_map< 0x40035014 > { static constexpr const char * name_str = "USBDCD::TIMER1"; };
template<> struct address_map< 0x40035018 > { static constexpr const char * name_str = "USBDCD::TIMER2"; };
template<> struct address_map< 0x40036000 > { static constexpr const char * name_str = "PDB0::SC"; };
template<> struct address_map< 0x40036004 > { static constexpr const char * name_str = "PDB0::MOD"; };
template<> struct address_map< 0x40036008 > { static constexpr const char * name_str = "PDB0::CNT"; };
template<> struct address_map< 0x4003600c > { static constexpr const char * name_str = "PDB0::IDLY"; };
template<> struct address_map< 0x40036010 > { static constexpr const char * name_str = "PDB0::CH%sC1"; };
template<> struct address_map< 0x40036014 > { static constexpr const char * name_str = "PDB0::CH%sS"; };
template<> struct address_map< 0x40036018 > { static constexpr const char * name_str = "PDB0::CH%sDLY0"; };
template<> struct address_map< 0x4003601c > { static constexpr const char * name_str = "PDB0::CH%sDLY1"; };
template<> struct address_map< 0x40036150 > { static constexpr const char * name_str = "PDB0::DACINTC%s"; };
template<> struct address_map< 0x40036154 > { static constexpr const char * name_str = "PDB0::DACINT%s"; };
template<> struct address_map< 0x40036190 > { static constexpr const char * name_str = "PDB0::POEN"; };
template<> struct address_map< 0x40036194 > { static constexpr const char * name_str = "PDB0::PO%sDLY"; };
template<> struct address_map< 0x40037000 > { static constexpr const char * name_str = "PIT::MCR"; };
template<> struct address_map< 0x40037100 > { static constexpr const char * name_str = "PIT::LDVAL%s"; };
template<> struct address_map< 0x40037104 > { static constexpr const char * name_str = "PIT::CVAL%s"; };
template<> struct address_map< 0x40037108 > { static constexpr const char * name_str = "PIT::TCTRL%s"; };
template<> struct address_map< 0x4003710c > { static constexpr const char * name_str = "PIT::TFLG%s"; };
template<> struct address_map< 0x40038000 > { static constexpr const char * name_str = "FTM0::SC"; };
template<> struct address_map< 0x40038004 > { static constexpr const char * name_str = "FTM0::CNT"; };
template<> struct address_map< 0x40038008 > { static constexpr const char * name_str = "FTM0::MOD"; };
template<> struct address_map< 0x4003800c > { static constexpr const char * name_str = "FTM0::C%sSC"; };
template<> struct address_map< 0x40038010 > { static constexpr const char * name_str = "FTM0::C%sV"; };
template<> struct address_map< 0x4003804c > { static constexpr const char * name_str = "FTM0::CNTIN"; };
template<> struct address_map< 0x40038050 > { static constexpr const char * name_str = "FTM0::STATUS"; };
template<> struct address_map< 0x40038054 > { static constexpr const char * name_str = "FTM0::MODE"; };
template<> struct address_map< 0x40038058 > { static constexpr const char * name_str = "FTM0::SYNC"; };
template<> struct address_map< 0x4003805c > { static constexpr const char * name_str = "FTM0::OUTINIT"; };
template<> struct address_map< 0x40038060 > { static constexpr const char * name_str = "FTM0::OUTMASK"; };
template<> struct address_map< 0x40038064 > { static constexpr const char * name_str = "FTM0::COMBINE"; };
template<> struct address_map< 0x40038068 > { static constexpr const char * name_str = "FTM0::DEADTIME"; };
template<> struct address_map< 0x4003806c > { static constexpr const char * name_str = "FTM0::EXTTRIG"; };
template<> struct address_map< 0x40038070 > { static constexpr const char * name_str = "FTM0::POL"; };
template<> struct address_map< 0x40038074 > { static constexpr const char * name_str = "FTM0::FMS"; };
template<> struct address_map< 0x40038078 > { static constexpr const char * name_str = "FTM0::FILTER"; };
template<> struct address_map< 0x4003807c > { static constexpr const char * name_str = "FTM0::FLTCTRL"; };
template<> struct address_map< 0x40038080 > { static constexpr const char * name_str = "FTM0::QDCTRL"; };
template<> struct address_map< 0x40038084 > { static constexpr const char * name_str = "FTM0::CONF"; };
template<> struct address_map< 0x40038088 > { static constexpr const char * name_str = "FTM0::FLTPOL"; };
template<> struct address_map< 0x4003808c > { static constexpr const char * name_str = "FTM0::SYNCONF"; };
template<> struct address_map< 0x40038090 > { static constexpr const char * name_str = "FTM0::INVCTRL"; };
template<> struct address_map< 0x40038094 > { static constexpr const char * name_str = "FTM0::SWOCTRL"; };
template<> struct address_map< 0x40038098 > { static constexpr const char * name_str = "FTM0::PWMLOAD"; };
template<> struct address_map< 0x40039000 > { static constexpr const char * name_str = "FTM1::SC"; };
template<> struct address_map< 0x40039004 > { static constexpr const char * name_str = "FTM1::CNT"; };
template<> struct address_map< 0x40039008 > { static constexpr const char * name_str = "FTM1::MOD"; };
template<> struct address_map< 0x4003900c > { static constexpr const char * name_str = "FTM1::C%sSC"; };
template<> struct address_map< 0x40039010 > { static constexpr const char * name_str = "FTM1::C%sV"; };
template<> struct address_map< 0x4003904c > { static constexpr const char * name_str = "FTM1::CNTIN"; };
template<> struct address_map< 0x40039050 > { static constexpr const char * name_str = "FTM1::STATUS"; };
template<> struct address_map< 0x40039054 > { static constexpr const char * name_str = "FTM1::MODE"; };
template<> struct address_map< 0x40039058 > { static constexpr const char * name_str = "FTM1::SYNC"; };
template<> struct address_map< 0x4003905c > { static constexpr const char * name_str = "FTM1::OUTINIT"; };
template<> struct address_map< 0x40039060 > { static constexpr const char * name_str = "FTM1::OUTMASK"; };
template<> struct address_map< 0x40039064 > { static constexpr const char * name_str = "FTM1::COMBINE"; };
template<> struct address_map< 0x40039068 > { static constexpr const char * name_str = "FTM1::DEADTIME"; };
template<> struct address_map< 0x4003906c > { static constexpr const char * name_str = "FTM1::EXTTRIG"; };
template<> struct address_map< 0x40039070 > { static constexpr const char * name_str = "FTM1::POL"; };
template<> struct address_map< 0x40039074 > { static constexpr const char * name_str = "FTM1::FMS"; };
template<> struct address_map< 0x40039078 > { static constexpr const char * name_str = "FTM1::FILTER"; };
template<> struct address_map< 0x4003907c > { static constexpr const char * name_str = "FTM1::FLTCTRL"; };
template<> struct address_map< 0x40039080 > { static constexpr const char * name_str = "FTM1::QDCTRL"; };
template<> struct address_map< 0x40039084 > { static constexpr const char * name_str = "FTM1::CONF"; };
template<> struct address_map< 0x40039088 > { static constexpr const char * name_str = "FTM1::FLTPOL"; };
template<> struct address_map< 0x4003908c > { static constexpr const char * name_str = "FTM1::SYNCONF"; };
template<> struct address_map< 0x40039090 > { static constexpr const char * name_str = "FTM1::INVCTRL"; };
template<> struct address_map< 0x40039094 > { static constexpr const char * name_str = "FTM1::SWOCTRL"; };
template<> struct address_map< 0x40039098 > { static constexpr const char * name_str = "FTM1::PWMLOAD"; };
template<> struct address_map< 0x4003b000 > { static constexpr const char * name_str = "ADC0::SC1%s"; };
template<> struct address_map< 0x4003b008 > { static constexpr const char * name_str = "ADC0::CFG1"; };
template<> struct address_map< 0x4003b00c > { static constexpr const char * name_str = "ADC0::CFG2"; };
template<> struct address_map< 0x4003b010 > { static constexpr const char * name_str = "ADC0::R%s"; };
template<> struct address_map< 0x4003b018 > { static constexpr const char * name_str = "ADC0::CV%s"; };
template<> struct address_map< 0x4003b020 > { static constexpr const char * name_str = "ADC0::SC2"; };
template<> struct address_map< 0x4003b024 > { static constexpr const char * name_str = "ADC0::SC3"; };
template<> struct address_map< 0x4003b028 > { static constexpr const char * name_str = "ADC0::OFS"; };
template<> struct address_map< 0x4003b02c > { static constexpr const char * name_str = "ADC0::PG"; };
template<> struct address_map< 0x4003b030 > { static constexpr const char * name_str = "ADC0::MG"; };
template<> struct address_map< 0x4003b034 > { static constexpr const char * name_str = "ADC0::CLPD"; };
template<> struct address_map< 0x4003b038 > { static constexpr const char * name_str = "ADC0::CLPS"; };
template<> struct address_map< 0x4003b03c > { static constexpr const char * name_str = "ADC0::CLP4"; };
template<> struct address_map< 0x4003b040 > { static constexpr const char * name_str = "ADC0::CLP3"; };
template<> struct address_map< 0x4003b044 > { static constexpr const char * name_str = "ADC0::CLP2"; };
template<> struct address_map< 0x4003b048 > { static constexpr const char * name_str = "ADC0::CLP1"; };
template<> struct address_map< 0x4003b04c > { static constexpr const char * name_str = "ADC0::CLP0"; };
template<> struct address_map< 0x4003b050 > { static constexpr const char * name_str = "ADC0::PGA"; };
template<> struct address_map< 0x4003b054 > { static constexpr const char * name_str = "ADC0::CLMD"; };
template<> struct address_map< 0x4003b058 > { static constexpr const char * name_str = "ADC0::CLMS"; };
template<> struct address_map< 0x4003b05c > { static constexpr const char * name_str = "ADC0::CLM4"; };
template<> struct address_map< 0x4003b060 > { static constexpr const char * name_str = "ADC0::CLM3"; };
template<> struct address_map< 0x4003b064 > { static constexpr const char * name_str = "ADC0::CLM2"; };
template<> struct address_map< 0x4003b068 > { static constexpr const char * name_str = "ADC0::CLM1"; };
template<> struct address_map< 0x4003b06c > { static constexpr const char * name_str = "ADC0::CLM0"; };
template<> struct address_map< 0x4003d000 > { static constexpr const char * name_str = "RTC::TSR"; };
template<> struct address_map< 0x4003d004 > { static constexpr const char * name_str = "RTC::TPR"; };
template<> struct address_map< 0x4003d008 > { static constexpr const char * name_str = "RTC::TAR"; };
template<> struct address_map< 0x4003d00c > { static constexpr const char * name_str = "RTC::TCR"; };
template<> struct address_map< 0x4003d010 > { static constexpr const char * name_str = "RTC::CR"; };
template<> struct address_map< 0x4003d014 > { static constexpr const char * name_str = "RTC::SR"; };
template<> struct address_map< 0x4003d018 > { static constexpr const char * name_str = "RTC::LR"; };
template<> struct address_map< 0x4003d01c > { static constexpr const char * name_str = "RTC::IER"; };
template<> struct address_map< 0x4003d800 > { static constexpr const char * name_str = "RTC::WAR"; };
template<> struct address_map< 0x4003d804 > { static constexpr const char * name_str = "RTC::RAR"; };
template<> struct address_map< 0x4003e000 > { static constexpr const char * name_str = "RFVBAT::REG%s"; };
template<> struct address_map< 0x40040000 > { static constexpr const char * name_str = "LPTMR0::CSR"; };
template<> struct address_map< 0x40040004 > { static constexpr const char * name_str = "LPTMR0::PSR"; };
template<> struct address_map< 0x40040008 > { static constexpr const char * name_str = "LPTMR0::CMR"; };
template<> struct address_map< 0x4004000c > { static constexpr const char * name_str = "LPTMR0::CNR"; };
template<> struct address_map< 0x40041000 > { static constexpr const char * name_str = "RFSYS::REG%s"; };
template<> struct address_map< 0x40045000 > { static constexpr const char * name_str = "TSI0::GENCS"; };
template<> struct address_map< 0x40045004 > { static constexpr const char * name_str = "TSI0::SCANC"; };
template<> struct address_map< 0x40045008 > { static constexpr const char * name_str = "TSI0::PEN"; };
template<> struct address_map< 0x4004500c > { static constexpr const char * name_str = "TSI0::WUCNTR"; };
template<> struct address_map< 0x40045100 > { static constexpr const char * name_str = "TSI0::CNTR%s"; };
template<> struct address_map< 0x40045120 > { static constexpr const char * name_str = "TSI0::THRESHOLD"; };
template<> struct address_map< 0x40047000 > { static constexpr const char * name_str = "SIM::SOPT1"; };
template<> struct address_map< 0x40047004 > { static constexpr const char * name_str = "SIM::SOPT1CFG"; };
template<> struct address_map< 0x40048004 > { static constexpr const char * name_str = "SIM::SOPT2"; };
template<> struct address_map< 0x4004800c > { static constexpr const char * name_str = "SIM::SOPT4"; };
template<> struct address_map< 0x40048010 > { static constexpr const char * name_str = "SIM::SOPT5"; };
template<> struct address_map< 0x40048018 > { static constexpr const char * name_str = "SIM::SOPT7"; };
template<> struct address_map< 0x40048024 > { static constexpr const char * name_str = "SIM::SDID"; };
template<> struct address_map< 0x40048028 > { static constexpr const char * name_str = "SIM::SCGC1"; };
template<> struct address_map< 0x4004802c > { static constexpr const char * name_str = "SIM::SCGC2"; };
template<> struct address_map< 0x40048030 > { static constexpr const char * name_str = "SIM::SCGC3"; };
template<> struct address_map< 0x40048034 > { static constexpr const char * name_str = "SIM::SCGC4"; };
template<> struct address_map< 0x40048038 > { static constexpr const char * name_str = "SIM::SCGC5"; };
template<> struct address_map< 0x4004803c > { static constexpr const char * name_str = "SIM::SCGC6"; };
template<> struct address_map< 0x40048040 > { static constexpr const char * name_str = "SIM::SCGC7"; };
template<> struct address_map< 0x40048044 > { static constexpr const char * name_str = "SIM::CLKDIV1"; };
template<> struct address_map< 0x40048048 > { static constexpr const char * name_str = "SIM::CLKDIV2"; };
template<> struct address_map< 0x4004804c > { static constexpr const char * name_str = "SIM::FCFG1"; };
template<> struct address_map< 0x40048050 > { static constexpr const char * name_str = "SIM::FCFG2"; };
template<> struct address_map< 0x40048054 > { static constexpr const char * name_str = "SIM::UIDH"; };
template<> struct address_map< 0x40048058 > { static constexpr const char * name_str = "SIM::UIDMH"; };
template<> struct address_map< 0x4004805c > { static constexpr const char * name_str = "SIM::UIDML"; };
template<> struct address_map< 0x40048060 > { static constexpr const char * name_str = "SIM::UIDL"; };
template<> struct address_map< 0x40049000 > { static constexpr const char * name_str = "PORTA::PCR%s"; };
template<> struct address_map< 0x40049080 > { static constexpr const char * name_str = "PORTA::GPCLR"; };
template<> struct address_map< 0x40049084 > { static constexpr const char * name_str = "PORTA::GPCHR"; };
template<> struct address_map< 0x400490a0 > { static constexpr const char * name_str = "PORTA::ISFR"; };
template<> struct address_map< 0x400490c0 > { static constexpr const char * name_str = "PORTA::DFER"; };
template<> struct address_map< 0x400490c4 > { static constexpr const char * name_str = "PORTA::DFCR"; };
template<> struct address_map< 0x400490c8 > { static constexpr const char * name_str = "PORTA::DFWR"; };
template<> struct address_map< 0x4004a000 > { static constexpr const char * name_str = "PORTB::PCR%s"; };
template<> struct address_map< 0x4004a080 > { static constexpr const char * name_str = "PORTB::GPCLR"; };
template<> struct address_map< 0x4004a084 > { static constexpr const char * name_str = "PORTB::GPCHR"; };
template<> struct address_map< 0x4004a0a0 > { static constexpr const char * name_str = "PORTB::ISFR"; };
template<> struct address_map< 0x4004a0c0 > { static constexpr const char * name_str = "PORTB::DFER"; };
template<> struct address_map< 0x4004a0c4 > { static constexpr const char * name_str = "PORTB::DFCR"; };
template<> struct address_map< 0x4004a0c8 > { static constexpr const char * name_str = "PORTB::DFWR"; };
template<> struct address_map< 0x4004b000 > { static constexpr const char * name_str = "PORTC::PCR%s"; };
template<> struct address_map< 0x4004b080 > { static constexpr const char * name_str = "PORTC::GPCLR"; };
template<> struct address_map< 0x4004b084 > { static constexpr const char * name_str = "PORTC::GPCHR"; };
template<> struct address_map< 0x4004b0a0 > { static constexpr const char * name_str = "PORTC::ISFR"; };
template<> struct address_map< 0x4004b0c0 > { static constexpr const char * name_str = "PORTC::DFER"; };
template<> struct address_map< 0x4004b0c4 > { static constexpr const char * name_str = "PORTC::DFCR"; };
template<> struct address_map< 0x4004b0c8 > { static constexpr const char * name_str = "PORTC::DFWR"; };
template<> struct address_map< 0x4004c000 > { static constexpr const char * name_str = "PORTD::PCR%s"; };
template<> struct address_map< 0x4004c080 > { static constexpr const char * name_str = "PORTD::GPCLR"; };
template<> struct address_map< 0x4004c084 > { static constexpr const char * name_str = "PORTD::GPCHR"; };
template<> struct address_map< 0x4004c0a0 > { static constexpr const char * name_str = "PORTD::ISFR"; };
template<> struct address_map< 0x4004c0c0 > { static constexpr const char * name_str = "PORTD::DFER"; };
template<> struct address_map< 0x4004c0c4 > { static constexpr const char * name_str = "PORTD::DFCR"; };
template<> struct address_map< 0x4004c0c8 > { static constexpr const char * name_str = "PORTD::DFWR"; };
template<> struct address_map< 0x4004d000 > { static constexpr const char * name_str = "PORTE::PCR%s"; };
template<> struct address_map< 0x4004d080 > { static constexpr const char * name_str = "PORTE::GPCLR"; };
template<> struct address_map< 0x4004d084 > { static constexpr const char * name_str = "PORTE::GPCHR"; };
template<> struct address_map< 0x4004d0a0 > { static constexpr const char * name_str = "PORTE::ISFR"; };
template<> struct address_map< 0x4004d0c0 > { static constexpr const char * name_str = "PORTE::DFER"; };
template<> struct address_map< 0x4004d0c4 > { static constexpr const char * name_str = "PORTE::DFCR"; };
template<> struct address_map< 0x4004d0c8 > { static constexpr const char * name_str = "PORTE::DFWR"; };
template<> struct address_map< 0x40052000 > { static constexpr const char * name_str = "WDOG::STCTRLH"; };
template<> struct address_map< 0x40052002 > { static constexpr const char * name_str = "WDOG::STCTRLL"; };
template<> struct address_map< 0x40052004 > { static constexpr const char * name_str = "WDOG::TOVALH"; };
template<> struct address_map< 0x40052006 > { static constexpr const char * name_str = "WDOG::TOVALL"; };
template<> struct address_map< 0x40052008 > { static constexpr const char * name_str = "WDOG::WINH"; };
template<> struct address_map< 0x4005200a > { static constexpr const char * name_str = "WDOG::WINL"; };
template<> struct address_map< 0x4005200c > { static constexpr const char * name_str = "WDOG::REFRESH"; };
template<> struct address_map< 0x4005200e > { static constexpr const char * name_str = "WDOG::UNLOCK"; };
template<> struct address_map< 0x40052010 > { static constexpr const char * name_str = "WDOG::TMROUTH"; };
template<> struct address_map< 0x40052012 > { static constexpr const char * name_str = "WDOG::TMROUTL"; };
template<> struct address_map< 0x40052014 > { static constexpr const char * name_str = "WDOG::RSTCNT"; };
template<> struct address_map< 0x40052016 > { static constexpr const char * name_str = "WDOG::PRESC"; };
template<> struct address_map< 0x40061000 > { static constexpr const char * name_str = "EWM::CTRL"; };
template<> struct address_map< 0x40061001 > { static constexpr const char * name_str = "EWM::SERV"; };
template<> struct address_map< 0x40061002 > { static constexpr const char * name_str = "EWM::CMPL"; };
template<> struct address_map< 0x40061003 > { static constexpr const char * name_str = "EWM::CMPH"; };
template<> struct address_map< 0x40061005 > { static constexpr const char * name_str = "EWM::CLKPRESCALER"; };
template<> struct address_map< 0x40062000 > { static constexpr const char * name_str = "CMT::CGH1"; };
template<> struct address_map< 0x40062001 > { static constexpr const char * name_str = "CMT::CGL1"; };
template<> struct address_map< 0x40062002 > { static constexpr const char * name_str = "CMT::CGH2"; };
template<> struct address_map< 0x40062003 > { static constexpr const char * name_str = "CMT::CGL2"; };
template<> struct address_map< 0x40062004 > { static constexpr const char * name_str = "CMT::OC"; };
template<> struct address_map< 0x40062005 > { static constexpr const char * name_str = "CMT::MSC"; };
template<> struct address_map< 0x40062006 > { static constexpr const char * name_str = "CMT::CMD1"; };
template<> struct address_map< 0x40062007 > { static constexpr const char * name_str = "CMT::CMD2"; };
template<> struct address_map< 0x40062008 > { static constexpr const char * name_str = "CMT::CMD3"; };
template<> struct address_map< 0x40062009 > { static constexpr const char * name_str = "CMT::CMD4"; };
template<> struct address_map< 0x4006200a > { static constexpr const char * name_str = "CMT::PPS"; };
template<> struct address_map< 0x4006200b > { static constexpr const char * name_str = "CMT::DMA"; };
template<> struct address_map< 0x40064000 > { static constexpr const char * name_str = "MCG::C1"; };
template<> struct address_map< 0x40064001 > { static constexpr const char * name_str = "MCG::C2"; };
template<> struct address_map< 0x40064002 > { static constexpr const char * name_str = "MCG::C3"; };
template<> struct address_map< 0x40064003 > { static constexpr const char * name_str = "MCG::C4"; };
template<> struct address_map< 0x40064004 > { static constexpr const char * name_str = "MCG::C5"; };
template<> struct address_map< 0x40064005 > { static constexpr const char * name_str = "MCG::C6"; };
template<> struct address_map< 0x40064006 > { static constexpr const char * name_str = "MCG::S"; };
template<> struct address_map< 0x40064008 > { static constexpr const char * name_str = "MCG::SC"; };
template<> struct address_map< 0x4006400a > { static constexpr const char * name_str = "MCG::ATCVH"; };
template<> struct address_map< 0x4006400b > { static constexpr const char * name_str = "MCG::ATCVL"; };
template<> struct address_map< 0x4006400c > { static constexpr const char * name_str = "MCG::C7"; };
template<> struct address_map< 0x4006400d > { static constexpr const char * name_str = "MCG::C8"; };
template<> struct address_map< 0x4006400e > { static constexpr const char * name_str = "MCG::C9"; };
template<> struct address_map< 0x4006400f > { static constexpr const char * name_str = "MCG::C10"; };
template<> struct address_map< 0x40065000 > { static constexpr const char * name_str = "OSC::CR"; };
template<> struct address_map< 0x40066000 > { static constexpr const char * name_str = "I2C0::A1"; };
template<> struct address_map< 0x40066001 > { static constexpr const char * name_str = "I2C0::F"; };
template<> struct address_map< 0x40066002 > { static constexpr const char * name_str = "I2C0::C1"; };
template<> struct address_map< 0x40066003 > { static constexpr const char * name_str = "I2C0::S"; };
template<> struct address_map< 0x40066004 > { static constexpr const char * name_str = "I2C0::D"; };
template<> struct address_map< 0x40066005 > { static constexpr const char * name_str = "I2C0::C2"; };
template<> struct address_map< 0x40066006 > { static constexpr const char * name_str = "I2C0::FLT"; };
template<> struct address_map< 0x40066007 > { static constexpr const char * name_str = "I2C0::RA"; };
template<> struct address_map< 0x40066008 > { static constexpr const char * name_str = "I2C0::SMB"; };
template<> struct address_map< 0x40066009 > { static constexpr const char * name_str = "I2C0::A2"; };
template<> struct address_map< 0x4006600a > { static constexpr const char * name_str = "I2C0::SLTH"; };
template<> struct address_map< 0x4006600b > { static constexpr const char * name_str = "I2C0::SLTL"; };
template<> struct address_map< 0x40067000 > { static constexpr const char * name_str = "I2C1::A1"; };
template<> struct address_map< 0x40067001 > { static constexpr const char * name_str = "I2C1::F"; };
template<> struct address_map< 0x40067002 > { static constexpr const char * name_str = "I2C1::C1"; };
template<> struct address_map< 0x40067003 > { static constexpr const char * name_str = "I2C1::S"; };
template<> struct address_map< 0x40067004 > { static constexpr const char * name_str = "I2C1::D"; };
template<> struct address_map< 0x40067005 > { static constexpr const char * name_str = "I2C1::C2"; };
template<> struct address_map< 0x40067006 > { static constexpr const char * name_str = "I2C1::FLT"; };
template<> struct address_map< 0x40067007 > { static constexpr const char * name_str = "I2C1::RA"; };
template<> struct address_map< 0x40067008 > { static constexpr const char * name_str = "I2C1::SMB"; };
template<> struct address_map< 0x40067009 > { static constexpr const char * name_str = "I2C1::A2"; };
template<> struct address_map< 0x4006700a > { static constexpr const char * name_str = "I2C1::SLTH"; };
template<> struct address_map< 0x4006700b > { static constexpr const char * name_str = "I2C1::SLTL"; };
template<> struct address_map< 0x4006a000 > { static constexpr const char * name_str = "UART0::BDH"; };
template<> struct address_map< 0x4006a001 > { static constexpr const char * name_str = "UART0::BDL"; };
template<> struct address_map< 0x4006a002 > { static constexpr const char * name_str = "UART0::C1"; };
template<> struct address_map< 0x4006a003 > { static constexpr const char * name_str = "UART0::C2"; };
template<> struct address_map< 0x4006a004 > { static constexpr const char * name_str = "UART0::S1"; };
template<> struct address_map< 0x4006a005 > { static constexpr const char * name_str = "UART0::S2"; };
template<> struct address_map< 0x4006a006 > { static constexpr const char * name_str = "UART0::C3"; };
template<> struct address_map< 0x4006a007 > { static constexpr const char * name_str = "UART0::D"; };
template<> struct address_map< 0x4006a008 > { static constexpr const char * name_str = "UART0::MA1"; };
template<> struct address_map< 0x4006a009 > { static constexpr const char * name_str = "UART0::MA2"; };
template<> struct address_map< 0x4006a00a > { static constexpr const char * name_str = "UART0::C4"; };
template<> struct address_map< 0x4006a00b > { static constexpr const char * name_str = "UART0::C5"; };
template<> struct address_map< 0x4006a00c > { static constexpr const char * name_str = "UART0::ED"; };
template<> struct address_map< 0x4006a00d > { static constexpr const char * name_str = "UART0::MODEM"; };
template<> struct address_map< 0x4006a00e > { static constexpr const char * name_str = "UART0::IR"; };
template<> struct address_map< 0x4006a010 > { static constexpr const char * name_str = "UART0::PFIFO"; };
template<> struct address_map< 0x4006a011 > { static constexpr const char * name_str = "UART0::CFIFO"; };
template<> struct address_map< 0x4006a012 > { static constexpr const char * name_str = "UART0::SFIFO"; };
template<> struct address_map< 0x4006a013 > { static constexpr const char * name_str = "UART0::TWFIFO"; };
template<> struct address_map< 0x4006a014 > { static constexpr const char * name_str = "UART0::TCFIFO"; };
template<> struct address_map< 0x4006a015 > { static constexpr const char * name_str = "UART0::RWFIFO"; };
template<> struct address_map< 0x4006a016 > { static constexpr const char * name_str = "UART0::RCFIFO"; };
template<> struct address_map< 0x4006a018 > { static constexpr const char * name_str = "UART0::C7816"; };
template<> struct address_map< 0x4006a019 > { static constexpr const char * name_str = "UART0::IE7816"; };
template<> struct address_map< 0x4006a01a > { static constexpr const char * name_str = "UART0::IS7816"; };
template<> struct address_map< 0x4006a01b > { static constexpr const char * name_str = "UART0::WP7816T1"; };  /* svd2hpp: duplicate address for: UART0::WP7816T0, UART0::WP7816T1 */
template<> struct address_map< 0x4006a01c > { static constexpr const char * name_str = "UART0::WN7816"; };
template<> struct address_map< 0x4006a01d > { static constexpr const char * name_str = "UART0::WF7816"; };
template<> struct address_map< 0x4006a01e > { static constexpr const char * name_str = "UART0::ET7816"; };
template<> struct address_map< 0x4006a01f > { static constexpr const char * name_str = "UART0::TL7816"; };
template<> struct address_map< 0x4006a021 > { static constexpr const char * name_str = "UART0::C6"; };
template<> struct address_map< 0x4006a022 > { static constexpr const char * name_str = "UART0::PCTH"; };
template<> struct address_map< 0x4006a023 > { static constexpr const char * name_str = "UART0::PCTL"; };
template<> struct address_map< 0x4006a024 > { static constexpr const char * name_str = "UART0::B1T"; };
template<> struct address_map< 0x4006a025 > { static constexpr const char * name_str = "UART0::SDTH"; };
template<> struct address_map< 0x4006a026 > { static constexpr const char * name_str = "UART0::SDTL"; };
template<> struct address_map< 0x4006a027 > { static constexpr const char * name_str = "UART0::PRE"; };
template<> struct address_map< 0x4006a028 > { static constexpr const char * name_str = "UART0::TPL"; };
template<> struct address_map< 0x4006a029 > { static constexpr const char * name_str = "UART0::IE"; };
template<> struct address_map< 0x4006a02a > { static constexpr const char * name_str = "UART0::WB"; };
template<> struct address_map< 0x4006a02b > { static constexpr const char * name_str = "UART0::S3"; };
template<> struct address_map< 0x4006a02c > { static constexpr const char * name_str = "UART0::S4"; };
template<> struct address_map< 0x4006a02d > { static constexpr const char * name_str = "UART0::RPL"; };
template<> struct address_map< 0x4006a02e > { static constexpr const char * name_str = "UART0::RPREL"; };
template<> struct address_map< 0x4006a02f > { static constexpr const char * name_str = "UART0::CPW"; };
template<> struct address_map< 0x4006a030 > { static constexpr const char * name_str = "UART0::RIDT"; };
template<> struct address_map< 0x4006a031 > { static constexpr const char * name_str = "UART0::TIDT"; };
template<> struct address_map< 0x4006b000 > { static constexpr const char * name_str = "UART1::BDH"; };
template<> struct address_map< 0x4006b001 > { static constexpr const char * name_str = "UART1::BDL"; };
template<> struct address_map< 0x4006b002 > { static constexpr const char * name_str = "UART1::C1"; };
template<> struct address_map< 0x4006b003 > { static constexpr const char * name_str = "UART1::C2"; };
template<> struct address_map< 0x4006b004 > { static constexpr const char * name_str = "UART1::S1"; };
template<> struct address_map< 0x4006b005 > { static constexpr const char * name_str = "UART1::S2"; };
template<> struct address_map< 0x4006b006 > { static constexpr const char * name_str = "UART1::C3"; };
template<> struct address_map< 0x4006b007 > { static constexpr const char * name_str = "UART1::D"; };
template<> struct address_map< 0x4006b008 > { static constexpr const char * name_str = "UART1::MA1"; };
template<> struct address_map< 0x4006b009 > { static constexpr const char * name_str = "UART1::MA2"; };
template<> struct address_map< 0x4006b00a > { static constexpr const char * name_str = "UART1::C4"; };
template<> struct address_map< 0x4006b00b > { static constexpr const char * name_str = "UART1::C5"; };
template<> struct address_map< 0x4006b00c > { static constexpr const char * name_str = "UART1::ED"; };
template<> struct address_map< 0x4006b00d > { static constexpr const char * name_str = "UART1::MODEM"; };
template<> struct address_map< 0x4006b00e > { static constexpr const char * name_str = "UART1::IR"; };
template<> struct address_map< 0x4006b010 > { static constexpr const char * name_str = "UART1::PFIFO"; };
template<> struct address_map< 0x4006b011 > { static constexpr const char * name_str = "UART1::CFIFO"; };
template<> struct address_map< 0x4006b012 > { static constexpr const char * name_str = "UART1::SFIFO"; };
template<> struct address_map< 0x4006b013 > { static constexpr const char * name_str = "UART1::TWFIFO"; };
template<> struct address_map< 0x4006b014 > { static constexpr const char * name_str = "UART1::TCFIFO"; };
template<> struct address_map< 0x4006b015 > { static constexpr const char * name_str = "UART1::RWFIFO"; };
template<> struct address_map< 0x4006b016 > { static constexpr const char * name_str = "UART1::RCFIFO"; };
template<> struct address_map< 0x4006c000 > { static constexpr const char * name_str = "UART2::BDH"; };
template<> struct address_map< 0x4006c001 > { static constexpr const char * name_str = "UART2::BDL"; };
template<> struct address_map< 0x4006c002 > { static constexpr const char * name_str = "UART2::C1"; };
template<> struct address_map< 0x4006c003 > { static constexpr const char * name_str = "UART2::C2"; };
template<> struct address_map< 0x4006c004 > { static constexpr const char * name_str = "UART2::S1"; };
template<> struct address_map< 0x4006c005 > { static constexpr const char * name_str = "UART2::S2"; };
template<> struct address_map< 0x4006c006 > { static constexpr const char * name_str = "UART2::C3"; };
template<> struct address_map< 0x4006c007 > { static constexpr const char * name_str = "UART2::D"; };
template<> struct address_map< 0x4006c008 > { static constexpr const char * name_str = "UART2::MA1"; };
template<> struct address_map< 0x4006c009 > { static constexpr const char * name_str = "UART2::MA2"; };
template<> struct address_map< 0x4006c00a > { static constexpr const char * name_str = "UART2::C4"; };
template<> struct address_map< 0x4006c00b > { static constexpr const char * name_str = "UART2::C5"; };
template<> struct address_map< 0x4006c00c > { static constexpr const char * name_str = "UART2::ED"; };
template<> struct address_map< 0x4006c00d > { static constexpr const char * name_str = "UART2::MODEM"; };
template<> struct address_map< 0x4006c00e > { static constexpr const char * name_str = "UART2::IR"; };
template<> struct address_map< 0x4006c010 > { static constexpr const char * name_str = "UART2::PFIFO"; };
template<> struct address_map< 0x4006c011 > { static constexpr const char * name_str = "UART2::CFIFO"; };
template<> struct address_map< 0x4006c012 > { static constexpr const char * name_str = "UART2::SFIFO"; };
template<> struct address_map< 0x4006c013 > { static constexpr const char * name_str = "UART2::TWFIFO"; };
template<> struct address_map< 0x4006c014 > { static constexpr const char * name_str = "UART2::TCFIFO"; };
template<> struct address_map< 0x4006c015 > { static constexpr const char * name_str = "UART2::RWFIFO"; };
template<> struct address_map< 0x4006c016 > { static constexpr const char * name_str = "UART2::RCFIFO"; };
template<> struct address_map< 0x4006d000 > { static constexpr const char * name_str = "UART3::BDH"; };
template<> struct address_map< 0x4006d001 > { static constexpr const char * name_str = "UART3::BDL"; };
template<> struct address_map< 0x4006d002 > { static constexpr const char * name_str = "UART3::C1"; };
template<> struct address_map< 0x4006d003 > { static constexpr const char * name_str = "UART3::C2"; };
template<> struct address_map< 0x4006d004 > { static constexpr const char * name_str = "UART3::S1"; };
template<> struct address_map< 0x4006d005 > { static constexpr const char * name_str = "UART3::S2"; };
template<> struct address_map< 0x4006d006 > { static constexpr const char * name_str = "UART3::C3"; };
template<> struct address_map< 0x4006d007 > { static constexpr const char * name_str = "UART3::D"; };
template<> struct address_map< 0x4006d008 > { static constexpr const char * name_str = "UART3::MA1"; };
template<> struct address_map< 0x4006d009 > { static constexpr const char * name_str = "UART3::MA2"; };
template<> struct address_map< 0x4006d00a > { static constexpr const char * name_str = "UART3::C4"; };
template<> struct address_map< 0x4006d00b > { static constexpr const char * name_str = "UART3::C5"; };
template<> struct address_map< 0x4006d00c > { static constexpr const char * name_str = "UART3::ED"; };
template<> struct address_map< 0x4006d00d > { static constexpr const char * name_str = "UART3::MODEM"; };
template<> struct address_map< 0x4006d00e > { static constexpr const char * name_str = "UART3::IR"; };
template<> struct address_map< 0x4006d010 > { static constexpr const char * name_str = "UART3::PFIFO"; };
template<> struct address_map< 0x4006d011 > { static constexpr const char * name_str = "UART3::CFIFO"; };
template<> struct address_map< 0x4006d012 > { static constexpr const char * name_str = "UART3::SFIFO"; };
template<> struct address_map< 0x4006d013 > { static constexpr const char * name_str = "UART3::TWFIFO"; };
template<> struct address_map< 0x4006d014 > { static constexpr const char * name_str = "UART3::TCFIFO"; };
template<> struct address_map< 0x4006d015 > { static constexpr const char * name_str = "UART3::RWFIFO"; };
template<> struct address_map< 0x4006d016 > { static constexpr const char * name_str = "UART3::RCFIFO"; };
template<> struct address_map< 0x40072000 > { static constexpr const char * name_str = "USB0::PERID"; };
template<> struct address_map< 0x40072004 > { static constexpr const char * name_str = "USB0::IDCOMP"; };
template<> struct address_map< 0x40072008 > { static constexpr const char * name_str = "USB0::REV"; };
template<> struct address_map< 0x4007200c > { static constexpr const char * name_str = "USB0::ADDINFO"; };
template<> struct address_map< 0x40072010 > { static constexpr const char * name_str = "USB0::OTGISTAT"; };
template<> struct address_map< 0x40072014 > { static constexpr const char * name_str = "USB0::OTGICR"; };
template<> struct address_map< 0x40072018 > { static constexpr const char * name_str = "USB0::OTGSTAT"; };
template<> struct address_map< 0x4007201c > { static constexpr const char * name_str = "USB0::OTGCTL"; };
template<> struct address_map< 0x40072080 > { static constexpr const char * name_str = "USB0::ISTAT"; };
template<> struct address_map< 0x40072084 > { static constexpr const char * name_str = "USB0::INTEN"; };
template<> struct address_map< 0x40072088 > { static constexpr const char * name_str = "USB0::ERRSTAT"; };
template<> struct address_map< 0x4007208c > { static constexpr const char * name_str = "USB0::ERREN"; };
template<> struct address_map< 0x40072090 > { static constexpr const char * name_str = "USB0::STAT"; };
template<> struct address_map< 0x40072094 > { static constexpr const char * name_str = "USB0::CTL"; };
template<> struct address_map< 0x40072098 > { static constexpr const char * name_str = "USB0::ADDR"; };
template<> struct address_map< 0x4007209c > { static constexpr const char * name_str = "USB0::BDTPAGE1"; };
template<> struct address_map< 0x400720a0 > { static constexpr const char * name_str = "USB0::FRMNUML"; };
template<> struct address_map< 0x400720a4 > { static constexpr const char * name_str = "USB0::FRMNUMH"; };
template<> struct address_map< 0x400720a8 > { static constexpr const char * name_str = "USB0::TOKEN"; };
template<> struct address_map< 0x400720ac > { static constexpr const char * name_str = "USB0::SOFTHLD"; };
template<> struct address_map< 0x400720b0 > { static constexpr const char * name_str = "USB0::BDTPAGE2"; };
template<> struct address_map< 0x400720b4 > { static constexpr const char * name_str = "USB0::BDTPAGE3"; };
template<> struct address_map< 0x400720c0 > { static constexpr const char * name_str = "USB0::ENDPT%s"; };
template<> struct address_map< 0x40072100 > { static constexpr const char * name_str = "USB0::USBCTRL"; };
template<> struct address_map< 0x40072104 > { static constexpr const char * name_str = "USB0::OBSERVE"; };
template<> struct address_map< 0x40072108 > { static constexpr const char * name_str = "USB0::CONTROL"; };
template<> struct address_map< 0x4007210c > { static constexpr const char * name_str = "USB0::USBTRC0"; };
template<> struct address_map< 0x40072114 > { static constexpr const char * name_str = "USB0::USBFRMADJUST"; };
template<> struct address_map< 0x40073000 > { static constexpr const char * name_str = "CMP0::CR0"; };
template<> struct address_map< 0x40073001 > { static constexpr const char * name_str = "CMP0::CR1"; };
template<> struct address_map< 0x40073002 > { static constexpr const char * name_str = "CMP0::FPR"; };
template<> struct address_map< 0x40073003 > { static constexpr const char * name_str = "CMP0::SCR"; };
template<> struct address_map< 0x40073004 > { static constexpr const char * name_str = "CMP0::DACCR"; };
template<> struct address_map< 0x40073005 > { static constexpr const char * name_str = "CMP0::MUXCR"; };
template<> struct address_map< 0x40073008 > { static constexpr const char * name_str = "CMP1::CR0"; };
template<> struct address_map< 0x40073009 > { static constexpr const char * name_str = "CMP1::CR1"; };
template<> struct address_map< 0x4007300a > { static constexpr const char * name_str = "CMP1::FPR"; };
template<> struct address_map< 0x4007300b > { static constexpr const char * name_str = "CMP1::SCR"; };
template<> struct address_map< 0x4007300c > { static constexpr const char * name_str = "CMP1::DACCR"; };
template<> struct address_map< 0x4007300d > { static constexpr const char * name_str = "CMP1::MUXCR"; };
template<> struct address_map< 0x40073010 > { static constexpr const char * name_str = "CMP2::CR0"; };
template<> struct address_map< 0x40073011 > { static constexpr const char * name_str = "CMP2::CR1"; };
template<> struct address_map< 0x40073012 > { static constexpr const char * name_str = "CMP2::FPR"; };
template<> struct address_map< 0x40073013 > { static constexpr const char * name_str = "CMP2::SCR"; };
template<> struct address_map< 0x40073014 > { static constexpr const char * name_str = "CMP2::DACCR"; };
template<> struct address_map< 0x40073015 > { static constexpr const char * name_str = "CMP2::MUXCR"; };
template<> struct address_map< 0x40074000 > { static constexpr const char * name_str = "VREF::TRM"; };
template<> struct address_map< 0x40074001 > { static constexpr const char * name_str = "VREF::SC"; };
template<> struct address_map< 0x4007c000 > { static constexpr const char * name_str = "LLWU::PE1"; };
template<> struct address_map< 0x4007c001 > { static constexpr const char * name_str = "LLWU::PE2"; };
template<> struct address_map< 0x4007c002 > { static constexpr const char * name_str = "LLWU::PE3"; };
template<> struct address_map< 0x4007c003 > { static constexpr const char * name_str = "LLWU::PE4"; };
template<> struct address_map< 0x4007c004 > { static constexpr const char * name_str = "LLWU::ME"; };
template<> struct address_map< 0x4007c005 > { static constexpr const char * name_str = "LLWU::F1"; };
template<> struct address_map< 0x4007c006 > { static constexpr const char * name_str = "LLWU::F2"; };
template<> struct address_map< 0x4007c007 > { static constexpr const char * name_str = "LLWU::F3"; };
template<> struct address_map< 0x4007c008 > { static constexpr const char * name_str = "LLWU::FILT1"; };
template<> struct address_map< 0x4007c009 > { static constexpr const char * name_str = "LLWU::FILT2"; };
template<> struct address_map< 0x4007c00a > { static constexpr const char * name_str = "LLWU::RST"; };
template<> struct address_map< 0x4007d000 > { static constexpr const char * name_str = "PMC::LVDSC1"; };
template<> struct address_map< 0x4007d001 > { static constexpr const char * name_str = "PMC::LVDSC2"; };
template<> struct address_map< 0x4007d002 > { static constexpr const char * name_str = "PMC::REGSC"; };
template<> struct address_map< 0x4007e000 > { static constexpr const char * name_str = "SMC::PMPROT"; };
template<> struct address_map< 0x4007e001 > { static constexpr const char * name_str = "SMC::PMCTRL"; };
template<> struct address_map< 0x4007e002 > { static constexpr const char * name_str = "SMC::VLLSCTRL"; };
template<> struct address_map< 0x4007e003 > { static constexpr const char * name_str = "SMC::PMSTAT"; };
template<> struct address_map< 0x4007f000 > { static constexpr const char * name_str = "RCM::SRS0"; };
template<> struct address_map< 0x4007f001 > { static constexpr const char * name_str = "RCM::SRS1"; };
template<> struct address_map< 0x4007f004 > { static constexpr const char * name_str = "RCM::RPFC"; };
template<> struct address_map< 0x4007f005 > { static constexpr const char * name_str = "RCM::RPFW"; };
template<> struct address_map< 0x4007f007 > { static constexpr const char * name_str = "RCM::MR"; };
template<> struct address_map< 0x40080000 > { static constexpr const char * name_str = "AIPS1::MPRA"; };
template<> struct address_map< 0x40080020 > { static constexpr const char * name_str = "AIPS1::PACRA"; };
template<> struct address_map< 0x40080024 > { static constexpr const char * name_str = "AIPS1::PACRB"; };
template<> struct address_map< 0x40080028 > { static constexpr const char * name_str = "AIPS1::PACRC"; };
template<> struct address_map< 0x4008002c > { static constexpr const char * name_str = "AIPS1::PACRD"; };
template<> struct address_map< 0x40080040 > { static constexpr const char * name_str = "AIPS1::PACRE"; };
template<> struct address_map< 0x40080044 > { static constexpr const char * name_str = "AIPS1::PACRF"; };
template<> struct address_map< 0x40080048 > { static constexpr const char * name_str = "AIPS1::PACRG"; };
template<> struct address_map< 0x4008004c > { static constexpr const char * name_str = "AIPS1::PACRH"; };
template<> struct address_map< 0x40080050 > { static constexpr const char * name_str = "AIPS1::PACRI"; };
template<> struct address_map< 0x40080054 > { static constexpr const char * name_str = "AIPS1::PACRJ"; };
template<> struct address_map< 0x40080058 > { static constexpr const char * name_str = "AIPS1::PACRK"; };
template<> struct address_map< 0x4008005c > { static constexpr const char * name_str = "AIPS1::PACRL"; };
template<> struct address_map< 0x40080060 > { static constexpr const char * name_str = "AIPS1::PACRM"; };
template<> struct address_map< 0x40080064 > { static constexpr const char * name_str = "AIPS1::PACRN"; };
template<> struct address_map< 0x40080068 > { static constexpr const char * name_str = "AIPS1::PACRO"; };
template<> struct address_map< 0x4008006c > { static constexpr const char * name_str = "AIPS1::PACRP"; };
template<> struct address_map< 0x400ac000 > { static constexpr const char * name_str = "SPI2::MCR"; };
template<> struct address_map< 0x400ac008 > { static constexpr const char * name_str = "SPI2::TCR"; };
template<> struct address_map< 0x400ac00c > { static constexpr const char * name_str = "SPI2::CTAR%s"; };  /* svd2hpp: duplicate address for: SPI2::CTAR%s, SPI2::CTAR_SLAVE */
template<> struct address_map< 0x400ac02c > { static constexpr const char * name_str = "SPI2::SR"; };
template<> struct address_map< 0x400ac030 > { static constexpr const char * name_str = "SPI2::RSER"; };
template<> struct address_map< 0x400ac034 > { static constexpr const char * name_str = "SPI2::PUSHR"; };  /* svd2hpp: duplicate address for: SPI2::PUSHR, SPI2::PUSHR_SLAVE */
template<> struct address_map< 0x400ac038 > { static constexpr const char * name_str = "SPI2::POPR"; };
template<> struct address_map< 0x400ac03c > { static constexpr const char * name_str = "SPI2::TXFR%s"; };
template<> struct address_map< 0x400ac07c > { static constexpr const char * name_str = "SPI2::RXFR%s"; };
template<> struct address_map< 0x400b1000 > { static constexpr const char * name_str = "SDHC::DSADDR"; };
template<> struct address_map< 0x400b1004 > { static constexpr const char * name_str = "SDHC::BLKATTR"; };
template<> struct address_map< 0x400b1008 > { static constexpr const char * name_str = "SDHC::CMDARG"; };
template<> struct address_map< 0x400b100c > { static constexpr const char * name_str = "SDHC::XFERTYP"; };
template<> struct address_map< 0x400b1010 > { static constexpr const char * name_str = "SDHC::CMDRSP0"; };
template<> struct address_map< 0x400b1014 > { static constexpr const char * name_str = "SDHC::CMDRSP1"; };
template<> struct address_map< 0x400b1018 > { static constexpr const char * name_str = "SDHC::CMDRSP2"; };
template<> struct address_map< 0x400b101c > { static constexpr const char * name_str = "SDHC::CMDRSP3"; };
template<> struct address_map< 0x400b1020 > { static constexpr const char * name_str = "SDHC::DATPORT"; };
template<> struct address_map< 0x400b1024 > { static constexpr const char * name_str = "SDHC::PRSSTAT"; };
template<> struct address_map< 0x400b1028 > { static constexpr const char * name_str = "SDHC::PROCTL"; };
template<> struct address_map< 0x400b102c > { static constexpr const char * name_str = "SDHC::SYSCTL"; };
template<> struct address_map< 0x400b1030 > { static constexpr const char * name_str = "SDHC::IRQSTAT"; };
template<> struct address_map< 0x400b1034 > { static constexpr const char * name_str = "SDHC::IRQSTATEN"; };
template<> struct address_map< 0x400b1038 > { static constexpr const char * name_str = "SDHC::IRQSIGEN"; };
template<> struct address_map< 0x400b103c > { static constexpr const char * name_str = "SDHC::AC12ERR"; };
template<> struct address_map< 0x400b1040 > { static constexpr const char * name_str = "SDHC::HTCAPBLT"; };
template<> struct address_map< 0x400b1044 > { static constexpr const char * name_str = "SDHC::WML"; };
template<> struct address_map< 0x400b1050 > { static constexpr const char * name_str = "SDHC::FEVT"; };
template<> struct address_map< 0x400b1054 > { static constexpr const char * name_str = "SDHC::ADMAES"; };
template<> struct address_map< 0x400b1058 > { static constexpr const char * name_str = "SDHC::ADSADDR"; };
template<> struct address_map< 0x400b10c0 > { static constexpr const char * name_str = "SDHC::VENDOR"; };
template<> struct address_map< 0x400b10c4 > { static constexpr const char * name_str = "SDHC::MMCBOOT"; };
template<> struct address_map< 0x400b10fc > { static constexpr const char * name_str = "SDHC::HOSTVER"; };
template<> struct address_map< 0x400b8000 > { static constexpr const char * name_str = "FTM2::SC"; };
template<> struct address_map< 0x400b8004 > { static constexpr const char * name_str = "FTM2::CNT"; };
template<> struct address_map< 0x400b8008 > { static constexpr const char * name_str = "FTM2::MOD"; };
template<> struct address_map< 0x400b800c > { static constexpr const char * name_str = "FTM2::C%sSC"; };
template<> struct address_map< 0x400b8010 > { static constexpr const char * name_str = "FTM2::C%sV"; };
template<> struct address_map< 0x400b804c > { static constexpr const char * name_str = "FTM2::CNTIN"; };
template<> struct address_map< 0x400b8050 > { static constexpr const char * name_str = "FTM2::STATUS"; };
template<> struct address_map< 0x400b8054 > { static constexpr const char * name_str = "FTM2::MODE"; };
template<> struct address_map< 0x400b8058 > { static constexpr const char * name_str = "FTM2::SYNC"; };
template<> struct address_map< 0x400b805c > { static constexpr const char * name_str = "FTM2::OUTINIT"; };
template<> struct address_map< 0x400b8060 > { static constexpr const char * name_str = "FTM2::OUTMASK"; };
template<> struct address_map< 0x400b8064 > { static constexpr const char * name_str = "FTM2::COMBINE"; };
template<> struct address_map< 0x400b8068 > { static constexpr const char * name_str = "FTM2::DEADTIME"; };
template<> struct address_map< 0x400b806c > { static constexpr const char * name_str = "FTM2::EXTTRIG"; };
template<> struct address_map< 0x400b8070 > { static constexpr const char * name_str = "FTM2::POL"; };
template<> struct address_map< 0x400b8074 > { static constexpr const char * name_str = "FTM2::FMS"; };
template<> struct address_map< 0x400b8078 > { static constexpr const char * name_str = "FTM2::FILTER"; };
template<> struct address_map< 0x400b807c > { static constexpr const char * name_str = "FTM2::FLTCTRL"; };
template<> struct address_map< 0x400b8080 > { static constexpr const char * name_str = "FTM2::QDCTRL"; };
template<> struct address_map< 0x400b8084 > { static constexpr const char * name_str = "FTM2::CONF"; };
template<> struct address_map< 0x400b8088 > { static constexpr const char * name_str = "FTM2::FLTPOL"; };
template<> struct address_map< 0x400b808c > { static constexpr const char * name_str = "FTM2::SYNCONF"; };
template<> struct address_map< 0x400b8090 > { static constexpr const char * name_str = "FTM2::INVCTRL"; };
template<> struct address_map< 0x400b8094 > { static constexpr const char * name_str = "FTM2::SWOCTRL"; };
template<> struct address_map< 0x400b8098 > { static constexpr const char * name_str = "FTM2::PWMLOAD"; };
template<> struct address_map< 0x400bb000 > { static constexpr const char * name_str = "ADC1::SC1%s"; };
template<> struct address_map< 0x400bb008 > { static constexpr const char * name_str = "ADC1::CFG1"; };
template<> struct address_map< 0x400bb00c > { static constexpr const char * name_str = "ADC1::CFG2"; };
template<> struct address_map< 0x400bb010 > { static constexpr const char * name_str = "ADC1::R%s"; };
template<> struct address_map< 0x400bb018 > { static constexpr const char * name_str = "ADC1::CV%s"; };
template<> struct address_map< 0x400bb020 > { static constexpr const char * name_str = "ADC1::SC2"; };
template<> struct address_map< 0x400bb024 > { static constexpr const char * name_str = "ADC1::SC3"; };
template<> struct address_map< 0x400bb028 > { static constexpr const char * name_str = "ADC1::OFS"; };
template<> struct address_map< 0x400bb02c > { static constexpr const char * name_str = "ADC1::PG"; };
template<> struct address_map< 0x400bb030 > { static constexpr const char * name_str = "ADC1::MG"; };
template<> struct address_map< 0x400bb034 > { static constexpr const char * name_str = "ADC1::CLPD"; };
template<> struct address_map< 0x400bb038 > { static constexpr const char * name_str = "ADC1::CLPS"; };
template<> struct address_map< 0x400bb03c > { static constexpr const char * name_str = "ADC1::CLP4"; };
template<> struct address_map< 0x400bb040 > { static constexpr const char * name_str = "ADC1::CLP3"; };
template<> struct address_map< 0x400bb044 > { static constexpr const char * name_str = "ADC1::CLP2"; };
template<> struct address_map< 0x400bb048 > { static constexpr const char * name_str = "ADC1::CLP1"; };
template<> struct address_map< 0x400bb04c > { static constexpr const char * name_str = "ADC1::CLP0"; };
template<> struct address_map< 0x400bb050 > { static constexpr const char * name_str = "ADC1::PGA"; };
template<> struct address_map< 0x400bb054 > { static constexpr const char * name_str = "ADC1::CLMD"; };
template<> struct address_map< 0x400bb058 > { static constexpr const char * name_str = "ADC1::CLMS"; };
template<> struct address_map< 0x400bb05c > { static constexpr const char * name_str = "ADC1::CLM4"; };
template<> struct address_map< 0x400bb060 > { static constexpr const char * name_str = "ADC1::CLM3"; };
template<> struct address_map< 0x400bb064 > { static constexpr const char * name_str = "ADC1::CLM2"; };
template<> struct address_map< 0x400bb068 > { static constexpr const char * name_str = "ADC1::CLM1"; };
template<> struct address_map< 0x400bb06c > { static constexpr const char * name_str = "ADC1::CLM0"; };
template<> struct address_map< 0x400cc000 > { static constexpr const char * name_str = "DAC0::DAT%sL"; };
template<> struct address_map< 0x400cc001 > { static constexpr const char * name_str = "DAC0::DAT%sH"; };
template<> struct address_map< 0x400cc020 > { static constexpr const char * name_str = "DAC0::SR"; };
template<> struct address_map< 0x400cc021 > { static constexpr const char * name_str = "DAC0::C0"; };
template<> struct address_map< 0x400cc022 > { static constexpr const char * name_str = "DAC0::C1"; };
template<> struct address_map< 0x400cc023 > { static constexpr const char * name_str = "DAC0::C2"; };
template<> struct address_map< 0x400cd000 > { static constexpr const char * name_str = "DAC1::DAT%sL"; };
template<> struct address_map< 0x400cd001 > { static constexpr const char * name_str = "DAC1::DAT%sH"; };
template<> struct address_map< 0x400cd020 > { static constexpr const char * name_str = "DAC1::SR"; };
template<> struct address_map< 0x400cd021 > { static constexpr const char * name_str = "DAC1::C0"; };
template<> struct address_map< 0x400cd022 > { static constexpr const char * name_str = "DAC1::C1"; };
template<> struct address_map< 0x400cd023 > { static constexpr const char * name_str = "DAC1::C2"; };
template<> struct address_map< 0x400ea000 > { static constexpr const char * name_str = "UART4::BDH"; };
template<> struct address_map< 0x400ea001 > { static constexpr const char * name_str = "UART4::BDL"; };
template<> struct address_map< 0x400ea002 > { static constexpr const char * name_str = "UART4::C1"; };
template<> struct address_map< 0x400ea003 > { static constexpr const char * name_str = "UART4::C2"; };
template<> struct address_map< 0x400ea004 > { static constexpr const char * name_str = "UART4::S1"; };
template<> struct address_map< 0x400ea005 > { static constexpr const char * name_str = "UART4::S2"; };
template<> struct address_map< 0x400ea006 > { static constexpr const char * name_str = "UART4::C3"; };
template<> struct address_map< 0x400ea007 > { static constexpr const char * name_str = "UART4::D"; };
template<> struct address_map< 0x400ea008 > { static constexpr const char * name_str = "UART4::MA1"; };
template<> struct address_map< 0x400ea009 > { static constexpr const char * name_str = "UART4::MA2"; };
template<> struct address_map< 0x400ea00a > { static constexpr const char * name_str = "UART4::C4"; };
template<> struct address_map< 0x400ea00b > { static constexpr const char * name_str = "UART4::C5"; };
template<> struct address_map< 0x400ea00c > { static constexpr const char * name_str = "UART4::ED"; };
template<> struct address_map< 0x400ea00d > { static constexpr const char * name_str = "UART4::MODEM"; };
template<> struct address_map< 0x400ea00e > { static constexpr const char * name_str = "UART4::IR"; };
template<> struct address_map< 0x400ea010 > { static constexpr const char * name_str = "UART4::PFIFO"; };
template<> struct address_map< 0x400ea011 > { static constexpr const char * name_str = "UART4::CFIFO"; };
template<> struct address_map< 0x400ea012 > { static constexpr const char * name_str = "UART4::SFIFO"; };
template<> struct address_map< 0x400ea013 > { static constexpr const char * name_str = "UART4::TWFIFO"; };
template<> struct address_map< 0x400ea014 > { static constexpr const char * name_str = "UART4::TCFIFO"; };
template<> struct address_map< 0x400ea015 > { static constexpr const char * name_str = "UART4::RWFIFO"; };
template<> struct address_map< 0x400ea016 > { static constexpr const char * name_str = "UART4::RCFIFO"; };
template<> struct address_map< 0x400eb000 > { static constexpr const char * name_str = "UART5::BDH"; };
template<> struct address_map< 0x400eb001 > { static constexpr const char * name_str = "UART5::BDL"; };
template<> struct address_map< 0x400eb002 > { static constexpr const char * name_str = "UART5::C1"; };
template<> struct address_map< 0x400eb003 > { static constexpr const char * name_str = "UART5::C2"; };
template<> struct address_map< 0x400eb004 > { static constexpr const char * name_str = "UART5::S1"; };
template<> struct address_map< 0x400eb005 > { static constexpr const char * name_str = "UART5::S2"; };
template<> struct address_map< 0x400eb006 > { static constexpr const char * name_str = "UART5::C3"; };
template<> struct address_map< 0x400eb007 > { static constexpr const char * name_str = "UART5::D"; };
template<> struct address_map< 0x400eb008 > { static constexpr const char * name_str = "UART5::MA1"; };
template<> struct address_map< 0x400eb009 > { static constexpr const char * name_str = "UART5::MA2"; };
template<> struct address_map< 0x400eb00a > { static constexpr const char * name_str = "UART5::C4"; };
template<> struct address_map< 0x400eb00b > { static constexpr const char * name_str = "UART5::C5"; };
template<> struct address_map< 0x400eb00c > { static constexpr const char * name_str = "UART5::ED"; };
template<> struct address_map< 0x400eb00d > { static constexpr const char * name_str = "UART5::MODEM"; };
template<> struct address_map< 0x400eb00e > { static constexpr const char * name_str = "UART5::IR"; };
template<> struct address_map< 0x400eb010 > { static constexpr const char * name_str = "UART5::PFIFO"; };
template<> struct address_map< 0x400eb011 > { static constexpr const char * name_str = "UART5::CFIFO"; };
template<> struct address_map< 0x400eb012 > { static constexpr const char * name_str = "UART5::SFIFO"; };
template<> struct address_map< 0x400eb013 > { static constexpr const char * name_str = "UART5::TWFIFO"; };
template<> struct address_map< 0x400eb014 > { static constexpr const char * name_str = "UART5::TCFIFO"; };
template<> struct address_map< 0x400eb015 > { static constexpr const char * name_str = "UART5::RWFIFO"; };
template<> struct address_map< 0x400eb016 > { static constexpr const char * name_str = "UART5::RCFIFO"; };
template<> struct address_map< 0x400f5000 > { static constexpr const char * name_str = "OPAMP0::C0"; };
template<> struct address_map< 0x400f5001 > { static constexpr const char * name_str = "OPAMP0::C1"; };
template<> struct address_map< 0x400f5002 > { static constexpr const char * name_str = "OPAMP0::C2"; };
template<> struct address_map< 0x400f5800 > { static constexpr const char * name_str = "OPAMP1::C0"; };
template<> struct address_map< 0x400f5801 > { static constexpr const char * name_str = "OPAMP1::C1"; };
template<> struct address_map< 0x400f5802 > { static constexpr const char * name_str = "OPAMP1::C2"; };
template<> struct address_map< 0x400f8000 > { static constexpr const char * name_str = "TRIAMP0::C0"; };
template<> struct address_map< 0x400f8800 > { static constexpr const char * name_str = "TRIAMP1::C0"; };
template<> struct address_map< 0x400ff000 > { static constexpr const char * name_str = "GPIOA::PDOR"; };
template<> struct address_map< 0x400ff004 > { static constexpr const char * name_str = "GPIOA::PSOR"; };
template<> struct address_map< 0x400ff008 > { static constexpr const char * name_str = "GPIOA::PCOR"; };
template<> struct address_map< 0x400ff00c > { static constexpr const char * name_str = "GPIOA::PTOR"; };
template<> struct address_map< 0x400ff010 > { static constexpr const char * name_str = "GPIOA::PDIR"; };
template<> struct address_map< 0x400ff014 > { static constexpr const char * name_str = "GPIOA::PDDR"; };
template<> struct address_map< 0x400ff040 > { static constexpr const char * name_str = "GPIOB::PDOR"; };
template<> struct address_map< 0x400ff044 > { static constexpr const char * name_str = "GPIOB::PSOR"; };
template<> struct address_map< 0x400ff048 > { static constexpr const char * name_str = "GPIOB::PCOR"; };
template<> struct address_map< 0x400ff04c > { static constexpr const char * name_str = "GPIOB::PTOR"; };
template<> struct address_map< 0x400ff050 > { static constexpr const char * name_str = "GPIOB::PDIR"; };
template<> struct address_map< 0x400ff054 > { static constexpr const char * name_str = "GPIOB::PDDR"; };
template<> struct address_map< 0x400ff080 > { static constexpr const char * name_str = "GPIOC::PDOR"; };
template<> struct address_map< 0x400ff084 > { static constexpr const char * name_str = "GPIOC::PSOR"; };
template<> struct address_map< 0x400ff088 > { static constexpr const char * name_str = "GPIOC::PCOR"; };
template<> struct address_map< 0x400ff08c > { static constexpr const char * name_str = "GPIOC::PTOR"; };
template<> struct address_map< 0x400ff090 > { static constexpr const char * name_str = "GPIOC::PDIR"; };
template<> struct address_map< 0x400ff094 > { static constexpr const char * name_str = "GPIOC::PDDR"; };
template<> struct address_map< 0x400ff0c0 > { static constexpr const char * name_str = "GPIOD::PDOR"; };
template<> struct address_map< 0x400ff0c4 > { static constexpr const char * name_str = "GPIOD::PSOR"; };
template<> struct address_map< 0x400ff0c8 > { static constexpr const char * name_str = "GPIOD::PCOR"; };
template<> struct address_map< 0x400ff0cc > { static constexpr const char * name_str = "GPIOD::PTOR"; };
template<> struct address_map< 0x400ff0d0 > { static constexpr const char * name_str = "GPIOD::PDIR"; };
template<> struct address_map< 0x400ff0d4 > { static constexpr const char * name_str = "GPIOD::PDDR"; };
template<> struct address_map< 0x400ff100 > { static constexpr const char * name_str = "GPIOE::PDOR"; };
template<> struct address_map< 0x400ff104 > { static constexpr const char * name_str = "GPIOE::PSOR"; };
template<> struct address_map< 0x400ff108 > { static constexpr const char * name_str = "GPIOE::PCOR"; };
template<> struct address_map< 0x400ff10c > { static constexpr const char * name_str = "GPIOE::PTOR"; };
template<> struct address_map< 0x400ff110 > { static constexpr const char * name_str = "GPIOE::PDIR"; };
template<> struct address_map< 0x400ff114 > { static constexpr const char * name_str = "GPIOE::PDDR"; };
template<> struct address_map< 0xe0080008 > { static constexpr const char * name_str = "MCM::PLASC"; };
template<> struct address_map< 0xe008000a > { static constexpr const char * name_str = "MCM::PLAMC"; };
template<> struct address_map< 0xe008000c > { static constexpr const char * name_str = "MCM::CR"; };
template<> struct address_map< 0xe0080010 > { static constexpr const char * name_str = "MCM::ISR"; };
template<> struct address_map< 0xe0080014 > { static constexpr const char * name_str = "MCM::ETBCC"; };
template<> struct address_map< 0xe0080018 > { static constexpr const char * name_str = "MCM::ETBRL"; };
template<> struct address_map< 0xe008001c > { static constexpr const char * name_str = "MCM::ETBCNT"; };
template<> struct address_map< 0xe0080030 > { static constexpr const char * name_str = "MCM::PID"; };

} // namespace mptl

#endif // ARCH_REG_ADDRESS_MAP_HPP_INCLUDED
