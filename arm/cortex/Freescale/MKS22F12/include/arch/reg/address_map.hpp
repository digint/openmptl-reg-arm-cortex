/*
 * OpenMPTL - C++ Microprocessor Template Library
 *
 * This program is a derivative representation of a CMSIS System View
 * Description (SVD) file, and is subject to the corresponding license
 * (see "Freescale CMSIS-SVD License Agreement.pdf" in the parent directory).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */

////////////////////////////////////////////////////////////////////////
//
//  Import from CMSIS-SVD: "Freescale/MKS22F12.svd"
//
//  vendor: Freescale Semiconductor, Inc.
//  vendorID: Freescale
//  name: MKS22F12
//  series: Kinetis_K
//  version: 1.6
//  description: MKS22F12 Freescale Microcontroller
//  --------------------------------------------------------------------
//
//  C++ Header file, containing architecture specific register
//  declarations for use in OpenMPTL. It has been converted directly
//  from a CMSIS-SVD file.
//
//  https://digint.ch/openmptl
//  https://github.com/posborne/cmsis-svd
//

#ifndef ARCH_REG_ADDRESS_MAP_HPP_INCLUDED
#define ARCH_REG_ADDRESS_MAP_HPP_INCLUDED

#warning "using untested register declarations"

#include <register_type.hpp>

namespace mptl {

template<reg_addr_t addr>
struct address_map {
  static constexpr const char * name_str = nullptr;
};

template<> struct address_map< 0x00000400 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY3"; };
template<> struct address_map< 0x00000401 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY2"; };
template<> struct address_map< 0x00000402 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY1"; };
template<> struct address_map< 0x00000403 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY0"; };
template<> struct address_map< 0x00000404 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY7"; };
template<> struct address_map< 0x00000405 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY6"; };
template<> struct address_map< 0x00000406 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY5"; };
template<> struct address_map< 0x00000407 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY4"; };
template<> struct address_map< 0x00000408 > { static constexpr const char * name_str = "FTFA_FlashConfig::FPROT3"; };
template<> struct address_map< 0x00000409 > { static constexpr const char * name_str = "FTFA_FlashConfig::FPROT2"; };
template<> struct address_map< 0x0000040a > { static constexpr const char * name_str = "FTFA_FlashConfig::FPROT1"; };
template<> struct address_map< 0x0000040b > { static constexpr const char * name_str = "FTFA_FlashConfig::FPROT0"; };
template<> struct address_map< 0x0000040c > { static constexpr const char * name_str = "FTFA_FlashConfig::FSEC"; };
template<> struct address_map< 0x0000040d > { static constexpr const char * name_str = "FTFA_FlashConfig::FOPT"; };
template<> struct address_map< 0x40008000 > { static constexpr const char * name_str = "DMA::CR"; };
template<> struct address_map< 0x40008004 > { static constexpr const char * name_str = "DMA::ES"; };
template<> struct address_map< 0x4000800c > { static constexpr const char * name_str = "DMA::ERQ"; };
template<> struct address_map< 0x40008014 > { static constexpr const char * name_str = "DMA::EEI"; };
template<> struct address_map< 0x40008018 > { static constexpr const char * name_str = "DMA::CEEI"; };
template<> struct address_map< 0x40008019 > { static constexpr const char * name_str = "DMA::SEEI"; };
template<> struct address_map< 0x4000801a > { static constexpr const char * name_str = "DMA::CERQ"; };
template<> struct address_map< 0x4000801b > { static constexpr const char * name_str = "DMA::SERQ"; };
template<> struct address_map< 0x4000801c > { static constexpr const char * name_str = "DMA::CDNE"; };
template<> struct address_map< 0x4000801d > { static constexpr const char * name_str = "DMA::SSRT"; };
template<> struct address_map< 0x4000801e > { static constexpr const char * name_str = "DMA::CERR"; };
template<> struct address_map< 0x4000801f > { static constexpr const char * name_str = "DMA::CINT"; };
template<> struct address_map< 0x40008024 > { static constexpr const char * name_str = "DMA::INT"; };
template<> struct address_map< 0x4000802c > { static constexpr const char * name_str = "DMA::ERR"; };
template<> struct address_map< 0x40008034 > { static constexpr const char * name_str = "DMA::HRS"; };
template<> struct address_map< 0x40008044 > { static constexpr const char * name_str = "DMA::EARS"; };
template<> struct address_map< 0x40008100 > { static constexpr const char * name_str = "DMA::DCHPRI%s"; };
template<> struct address_map< 0x40009000 > { static constexpr const char * name_str = "DMA::TCD%s_SADDR"; };
template<> struct address_map< 0x40009004 > { static constexpr const char * name_str = "DMA::TCD%s_SOFF"; };
template<> struct address_map< 0x40009006 > { static constexpr const char * name_str = "DMA::TCD%s_ATTR"; };
template<> struct address_map< 0x40009008 > { static constexpr const char * name_str = "DMA::TCD%s_NBYTES_MLNO"; };  /* svd2hpp: duplicate address for: DMA::TCD%s_NBYTES_MLNO, DMA::TCD%s_NBYTES_MLOFFNO, DMA::TCD%s_NBYTES_MLOFFYES */
template<> struct address_map< 0x4000900c > { static constexpr const char * name_str = "DMA::TCD%s_SLAST"; };
template<> struct address_map< 0x40009010 > { static constexpr const char * name_str = "DMA::TCD%s_DADDR"; };
template<> struct address_map< 0x40009014 > { static constexpr const char * name_str = "DMA::TCD%s_DOFF"; };
template<> struct address_map< 0x40009016 > { static constexpr const char * name_str = "DMA::TCD%s_CITER_ELINKNO"; };  /* svd2hpp: duplicate address for: DMA::TCD%s_CITER_ELINKNO, DMA::TCD%s_CITER_ELINKYES */
template<> struct address_map< 0x40009018 > { static constexpr const char * name_str = "DMA::TCD%s_DLASTSGA"; };
template<> struct address_map< 0x4000901c > { static constexpr const char * name_str = "DMA::TCD%s_CSR"; };
template<> struct address_map< 0x4000901e > { static constexpr const char * name_str = "DMA::TCD%s_BITER_ELINKNO"; };  /* svd2hpp: duplicate address for: DMA::TCD%s_BITER_ELINKNO, DMA::TCD%s_BITER_ELINKYES */
template<> struct address_map< 0x4001f000 > { static constexpr const char * name_str = "FMC::PFAPR"; };
template<> struct address_map< 0x4001f004 > { static constexpr const char * name_str = "FMC::PFB0CR"; };
template<> struct address_map< 0x4001f008 > { static constexpr const char * name_str = "FMC::PFB1CR"; };
template<> struct address_map< 0x4001f100 > { static constexpr const char * name_str = "FMC::TAGVDW0S%s"; };
template<> struct address_map< 0x4001f120 > { static constexpr const char * name_str = "FMC::TAGVDW1S%s"; };
template<> struct address_map< 0x4001f140 > { static constexpr const char * name_str = "FMC::TAGVDW2S%s"; };
template<> struct address_map< 0x4001f160 > { static constexpr const char * name_str = "FMC::TAGVDW3S%s"; };
template<> struct address_map< 0x4001f200 > { static constexpr const char * name_str = "FMC::DATAW0S%sU"; };
template<> struct address_map< 0x4001f204 > { static constexpr const char * name_str = "FMC::DATAW0S%sL"; };
template<> struct address_map< 0x4001f240 > { static constexpr const char * name_str = "FMC::DATAW1S%sU"; };
template<> struct address_map< 0x4001f244 > { static constexpr const char * name_str = "FMC::DATAW1S%sL"; };
template<> struct address_map< 0x4001f280 > { static constexpr const char * name_str = "FMC::DATAW2S%sU"; };
template<> struct address_map< 0x4001f284 > { static constexpr const char * name_str = "FMC::DATAW2S%sL"; };
template<> struct address_map< 0x4001f2c0 > { static constexpr const char * name_str = "FMC::DATAW3S%sU"; };
template<> struct address_map< 0x4001f2c4 > { static constexpr const char * name_str = "FMC::DATAW3S%sL"; };
template<> struct address_map< 0x40020000 > { static constexpr const char * name_str = "FTFA::FSTAT"; };
template<> struct address_map< 0x40020001 > { static constexpr const char * name_str = "FTFA::FCNFG"; };
template<> struct address_map< 0x40020002 > { static constexpr const char * name_str = "FTFA::FSEC"; };
template<> struct address_map< 0x40020003 > { static constexpr const char * name_str = "FTFA::FOPT"; };
template<> struct address_map< 0x40020004 > { static constexpr const char * name_str = "FTFA::FCCOB%s"; };
template<> struct address_map< 0x40020010 > { static constexpr const char * name_str = "FTFA::FPROT%s"; };
template<> struct address_map< 0x40020018 > { static constexpr const char * name_str = "FTFA::XACC%s"; };
template<> struct address_map< 0x40020020 > { static constexpr const char * name_str = "FTFA::SACC%s"; };
template<> struct address_map< 0x40020028 > { static constexpr const char * name_str = "FTFA::FACSS"; };
template<> struct address_map< 0x4002002b > { static constexpr const char * name_str = "FTFA::FACSN"; };
template<> struct address_map< 0x40021000 > { static constexpr const char * name_str = "DMAMUX::CHCFG%s"; };
template<> struct address_map< 0x40024000 > { static constexpr const char * name_str = "CAN0::MCR"; };
template<> struct address_map< 0x40024004 > { static constexpr const char * name_str = "CAN0::CTRL1"; };
template<> struct address_map< 0x40024008 > { static constexpr const char * name_str = "CAN0::TIMER"; };
template<> struct address_map< 0x40024010 > { static constexpr const char * name_str = "CAN0::RXMGMASK"; };
template<> struct address_map< 0x40024014 > { static constexpr const char * name_str = "CAN0::RX14MASK"; };
template<> struct address_map< 0x40024018 > { static constexpr const char * name_str = "CAN0::RX15MASK"; };
template<> struct address_map< 0x4002401c > { static constexpr const char * name_str = "CAN0::ECR"; };
template<> struct address_map< 0x40024020 > { static constexpr const char * name_str = "CAN0::ESR1"; };
template<> struct address_map< 0x40024028 > { static constexpr const char * name_str = "CAN0::IMASK1"; };
template<> struct address_map< 0x40024030 > { static constexpr const char * name_str = "CAN0::IFLAG1"; };
template<> struct address_map< 0x40024034 > { static constexpr const char * name_str = "CAN0::CTRL2"; };
template<> struct address_map< 0x40024038 > { static constexpr const char * name_str = "CAN0::ESR2"; };
template<> struct address_map< 0x40024044 > { static constexpr const char * name_str = "CAN0::CRCR"; };
template<> struct address_map< 0x40024048 > { static constexpr const char * name_str = "CAN0::RXFGMASK"; };
template<> struct address_map< 0x4002404c > { static constexpr const char * name_str = "CAN0::RXFIR"; };
template<> struct address_map< 0x40024050 > { static constexpr const char * name_str = "CAN0::CBT"; };
template<> struct address_map< 0x40024080 > { static constexpr const char * name_str = "CAN0::CS0"; };
template<> struct address_map< 0x40024084 > { static constexpr const char * name_str = "CAN0::ID0"; };
template<> struct address_map< 0x40024088 > { static constexpr const char * name_str = "CAN0::WORD00"; };
template<> struct address_map< 0x4002408c > { static constexpr const char * name_str = "CAN0::WORD10"; };
template<> struct address_map< 0x40024090 > { static constexpr const char * name_str = "CAN0::CS1"; };
template<> struct address_map< 0x40024094 > { static constexpr const char * name_str = "CAN0::ID1"; };
template<> struct address_map< 0x40024098 > { static constexpr const char * name_str = "CAN0::WORD01"; };
template<> struct address_map< 0x4002409c > { static constexpr const char * name_str = "CAN0::WORD11"; };
template<> struct address_map< 0x400240a0 > { static constexpr const char * name_str = "CAN0::CS2"; };
template<> struct address_map< 0x400240a4 > { static constexpr const char * name_str = "CAN0::ID2"; };
template<> struct address_map< 0x400240a8 > { static constexpr const char * name_str = "CAN0::WORD02"; };
template<> struct address_map< 0x400240ac > { static constexpr const char * name_str = "CAN0::WORD12"; };
template<> struct address_map< 0x400240b0 > { static constexpr const char * name_str = "CAN0::CS3"; };
template<> struct address_map< 0x400240b4 > { static constexpr const char * name_str = "CAN0::ID3"; };
template<> struct address_map< 0x400240b8 > { static constexpr const char * name_str = "CAN0::WORD03"; };
template<> struct address_map< 0x400240bc > { static constexpr const char * name_str = "CAN0::WORD13"; };
template<> struct address_map< 0x400240c0 > { static constexpr const char * name_str = "CAN0::CS4"; };
template<> struct address_map< 0x400240c4 > { static constexpr const char * name_str = "CAN0::ID4"; };
template<> struct address_map< 0x400240c8 > { static constexpr const char * name_str = "CAN0::WORD04"; };
template<> struct address_map< 0x400240cc > { static constexpr const char * name_str = "CAN0::WORD14"; };
template<> struct address_map< 0x400240d0 > { static constexpr const char * name_str = "CAN0::CS5"; };
template<> struct address_map< 0x400240d4 > { static constexpr const char * name_str = "CAN0::ID5"; };
template<> struct address_map< 0x400240d8 > { static constexpr const char * name_str = "CAN0::WORD05"; };
template<> struct address_map< 0x400240dc > { static constexpr const char * name_str = "CAN0::WORD15"; };
template<> struct address_map< 0x400240e0 > { static constexpr const char * name_str = "CAN0::CS6"; };
template<> struct address_map< 0x400240e4 > { static constexpr const char * name_str = "CAN0::ID6"; };
template<> struct address_map< 0x400240e8 > { static constexpr const char * name_str = "CAN0::WORD06"; };
template<> struct address_map< 0x400240ec > { static constexpr const char * name_str = "CAN0::WORD16"; };
template<> struct address_map< 0x400240f0 > { static constexpr const char * name_str = "CAN0::CS7"; };
template<> struct address_map< 0x400240f4 > { static constexpr const char * name_str = "CAN0::ID7"; };
template<> struct address_map< 0x400240f8 > { static constexpr const char * name_str = "CAN0::WORD07"; };
template<> struct address_map< 0x400240fc > { static constexpr const char * name_str = "CAN0::WORD17"; };
template<> struct address_map< 0x40024100 > { static constexpr const char * name_str = "CAN0::CS8"; };
template<> struct address_map< 0x40024104 > { static constexpr const char * name_str = "CAN0::ID8"; };
template<> struct address_map< 0x40024108 > { static constexpr const char * name_str = "CAN0::WORD08"; };
template<> struct address_map< 0x4002410c > { static constexpr const char * name_str = "CAN0::WORD18"; };
template<> struct address_map< 0x40024110 > { static constexpr const char * name_str = "CAN0::CS9"; };
template<> struct address_map< 0x40024114 > { static constexpr const char * name_str = "CAN0::ID9"; };
template<> struct address_map< 0x40024118 > { static constexpr const char * name_str = "CAN0::WORD09"; };
template<> struct address_map< 0x4002411c > { static constexpr const char * name_str = "CAN0::WORD19"; };
template<> struct address_map< 0x40024120 > { static constexpr const char * name_str = "CAN0::CS10"; };
template<> struct address_map< 0x40024124 > { static constexpr const char * name_str = "CAN0::ID10"; };
template<> struct address_map< 0x40024128 > { static constexpr const char * name_str = "CAN0::WORD010"; };
template<> struct address_map< 0x4002412c > { static constexpr const char * name_str = "CAN0::WORD110"; };
template<> struct address_map< 0x40024130 > { static constexpr const char * name_str = "CAN0::CS11"; };
template<> struct address_map< 0x40024134 > { static constexpr const char * name_str = "CAN0::ID11"; };
template<> struct address_map< 0x40024138 > { static constexpr const char * name_str = "CAN0::WORD011"; };
template<> struct address_map< 0x4002413c > { static constexpr const char * name_str = "CAN0::WORD111"; };
template<> struct address_map< 0x40024140 > { static constexpr const char * name_str = "CAN0::CS12"; };
template<> struct address_map< 0x40024144 > { static constexpr const char * name_str = "CAN0::ID12"; };
template<> struct address_map< 0x40024148 > { static constexpr const char * name_str = "CAN0::WORD012"; };
template<> struct address_map< 0x4002414c > { static constexpr const char * name_str = "CAN0::WORD112"; };
template<> struct address_map< 0x40024150 > { static constexpr const char * name_str = "CAN0::CS13"; };
template<> struct address_map< 0x40024154 > { static constexpr const char * name_str = "CAN0::ID13"; };
template<> struct address_map< 0x40024158 > { static constexpr const char * name_str = "CAN0::WORD013"; };
template<> struct address_map< 0x4002415c > { static constexpr const char * name_str = "CAN0::WORD113"; };
template<> struct address_map< 0x40024160 > { static constexpr const char * name_str = "CAN0::CS14"; };
template<> struct address_map< 0x40024164 > { static constexpr const char * name_str = "CAN0::ID14"; };
template<> struct address_map< 0x40024168 > { static constexpr const char * name_str = "CAN0::WORD014"; };
template<> struct address_map< 0x4002416c > { static constexpr const char * name_str = "CAN0::WORD114"; };
template<> struct address_map< 0x40024170 > { static constexpr const char * name_str = "CAN0::CS15"; };
template<> struct address_map< 0x40024174 > { static constexpr const char * name_str = "CAN0::ID15"; };
template<> struct address_map< 0x40024178 > { static constexpr const char * name_str = "CAN0::WORD015"; };
template<> struct address_map< 0x4002417c > { static constexpr const char * name_str = "CAN0::WORD115"; };
template<> struct address_map< 0x40024880 > { static constexpr const char * name_str = "CAN0::RXIMR%s"; };
template<> struct address_map< 0x40025000 > { static constexpr const char * name_str = "CAN1::MCR"; };
template<> struct address_map< 0x40025004 > { static constexpr const char * name_str = "CAN1::CTRL1"; };
template<> struct address_map< 0x40025008 > { static constexpr const char * name_str = "CAN1::TIMER"; };
template<> struct address_map< 0x40025010 > { static constexpr const char * name_str = "CAN1::RXMGMASK"; };
template<> struct address_map< 0x40025014 > { static constexpr const char * name_str = "CAN1::RX14MASK"; };
template<> struct address_map< 0x40025018 > { static constexpr const char * name_str = "CAN1::RX15MASK"; };
template<> struct address_map< 0x4002501c > { static constexpr const char * name_str = "CAN1::ECR"; };
template<> struct address_map< 0x40025020 > { static constexpr const char * name_str = "CAN1::ESR1"; };
template<> struct address_map< 0x40025028 > { static constexpr const char * name_str = "CAN1::IMASK1"; };
template<> struct address_map< 0x40025030 > { static constexpr const char * name_str = "CAN1::IFLAG1"; };
template<> struct address_map< 0x40025034 > { static constexpr const char * name_str = "CAN1::CTRL2"; };
template<> struct address_map< 0x40025038 > { static constexpr const char * name_str = "CAN1::ESR2"; };
template<> struct address_map< 0x40025044 > { static constexpr const char * name_str = "CAN1::CRCR"; };
template<> struct address_map< 0x40025048 > { static constexpr const char * name_str = "CAN1::RXFGMASK"; };
template<> struct address_map< 0x4002504c > { static constexpr const char * name_str = "CAN1::RXFIR"; };
template<> struct address_map< 0x40025050 > { static constexpr const char * name_str = "CAN1::CBT"; };
template<> struct address_map< 0x40025080 > { static constexpr const char * name_str = "CAN1::CS0"; };
template<> struct address_map< 0x40025084 > { static constexpr const char * name_str = "CAN1::ID0"; };
template<> struct address_map< 0x40025088 > { static constexpr const char * name_str = "CAN1::WORD00"; };
template<> struct address_map< 0x4002508c > { static constexpr const char * name_str = "CAN1::WORD10"; };
template<> struct address_map< 0x40025090 > { static constexpr const char * name_str = "CAN1::CS1"; };
template<> struct address_map< 0x40025094 > { static constexpr const char * name_str = "CAN1::ID1"; };
template<> struct address_map< 0x40025098 > { static constexpr const char * name_str = "CAN1::WORD01"; };
template<> struct address_map< 0x4002509c > { static constexpr const char * name_str = "CAN1::WORD11"; };
template<> struct address_map< 0x400250a0 > { static constexpr const char * name_str = "CAN1::CS2"; };
template<> struct address_map< 0x400250a4 > { static constexpr const char * name_str = "CAN1::ID2"; };
template<> struct address_map< 0x400250a8 > { static constexpr const char * name_str = "CAN1::WORD02"; };
template<> struct address_map< 0x400250ac > { static constexpr const char * name_str = "CAN1::WORD12"; };
template<> struct address_map< 0x400250b0 > { static constexpr const char * name_str = "CAN1::CS3"; };
template<> struct address_map< 0x400250b4 > { static constexpr const char * name_str = "CAN1::ID3"; };
template<> struct address_map< 0x400250b8 > { static constexpr const char * name_str = "CAN1::WORD03"; };
template<> struct address_map< 0x400250bc > { static constexpr const char * name_str = "CAN1::WORD13"; };
template<> struct address_map< 0x400250c0 > { static constexpr const char * name_str = "CAN1::CS4"; };
template<> struct address_map< 0x400250c4 > { static constexpr const char * name_str = "CAN1::ID4"; };
template<> struct address_map< 0x400250c8 > { static constexpr const char * name_str = "CAN1::WORD04"; };
template<> struct address_map< 0x400250cc > { static constexpr const char * name_str = "CAN1::WORD14"; };
template<> struct address_map< 0x400250d0 > { static constexpr const char * name_str = "CAN1::CS5"; };
template<> struct address_map< 0x400250d4 > { static constexpr const char * name_str = "CAN1::ID5"; };
template<> struct address_map< 0x400250d8 > { static constexpr const char * name_str = "CAN1::WORD05"; };
template<> struct address_map< 0x400250dc > { static constexpr const char * name_str = "CAN1::WORD15"; };
template<> struct address_map< 0x400250e0 > { static constexpr const char * name_str = "CAN1::CS6"; };
template<> struct address_map< 0x400250e4 > { static constexpr const char * name_str = "CAN1::ID6"; };
template<> struct address_map< 0x400250e8 > { static constexpr const char * name_str = "CAN1::WORD06"; };
template<> struct address_map< 0x400250ec > { static constexpr const char * name_str = "CAN1::WORD16"; };
template<> struct address_map< 0x400250f0 > { static constexpr const char * name_str = "CAN1::CS7"; };
template<> struct address_map< 0x400250f4 > { static constexpr const char * name_str = "CAN1::ID7"; };
template<> struct address_map< 0x400250f8 > { static constexpr const char * name_str = "CAN1::WORD07"; };
template<> struct address_map< 0x400250fc > { static constexpr const char * name_str = "CAN1::WORD17"; };
template<> struct address_map< 0x40025100 > { static constexpr const char * name_str = "CAN1::CS8"; };
template<> struct address_map< 0x40025104 > { static constexpr const char * name_str = "CAN1::ID8"; };
template<> struct address_map< 0x40025108 > { static constexpr const char * name_str = "CAN1::WORD08"; };
template<> struct address_map< 0x4002510c > { static constexpr const char * name_str = "CAN1::WORD18"; };
template<> struct address_map< 0x40025110 > { static constexpr const char * name_str = "CAN1::CS9"; };
template<> struct address_map< 0x40025114 > { static constexpr const char * name_str = "CAN1::ID9"; };
template<> struct address_map< 0x40025118 > { static constexpr const char * name_str = "CAN1::WORD09"; };
template<> struct address_map< 0x4002511c > { static constexpr const char * name_str = "CAN1::WORD19"; };
template<> struct address_map< 0x40025120 > { static constexpr const char * name_str = "CAN1::CS10"; };
template<> struct address_map< 0x40025124 > { static constexpr const char * name_str = "CAN1::ID10"; };
template<> struct address_map< 0x40025128 > { static constexpr const char * name_str = "CAN1::WORD010"; };
template<> struct address_map< 0x4002512c > { static constexpr const char * name_str = "CAN1::WORD110"; };
template<> struct address_map< 0x40025130 > { static constexpr const char * name_str = "CAN1::CS11"; };
template<> struct address_map< 0x40025134 > { static constexpr const char * name_str = "CAN1::ID11"; };
template<> struct address_map< 0x40025138 > { static constexpr const char * name_str = "CAN1::WORD011"; };
template<> struct address_map< 0x4002513c > { static constexpr const char * name_str = "CAN1::WORD111"; };
template<> struct address_map< 0x40025140 > { static constexpr const char * name_str = "CAN1::CS12"; };
template<> struct address_map< 0x40025144 > { static constexpr const char * name_str = "CAN1::ID12"; };
template<> struct address_map< 0x40025148 > { static constexpr const char * name_str = "CAN1::WORD012"; };
template<> struct address_map< 0x4002514c > { static constexpr const char * name_str = "CAN1::WORD112"; };
template<> struct address_map< 0x40025150 > { static constexpr const char * name_str = "CAN1::CS13"; };
template<> struct address_map< 0x40025154 > { static constexpr const char * name_str = "CAN1::ID13"; };
template<> struct address_map< 0x40025158 > { static constexpr const char * name_str = "CAN1::WORD013"; };
template<> struct address_map< 0x4002515c > { static constexpr const char * name_str = "CAN1::WORD113"; };
template<> struct address_map< 0x40025160 > { static constexpr const char * name_str = "CAN1::CS14"; };
template<> struct address_map< 0x40025164 > { static constexpr const char * name_str = "CAN1::ID14"; };
template<> struct address_map< 0x40025168 > { static constexpr const char * name_str = "CAN1::WORD014"; };
template<> struct address_map< 0x4002516c > { static constexpr const char * name_str = "CAN1::WORD114"; };
template<> struct address_map< 0x40025170 > { static constexpr const char * name_str = "CAN1::CS15"; };
template<> struct address_map< 0x40025174 > { static constexpr const char * name_str = "CAN1::ID15"; };
template<> struct address_map< 0x40025178 > { static constexpr const char * name_str = "CAN1::WORD015"; };
template<> struct address_map< 0x4002517c > { static constexpr const char * name_str = "CAN1::WORD115"; };
template<> struct address_map< 0x40025880 > { static constexpr const char * name_str = "CAN1::RXIMR%s"; };
template<> struct address_map< 0x40029000 > { static constexpr const char * name_str = "RNG::CR"; };
template<> struct address_map< 0x40029004 > { static constexpr const char * name_str = "RNG::SR"; };
template<> struct address_map< 0x40029008 > { static constexpr const char * name_str = "RNG::ER"; };
template<> struct address_map< 0x4002900c > { static constexpr const char * name_str = "RNG::OR"; };
template<> struct address_map< 0x4002a000 > { static constexpr const char * name_str = "LPUART0::BAUD"; };
template<> struct address_map< 0x4002a004 > { static constexpr const char * name_str = "LPUART0::STAT"; };
template<> struct address_map< 0x4002a008 > { static constexpr const char * name_str = "LPUART0::CTRL"; };
template<> struct address_map< 0x4002a00c > { static constexpr const char * name_str = "LPUART0::DATA"; };
template<> struct address_map< 0x4002a010 > { static constexpr const char * name_str = "LPUART0::MATCH"; };
template<> struct address_map< 0x4002a014 > { static constexpr const char * name_str = "LPUART0::MODIR"; };
template<> struct address_map< 0x4002c000 > { static constexpr const char * name_str = "SPI0::MCR"; };
template<> struct address_map< 0x4002c008 > { static constexpr const char * name_str = "SPI0::TCR"; };
template<> struct address_map< 0x4002c00c > { static constexpr const char * name_str = "SPI0::CTAR%s"; };  /* svd2hpp: duplicate address for: SPI0::CTAR%s, SPI0::CTAR_SLAVE */
template<> struct address_map< 0x4002c02c > { static constexpr const char * name_str = "SPI0::SR"; };
template<> struct address_map< 0x4002c030 > { static constexpr const char * name_str = "SPI0::RSER"; };
template<> struct address_map< 0x4002c034 > { static constexpr const char * name_str = "SPI0::PUSHR"; };  /* svd2hpp: duplicate address for: SPI0::PUSHR, SPI0::PUSHR_SLAVE */
template<> struct address_map< 0x4002c038 > { static constexpr const char * name_str = "SPI0::POPR"; };
template<> struct address_map< 0x4002c03c > { static constexpr const char * name_str = "SPI0::TXFR%s"; };
template<> struct address_map< 0x4002c07c > { static constexpr const char * name_str = "SPI0::RXFR%s"; };
template<> struct address_map< 0x4002d000 > { static constexpr const char * name_str = "SPI1::MCR"; };
template<> struct address_map< 0x4002d008 > { static constexpr const char * name_str = "SPI1::TCR"; };
template<> struct address_map< 0x4002d00c > { static constexpr const char * name_str = "SPI1::CTAR%s"; };  /* svd2hpp: duplicate address for: SPI1::CTAR%s, SPI1::CTAR_SLAVE */
template<> struct address_map< 0x4002d02c > { static constexpr const char * name_str = "SPI1::SR"; };
template<> struct address_map< 0x4002d030 > { static constexpr const char * name_str = "SPI1::RSER"; };
template<> struct address_map< 0x4002d034 > { static constexpr const char * name_str = "SPI1::PUSHR"; };  /* svd2hpp: duplicate address for: SPI1::PUSHR, SPI1::PUSHR_SLAVE */
template<> struct address_map< 0x4002d038 > { static constexpr const char * name_str = "SPI1::POPR"; };
template<> struct address_map< 0x4002d03c > { static constexpr const char * name_str = "SPI1::TXFR%s"; };
template<> struct address_map< 0x4002d07c > { static constexpr const char * name_str = "SPI1::RXFR%s"; };
template<> struct address_map< 0x4002f000 > { static constexpr const char * name_str = "I2S0::TCSR"; };
template<> struct address_map< 0x4002f004 > { static constexpr const char * name_str = "I2S0::TCR1"; };
template<> struct address_map< 0x4002f008 > { static constexpr const char * name_str = "I2S0::TCR2"; };
template<> struct address_map< 0x4002f00c > { static constexpr const char * name_str = "I2S0::TCR3"; };
template<> struct address_map< 0x4002f010 > { static constexpr const char * name_str = "I2S0::TCR4"; };
template<> struct address_map< 0x4002f014 > { static constexpr const char * name_str = "I2S0::TCR5"; };
template<> struct address_map< 0x4002f020 > { static constexpr const char * name_str = "I2S0::TDR"; };
template<> struct address_map< 0x4002f040 > { static constexpr const char * name_str = "I2S0::TFR"; };
template<> struct address_map< 0x4002f060 > { static constexpr const char * name_str = "I2S0::TMR"; };
template<> struct address_map< 0x4002f080 > { static constexpr const char * name_str = "I2S0::RCSR"; };
template<> struct address_map< 0x4002f084 > { static constexpr const char * name_str = "I2S0::RCR1"; };
template<> struct address_map< 0x4002f088 > { static constexpr const char * name_str = "I2S0::RCR2"; };
template<> struct address_map< 0x4002f08c > { static constexpr const char * name_str = "I2S0::RCR3"; };
template<> struct address_map< 0x4002f090 > { static constexpr const char * name_str = "I2S0::RCR4"; };
template<> struct address_map< 0x4002f094 > { static constexpr const char * name_str = "I2S0::RCR5"; };
template<> struct address_map< 0x4002f0a0 > { static constexpr const char * name_str = "I2S0::RDR"; };
template<> struct address_map< 0x4002f0c0 > { static constexpr const char * name_str = "I2S0::RFR"; };
template<> struct address_map< 0x4002f0e0 > { static constexpr const char * name_str = "I2S0::RMR"; };
template<> struct address_map< 0x4002f100 > { static constexpr const char * name_str = "I2S0::MCR"; };
template<> struct address_map< 0x4002f104 > { static constexpr const char * name_str = "I2S0::MDR"; };
template<> struct address_map< 0x40030000 > { static constexpr const char * name_str = "I2S1::TCSR"; };
template<> struct address_map< 0x40030004 > { static constexpr const char * name_str = "I2S1::TCR1"; };
template<> struct address_map< 0x40030008 > { static constexpr const char * name_str = "I2S1::TCR2"; };
template<> struct address_map< 0x4003000c > { static constexpr const char * name_str = "I2S1::TCR3"; };
template<> struct address_map< 0x40030010 > { static constexpr const char * name_str = "I2S1::TCR4"; };
template<> struct address_map< 0x40030014 > { static constexpr const char * name_str = "I2S1::TCR5"; };
template<> struct address_map< 0x40030020 > { static constexpr const char * name_str = "I2S1::TDR"; };
template<> struct address_map< 0x40030040 > { static constexpr const char * name_str = "I2S1::TFR"; };
template<> struct address_map< 0x40030060 > { static constexpr const char * name_str = "I2S1::TMR"; };
template<> struct address_map< 0x40030080 > { static constexpr const char * name_str = "I2S1::RCSR"; };
template<> struct address_map< 0x40030084 > { static constexpr const char * name_str = "I2S1::RCR1"; };
template<> struct address_map< 0x40030088 > { static constexpr const char * name_str = "I2S1::RCR2"; };
template<> struct address_map< 0x4003008c > { static constexpr const char * name_str = "I2S1::RCR3"; };
template<> struct address_map< 0x40030090 > { static constexpr const char * name_str = "I2S1::RCR4"; };
template<> struct address_map< 0x40030094 > { static constexpr const char * name_str = "I2S1::RCR5"; };
template<> struct address_map< 0x400300a0 > { static constexpr const char * name_str = "I2S1::RDR"; };
template<> struct address_map< 0x400300c0 > { static constexpr const char * name_str = "I2S1::RFR"; };
template<> struct address_map< 0x400300e0 > { static constexpr const char * name_str = "I2S1::RMR"; };
template<> struct address_map< 0x40030100 > { static constexpr const char * name_str = "I2S1::MCR"; };
template<> struct address_map< 0x40030104 > { static constexpr const char * name_str = "I2S1::MDR"; };
template<> struct address_map< 0x40032000 > { static constexpr const char * name_str = "CRC::DATA"; };  /* svd2hpp: duplicate address for: CRC::DATA, CRC::DATAL, CRC::DATALL */
template<> struct address_map< 0x40032001 > { static constexpr const char * name_str = "CRC::DATALU"; };
template<> struct address_map< 0x40032002 > { static constexpr const char * name_str = "CRC::DATAH"; };  /* svd2hpp: duplicate address for: CRC::DATAH, CRC::DATAHL */
template<> struct address_map< 0x40032003 > { static constexpr const char * name_str = "CRC::DATAHU"; };
template<> struct address_map< 0x40032004 > { static constexpr const char * name_str = "CRC::GPOLY"; };  /* svd2hpp: duplicate address for: CRC::GPOLY, CRC::GPOLYL, CRC::GPOLYLL */
template<> struct address_map< 0x40032005 > { static constexpr const char * name_str = "CRC::GPOLYLU"; };
template<> struct address_map< 0x40032006 > { static constexpr const char * name_str = "CRC::GPOLYH"; };  /* svd2hpp: duplicate address for: CRC::GPOLYH, CRC::GPOLYHL */
template<> struct address_map< 0x40032007 > { static constexpr const char * name_str = "CRC::GPOLYHU"; };
template<> struct address_map< 0x40032008 > { static constexpr const char * name_str = "CRC::CTRL"; };
template<> struct address_map< 0x4003200b > { static constexpr const char * name_str = "CRC::CTRLHU"; };
template<> struct address_map< 0x40036000 > { static constexpr const char * name_str = "PDB0::SC"; };
template<> struct address_map< 0x40036004 > { static constexpr const char * name_str = "PDB0::MOD"; };
template<> struct address_map< 0x40036008 > { static constexpr const char * name_str = "PDB0::CNT"; };
template<> struct address_map< 0x4003600c > { static constexpr const char * name_str = "PDB0::IDLY"; };
template<> struct address_map< 0x40036010 > { static constexpr const char * name_str = "PDB0::CHC1"; };
template<> struct address_map< 0x40036014 > { static constexpr const char * name_str = "PDB0::CHS"; };
template<> struct address_map< 0x40036018 > { static constexpr const char * name_str = "PDB0::CHDLY0"; };
template<> struct address_map< 0x4003601c > { static constexpr const char * name_str = "PDB0::CHDLY1"; };
template<> struct address_map< 0x40036150 > { static constexpr const char * name_str = "PDB0::DACINTC"; };
template<> struct address_map< 0x40036154 > { static constexpr const char * name_str = "PDB0::DACINT"; };
template<> struct address_map< 0x40036190 > { static constexpr const char * name_str = "PDB0::POEN"; };
template<> struct address_map< 0x40036194 > { static constexpr const char * name_str = "PDB0::PODLY"; };
template<> struct address_map< 0x40037000 > { static constexpr const char * name_str = "PIT::MCR"; };
template<> struct address_map< 0x400370e0 > { static constexpr const char * name_str = "PIT::LTMR64H"; };
template<> struct address_map< 0x400370e4 > { static constexpr const char * name_str = "PIT::LTMR64L"; };
template<> struct address_map< 0x40037100 > { static constexpr const char * name_str = "PIT::LDVAL%s"; };
template<> struct address_map< 0x40037104 > { static constexpr const char * name_str = "PIT::CVAL%s"; };
template<> struct address_map< 0x40037108 > { static constexpr const char * name_str = "PIT::TCTRL%s"; };
template<> struct address_map< 0x4003710c > { static constexpr const char * name_str = "PIT::TFLG%s"; };
template<> struct address_map< 0x40038000 > { static constexpr const char * name_str = "TPM0::VERID"; };
template<> struct address_map< 0x40038004 > { static constexpr const char * name_str = "TPM0::PARAM"; };
template<> struct address_map< 0x40038008 > { static constexpr const char * name_str = "TPM0::GLOBAL"; };
template<> struct address_map< 0x40038010 > { static constexpr const char * name_str = "TPM0::SC"; };
template<> struct address_map< 0x40038014 > { static constexpr const char * name_str = "TPM0::CNT"; };
template<> struct address_map< 0x40038018 > { static constexpr const char * name_str = "TPM0::MOD"; };
template<> struct address_map< 0x4003801c > { static constexpr const char * name_str = "TPM0::STATUS"; };
template<> struct address_map< 0x40038020 > { static constexpr const char * name_str = "TPM0::C%sSC"; };
template<> struct address_map< 0x40038024 > { static constexpr const char * name_str = "TPM0::C%sV"; };
template<> struct address_map< 0x40038064 > { static constexpr const char * name_str = "TPM0::COMBINE"; };
template<> struct address_map< 0x4003806c > { static constexpr const char * name_str = "TPM0::TRIG"; };
template<> struct address_map< 0x40038070 > { static constexpr const char * name_str = "TPM0::POL"; };
template<> struct address_map< 0x40038078 > { static constexpr const char * name_str = "TPM0::FILTER"; };
template<> struct address_map< 0x40038080 > { static constexpr const char * name_str = "TPM0::QDCTRL"; };
template<> struct address_map< 0x40038084 > { static constexpr const char * name_str = "TPM0::CONF"; };
template<> struct address_map< 0x40039000 > { static constexpr const char * name_str = "TPM1::VERID"; };
template<> struct address_map< 0x40039004 > { static constexpr const char * name_str = "TPM1::PARAM"; };
template<> struct address_map< 0x40039008 > { static constexpr const char * name_str = "TPM1::GLOBAL"; };
template<> struct address_map< 0x40039010 > { static constexpr const char * name_str = "TPM1::SC"; };
template<> struct address_map< 0x40039014 > { static constexpr const char * name_str = "TPM1::CNT"; };
template<> struct address_map< 0x40039018 > { static constexpr const char * name_str = "TPM1::MOD"; };
template<> struct address_map< 0x4003901c > { static constexpr const char * name_str = "TPM1::STATUS"; };
template<> struct address_map< 0x40039020 > { static constexpr const char * name_str = "TPM1::C%sSC"; };
template<> struct address_map< 0x40039024 > { static constexpr const char * name_str = "TPM1::C%sV"; };
template<> struct address_map< 0x40039064 > { static constexpr const char * name_str = "TPM1::COMBINE"; };
template<> struct address_map< 0x4003906c > { static constexpr const char * name_str = "TPM1::TRIG"; };
template<> struct address_map< 0x40039070 > { static constexpr const char * name_str = "TPM1::POL"; };
template<> struct address_map< 0x40039078 > { static constexpr const char * name_str = "TPM1::FILTER"; };
template<> struct address_map< 0x40039080 > { static constexpr const char * name_str = "TPM1::QDCTRL"; };
template<> struct address_map< 0x40039084 > { static constexpr const char * name_str = "TPM1::CONF"; };
template<> struct address_map< 0x4003a000 > { static constexpr const char * name_str = "TPM2::VERID"; };
template<> struct address_map< 0x4003a004 > { static constexpr const char * name_str = "TPM2::PARAM"; };
template<> struct address_map< 0x4003a008 > { static constexpr const char * name_str = "TPM2::GLOBAL"; };
template<> struct address_map< 0x4003a010 > { static constexpr const char * name_str = "TPM2::SC"; };
template<> struct address_map< 0x4003a014 > { static constexpr const char * name_str = "TPM2::CNT"; };
template<> struct address_map< 0x4003a018 > { static constexpr const char * name_str = "TPM2::MOD"; };
template<> struct address_map< 0x4003a01c > { static constexpr const char * name_str = "TPM2::STATUS"; };
template<> struct address_map< 0x4003a020 > { static constexpr const char * name_str = "TPM2::C%sSC"; };
template<> struct address_map< 0x4003a024 > { static constexpr const char * name_str = "TPM2::C%sV"; };
template<> struct address_map< 0x4003a064 > { static constexpr const char * name_str = "TPM2::COMBINE"; };
template<> struct address_map< 0x4003a06c > { static constexpr const char * name_str = "TPM2::TRIG"; };
template<> struct address_map< 0x4003a070 > { static constexpr const char * name_str = "TPM2::POL"; };
template<> struct address_map< 0x4003a078 > { static constexpr const char * name_str = "TPM2::FILTER"; };
template<> struct address_map< 0x4003a080 > { static constexpr const char * name_str = "TPM2::QDCTRL"; };
template<> struct address_map< 0x4003a084 > { static constexpr const char * name_str = "TPM2::CONF"; };
template<> struct address_map< 0x4003b000 > { static constexpr const char * name_str = "ADC0::SC1%s"; };
template<> struct address_map< 0x4003b008 > { static constexpr const char * name_str = "ADC0::CFG1"; };
template<> struct address_map< 0x4003b00c > { static constexpr const char * name_str = "ADC0::CFG2"; };
template<> struct address_map< 0x4003b010 > { static constexpr const char * name_str = "ADC0::R%s"; };
template<> struct address_map< 0x4003b018 > { static constexpr const char * name_str = "ADC0::CV%s"; };
template<> struct address_map< 0x4003b020 > { static constexpr const char * name_str = "ADC0::SC2"; };
template<> struct address_map< 0x4003b024 > { static constexpr const char * name_str = "ADC0::SC3"; };
template<> struct address_map< 0x4003b028 > { static constexpr const char * name_str = "ADC0::OFS"; };
template<> struct address_map< 0x4003b02c > { static constexpr const char * name_str = "ADC0::PG"; };
template<> struct address_map< 0x4003b030 > { static constexpr const char * name_str = "ADC0::MG"; };
template<> struct address_map< 0x4003b034 > { static constexpr const char * name_str = "ADC0::CLPD"; };
template<> struct address_map< 0x4003b038 > { static constexpr const char * name_str = "ADC0::CLPS"; };
template<> struct address_map< 0x4003b03c > { static constexpr const char * name_str = "ADC0::CLP4"; };
template<> struct address_map< 0x4003b040 > { static constexpr const char * name_str = "ADC0::CLP3"; };
template<> struct address_map< 0x4003b044 > { static constexpr const char * name_str = "ADC0::CLP2"; };
template<> struct address_map< 0x4003b048 > { static constexpr const char * name_str = "ADC0::CLP1"; };
template<> struct address_map< 0x4003b04c > { static constexpr const char * name_str = "ADC0::CLP0"; };
template<> struct address_map< 0x4003b054 > { static constexpr const char * name_str = "ADC0::CLMD"; };
template<> struct address_map< 0x4003b058 > { static constexpr const char * name_str = "ADC0::CLMS"; };
template<> struct address_map< 0x4003b05c > { static constexpr const char * name_str = "ADC0::CLM4"; };
template<> struct address_map< 0x4003b060 > { static constexpr const char * name_str = "ADC0::CLM3"; };
template<> struct address_map< 0x4003b064 > { static constexpr const char * name_str = "ADC0::CLM2"; };
template<> struct address_map< 0x4003b068 > { static constexpr const char * name_str = "ADC0::CLM1"; };
template<> struct address_map< 0x4003b06c > { static constexpr const char * name_str = "ADC0::CLM0"; };
template<> struct address_map< 0x4003d000 > { static constexpr const char * name_str = "RTC::TSR"; };
template<> struct address_map< 0x4003d004 > { static constexpr const char * name_str = "RTC::TPR"; };
template<> struct address_map< 0x4003d008 > { static constexpr const char * name_str = "RTC::TAR"; };
template<> struct address_map< 0x4003d00c > { static constexpr const char * name_str = "RTC::TCR"; };
template<> struct address_map< 0x4003d010 > { static constexpr const char * name_str = "RTC::CR"; };
template<> struct address_map< 0x4003d014 > { static constexpr const char * name_str = "RTC::SR"; };
template<> struct address_map< 0x4003d018 > { static constexpr const char * name_str = "RTC::LR"; };
template<> struct address_map< 0x4003d01c > { static constexpr const char * name_str = "RTC::IER"; };
template<> struct address_map< 0x4003d800 > { static constexpr const char * name_str = "RTC::WAR"; };
template<> struct address_map< 0x4003d804 > { static constexpr const char * name_str = "RTC::RAR"; };
template<> struct address_map< 0x4003e000 > { static constexpr const char * name_str = "RFVBAT::REG%s"; };
template<> struct address_map< 0x4003f000 > { static constexpr const char * name_str = "DAC0::DAT%sL"; };
template<> struct address_map< 0x4003f001 > { static constexpr const char * name_str = "DAC0::DAT%sH"; };
template<> struct address_map< 0x4003f020 > { static constexpr const char * name_str = "DAC0::SR"; };
template<> struct address_map< 0x4003f021 > { static constexpr const char * name_str = "DAC0::C0"; };
template<> struct address_map< 0x4003f022 > { static constexpr const char * name_str = "DAC0::C1"; };
template<> struct address_map< 0x4003f023 > { static constexpr const char * name_str = "DAC0::C2"; };
template<> struct address_map< 0x40040000 > { static constexpr const char * name_str = "LPTMR0::CSR"; };
template<> struct address_map< 0x40040004 > { static constexpr const char * name_str = "LPTMR0::PSR"; };
template<> struct address_map< 0x40040008 > { static constexpr const char * name_str = "LPTMR0::CMR"; };
template<> struct address_map< 0x4004000c > { static constexpr const char * name_str = "LPTMR0::CNR"; };
template<> struct address_map< 0x40041000 > { static constexpr const char * name_str = "RFSYS::REG%s"; };
template<> struct address_map< 0x40047000 > { static constexpr const char * name_str = "SIM::SOPT1"; };
template<> struct address_map< 0x40048004 > { static constexpr const char * name_str = "SIM::SOPT2"; };
template<> struct address_map< 0x40048010 > { static constexpr const char * name_str = "SIM::SOPT5"; };
template<> struct address_map< 0x40048018 > { static constexpr const char * name_str = "SIM::SOPT7"; };
template<> struct address_map< 0x40048020 > { static constexpr const char * name_str = "SIM::SOPT9"; };
template<> struct address_map< 0x40048024 > { static constexpr const char * name_str = "SIM::SDID"; };
template<> struct address_map< 0x40048034 > { static constexpr const char * name_str = "SIM::SCGC4"; };
template<> struct address_map< 0x40048038 > { static constexpr const char * name_str = "SIM::SCGC5"; };
template<> struct address_map< 0x4004803c > { static constexpr const char * name_str = "SIM::SCGC6"; };
template<> struct address_map< 0x40048040 > { static constexpr const char * name_str = "SIM::SCGC7"; };
template<> struct address_map< 0x40048044 > { static constexpr const char * name_str = "SIM::CLKDIV1"; };
template<> struct address_map< 0x40048048 > { static constexpr const char * name_str = "SIM::CLKDIV2"; };
template<> struct address_map< 0x4004804c > { static constexpr const char * name_str = "SIM::FCFG1"; };
template<> struct address_map< 0x40048050 > { static constexpr const char * name_str = "SIM::FCFG2"; };
template<> struct address_map< 0x40048054 > { static constexpr const char * name_str = "SIM::UIDH"; };
template<> struct address_map< 0x40048058 > { static constexpr const char * name_str = "SIM::UIDMH"; };
template<> struct address_map< 0x4004805c > { static constexpr const char * name_str = "SIM::UIDML"; };
template<> struct address_map< 0x40048060 > { static constexpr const char * name_str = "SIM::UIDL"; };
template<> struct address_map< 0x40048064 > { static constexpr const char * name_str = "SIM::CLKDIV3"; };
template<> struct address_map< 0x4004806c > { static constexpr const char * name_str = "SIM::MISCCTL"; };
template<> struct address_map< 0x40049000 > { static constexpr const char * name_str = "PORTA::PCR%s"; };
template<> struct address_map< 0x40049080 > { static constexpr const char * name_str = "PORTA::GPCLR"; };
template<> struct address_map< 0x40049084 > { static constexpr const char * name_str = "PORTA::GPCHR"; };
template<> struct address_map< 0x40049088 > { static constexpr const char * name_str = "PORTA::GICLR"; };
template<> struct address_map< 0x4004908c > { static constexpr const char * name_str = "PORTA::GICHR"; };
template<> struct address_map< 0x400490a0 > { static constexpr const char * name_str = "PORTA::ISFR"; };
template<> struct address_map< 0x4004a000 > { static constexpr const char * name_str = "PORTB::PCR%s"; };
template<> struct address_map< 0x4004a080 > { static constexpr const char * name_str = "PORTB::GPCLR"; };
template<> struct address_map< 0x4004a084 > { static constexpr const char * name_str = "PORTB::GPCHR"; };
template<> struct address_map< 0x4004a088 > { static constexpr const char * name_str = "PORTB::GICLR"; };
template<> struct address_map< 0x4004a08c > { static constexpr const char * name_str = "PORTB::GICHR"; };
template<> struct address_map< 0x4004a0a0 > { static constexpr const char * name_str = "PORTB::ISFR"; };
template<> struct address_map< 0x4004b000 > { static constexpr const char * name_str = "PORTC::PCR%s"; };
template<> struct address_map< 0x4004b080 > { static constexpr const char * name_str = "PORTC::GPCLR"; };
template<> struct address_map< 0x4004b084 > { static constexpr const char * name_str = "PORTC::GPCHR"; };
template<> struct address_map< 0x4004b088 > { static constexpr const char * name_str = "PORTC::GICLR"; };
template<> struct address_map< 0x4004b08c > { static constexpr const char * name_str = "PORTC::GICHR"; };
template<> struct address_map< 0x4004b0a0 > { static constexpr const char * name_str = "PORTC::ISFR"; };
template<> struct address_map< 0x4004c000 > { static constexpr const char * name_str = "PORTD::PCR%s"; };
template<> struct address_map< 0x4004c080 > { static constexpr const char * name_str = "PORTD::GPCLR"; };
template<> struct address_map< 0x4004c084 > { static constexpr const char * name_str = "PORTD::GPCHR"; };
template<> struct address_map< 0x4004c088 > { static constexpr const char * name_str = "PORTD::GICLR"; };
template<> struct address_map< 0x4004c08c > { static constexpr const char * name_str = "PORTD::GICHR"; };
template<> struct address_map< 0x4004c0a0 > { static constexpr const char * name_str = "PORTD::ISFR"; };
template<> struct address_map< 0x4004c0c0 > { static constexpr const char * name_str = "PORTD::DFER"; };
template<> struct address_map< 0x4004c0c4 > { static constexpr const char * name_str = "PORTD::DFCR"; };
template<> struct address_map< 0x4004c0c8 > { static constexpr const char * name_str = "PORTD::DFWR"; };
template<> struct address_map< 0x4004d000 > { static constexpr const char * name_str = "PORTE::PCR%s"; };
template<> struct address_map< 0x4004d080 > { static constexpr const char * name_str = "PORTE::GPCLR"; };
template<> struct address_map< 0x4004d084 > { static constexpr const char * name_str = "PORTE::GPCHR"; };
template<> struct address_map< 0x4004d088 > { static constexpr const char * name_str = "PORTE::GICLR"; };
template<> struct address_map< 0x4004d08c > { static constexpr const char * name_str = "PORTE::GICHR"; };
template<> struct address_map< 0x4004d0a0 > { static constexpr const char * name_str = "PORTE::ISFR"; };
template<> struct address_map< 0x40052000 > { static constexpr const char * name_str = "WDOG::STCTRLH"; };
template<> struct address_map< 0x40052002 > { static constexpr const char * name_str = "WDOG::STCTRLL"; };
template<> struct address_map< 0x40052004 > { static constexpr const char * name_str = "WDOG::TOVALH"; };
template<> struct address_map< 0x40052006 > { static constexpr const char * name_str = "WDOG::TOVALL"; };
template<> struct address_map< 0x40052008 > { static constexpr const char * name_str = "WDOG::WINH"; };
template<> struct address_map< 0x4005200a > { static constexpr const char * name_str = "WDOG::WINL"; };
template<> struct address_map< 0x4005200c > { static constexpr const char * name_str = "WDOG::REFRESH"; };
template<> struct address_map< 0x4005200e > { static constexpr const char * name_str = "WDOG::UNLOCK"; };
template<> struct address_map< 0x40052010 > { static constexpr const char * name_str = "WDOG::TMROUTH"; };
template<> struct address_map< 0x40052012 > { static constexpr const char * name_str = "WDOG::TMROUTL"; };
template<> struct address_map< 0x40052014 > { static constexpr const char * name_str = "WDOG::RSTCNT"; };
template<> struct address_map< 0x40052016 > { static constexpr const char * name_str = "WDOG::PRESC"; };
template<> struct address_map< 0x4005f000 > { static constexpr const char * name_str = "FLEXIO::VERID"; };
template<> struct address_map< 0x4005f004 > { static constexpr const char * name_str = "FLEXIO::PARAM"; };
template<> struct address_map< 0x4005f008 > { static constexpr const char * name_str = "FLEXIO::CTRL"; };
template<> struct address_map< 0x4005f00c > { static constexpr const char * name_str = "FLEXIO::PIN"; };
template<> struct address_map< 0x4005f010 > { static constexpr const char * name_str = "FLEXIO::SHIFTSTAT"; };
template<> struct address_map< 0x4005f014 > { static constexpr const char * name_str = "FLEXIO::SHIFTERR"; };
template<> struct address_map< 0x4005f018 > { static constexpr const char * name_str = "FLEXIO::TIMSTAT"; };
template<> struct address_map< 0x4005f020 > { static constexpr const char * name_str = "FLEXIO::SHIFTSIEN"; };
template<> struct address_map< 0x4005f024 > { static constexpr const char * name_str = "FLEXIO::SHIFTEIEN"; };
template<> struct address_map< 0x4005f028 > { static constexpr const char * name_str = "FLEXIO::TIMIEN"; };
template<> struct address_map< 0x4005f030 > { static constexpr const char * name_str = "FLEXIO::SHIFTSDEN"; };
template<> struct address_map< 0x4005f080 > { static constexpr const char * name_str = "FLEXIO::SHIFTCTL%s"; };
template<> struct address_map< 0x4005f100 > { static constexpr const char * name_str = "FLEXIO::SHIFTCFG%s"; };
template<> struct address_map< 0x4005f200 > { static constexpr const char * name_str = "FLEXIO::SHIFTBUF%s"; };
template<> struct address_map< 0x4005f280 > { static constexpr const char * name_str = "FLEXIO::SHIFTBUFBIS%s"; };
template<> struct address_map< 0x4005f300 > { static constexpr const char * name_str = "FLEXIO::SHIFTBUFBYS%s"; };
template<> struct address_map< 0x4005f380 > { static constexpr const char * name_str = "FLEXIO::SHIFTBUFBBS%s"; };
template<> struct address_map< 0x4005f400 > { static constexpr const char * name_str = "FLEXIO::TIMCTL%s"; };
template<> struct address_map< 0x4005f480 > { static constexpr const char * name_str = "FLEXIO::TIMCFG%s"; };
template<> struct address_map< 0x4005f500 > { static constexpr const char * name_str = "FLEXIO::TIMCMP%s"; };
template<> struct address_map< 0x40061000 > { static constexpr const char * name_str = "EWM::CTRL"; };
template<> struct address_map< 0x40061001 > { static constexpr const char * name_str = "EWM::SERV"; };
template<> struct address_map< 0x40061002 > { static constexpr const char * name_str = "EWM::CMPL"; };
template<> struct address_map< 0x40061003 > { static constexpr const char * name_str = "EWM::CMPH"; };
template<> struct address_map< 0x40061005 > { static constexpr const char * name_str = "EWM::CLKPRESCALER"; };
template<> struct address_map< 0x40064000 > { static constexpr const char * name_str = "MCG::C1"; };
template<> struct address_map< 0x40064001 > { static constexpr const char * name_str = "MCG::C2"; };
template<> struct address_map< 0x40064002 > { static constexpr const char * name_str = "MCG::C3"; };
template<> struct address_map< 0x40064003 > { static constexpr const char * name_str = "MCG::C4"; };
template<> struct address_map< 0x40064004 > { static constexpr const char * name_str = "MCG::C5"; };
template<> struct address_map< 0x40064005 > { static constexpr const char * name_str = "MCG::C6"; };
template<> struct address_map< 0x40064006 > { static constexpr const char * name_str = "MCG::S"; };
template<> struct address_map< 0x40064008 > { static constexpr const char * name_str = "MCG::SC"; };
template<> struct address_map< 0x4006400a > { static constexpr const char * name_str = "MCG::ATCVH"; };
template<> struct address_map< 0x4006400b > { static constexpr const char * name_str = "MCG::ATCVL"; };
template<> struct address_map< 0x4006400c > { static constexpr const char * name_str = "MCG::C7"; };
template<> struct address_map< 0x4006400d > { static constexpr const char * name_str = "MCG::C8"; };
template<> struct address_map< 0x40065000 > { static constexpr const char * name_str = "OSC::CR"; };
template<> struct address_map< 0x40065002 > { static constexpr const char * name_str = "OSC::DIV"; };
template<> struct address_map< 0x40066000 > { static constexpr const char * name_str = "LPI2C0::VERID"; };
template<> struct address_map< 0x40066004 > { static constexpr const char * name_str = "LPI2C0::PARAM"; };
template<> struct address_map< 0x40066010 > { static constexpr const char * name_str = "LPI2C0::MCR"; };
template<> struct address_map< 0x40066014 > { static constexpr const char * name_str = "LPI2C0::MSR"; };
template<> struct address_map< 0x40066018 > { static constexpr const char * name_str = "LPI2C0::MIER"; };
template<> struct address_map< 0x4006601c > { static constexpr const char * name_str = "LPI2C0::MDER"; };
template<> struct address_map< 0x40066020 > { static constexpr const char * name_str = "LPI2C0::MCFGR0"; };
template<> struct address_map< 0x40066024 > { static constexpr const char * name_str = "LPI2C0::MCFGR1"; };
template<> struct address_map< 0x40066028 > { static constexpr const char * name_str = "LPI2C0::MCFGR2"; };
template<> struct address_map< 0x4006602c > { static constexpr const char * name_str = "LPI2C0::MCFGR3"; };
template<> struct address_map< 0x40066040 > { static constexpr const char * name_str = "LPI2C0::MDMR"; };
template<> struct address_map< 0x40066048 > { static constexpr const char * name_str = "LPI2C0::MCCR0"; };
template<> struct address_map< 0x40066050 > { static constexpr const char * name_str = "LPI2C0::MCCR1"; };
template<> struct address_map< 0x40066058 > { static constexpr const char * name_str = "LPI2C0::MFCR"; };
template<> struct address_map< 0x4006605c > { static constexpr const char * name_str = "LPI2C0::MFSR"; };
template<> struct address_map< 0x40066060 > { static constexpr const char * name_str = "LPI2C0::MTDR"; };
template<> struct address_map< 0x40066070 > { static constexpr const char * name_str = "LPI2C0::MRDR"; };
template<> struct address_map< 0x40066110 > { static constexpr const char * name_str = "LPI2C0::SCR"; };
template<> struct address_map< 0x40066114 > { static constexpr const char * name_str = "LPI2C0::SSR"; };
template<> struct address_map< 0x40066118 > { static constexpr const char * name_str = "LPI2C0::SIER"; };
template<> struct address_map< 0x4006611c > { static constexpr const char * name_str = "LPI2C0::SDER"; };
template<> struct address_map< 0x40066124 > { static constexpr const char * name_str = "LPI2C0::SCFGR1"; };
template<> struct address_map< 0x40066128 > { static constexpr const char * name_str = "LPI2C0::SCFGR2"; };
template<> struct address_map< 0x40066140 > { static constexpr const char * name_str = "LPI2C0::SAMR"; };
template<> struct address_map< 0x40066150 > { static constexpr const char * name_str = "LPI2C0::SASR"; };
template<> struct address_map< 0x40066154 > { static constexpr const char * name_str = "LPI2C0::STAR"; };
template<> struct address_map< 0x40066160 > { static constexpr const char * name_str = "LPI2C0::STDR"; };
template<> struct address_map< 0x40066170 > { static constexpr const char * name_str = "LPI2C0::SRDR"; };
template<> struct address_map< 0x40067000 > { static constexpr const char * name_str = "LPI2C1::VERID"; };
template<> struct address_map< 0x40067004 > { static constexpr const char * name_str = "LPI2C1::PARAM"; };
template<> struct address_map< 0x40067010 > { static constexpr const char * name_str = "LPI2C1::MCR"; };
template<> struct address_map< 0x40067014 > { static constexpr const char * name_str = "LPI2C1::MSR"; };
template<> struct address_map< 0x40067018 > { static constexpr const char * name_str = "LPI2C1::MIER"; };
template<> struct address_map< 0x4006701c > { static constexpr const char * name_str = "LPI2C1::MDER"; };
template<> struct address_map< 0x40067020 > { static constexpr const char * name_str = "LPI2C1::MCFGR0"; };
template<> struct address_map< 0x40067024 > { static constexpr const char * name_str = "LPI2C1::MCFGR1"; };
template<> struct address_map< 0x40067028 > { static constexpr const char * name_str = "LPI2C1::MCFGR2"; };
template<> struct address_map< 0x4006702c > { static constexpr const char * name_str = "LPI2C1::MCFGR3"; };
template<> struct address_map< 0x40067040 > { static constexpr const char * name_str = "LPI2C1::MDMR"; };
template<> struct address_map< 0x40067048 > { static constexpr const char * name_str = "LPI2C1::MCCR0"; };
template<> struct address_map< 0x40067050 > { static constexpr const char * name_str = "LPI2C1::MCCR1"; };
template<> struct address_map< 0x40067058 > { static constexpr const char * name_str = "LPI2C1::MFCR"; };
template<> struct address_map< 0x4006705c > { static constexpr const char * name_str = "LPI2C1::MFSR"; };
template<> struct address_map< 0x40067060 > { static constexpr const char * name_str = "LPI2C1::MTDR"; };
template<> struct address_map< 0x40067070 > { static constexpr const char * name_str = "LPI2C1::MRDR"; };
template<> struct address_map< 0x40067110 > { static constexpr const char * name_str = "LPI2C1::SCR"; };
template<> struct address_map< 0x40067114 > { static constexpr const char * name_str = "LPI2C1::SSR"; };
template<> struct address_map< 0x40067118 > { static constexpr const char * name_str = "LPI2C1::SIER"; };
template<> struct address_map< 0x4006711c > { static constexpr const char * name_str = "LPI2C1::SDER"; };
template<> struct address_map< 0x40067124 > { static constexpr const char * name_str = "LPI2C1::SCFGR1"; };
template<> struct address_map< 0x40067128 > { static constexpr const char * name_str = "LPI2C1::SCFGR2"; };
template<> struct address_map< 0x40067140 > { static constexpr const char * name_str = "LPI2C1::SAMR"; };
template<> struct address_map< 0x40067150 > { static constexpr const char * name_str = "LPI2C1::SASR"; };
template<> struct address_map< 0x40067154 > { static constexpr const char * name_str = "LPI2C1::STAR"; };
template<> struct address_map< 0x40067160 > { static constexpr const char * name_str = "LPI2C1::STDR"; };
template<> struct address_map< 0x40067170 > { static constexpr const char * name_str = "LPI2C1::SRDR"; };
template<> struct address_map< 0x4006a000 > { static constexpr const char * name_str = "UART0::BDH"; };
template<> struct address_map< 0x4006a001 > { static constexpr const char * name_str = "UART0::BDL"; };
template<> struct address_map< 0x4006a002 > { static constexpr const char * name_str = "UART0::C1"; };
template<> struct address_map< 0x4006a003 > { static constexpr const char * name_str = "UART0::C2"; };
template<> struct address_map< 0x4006a004 > { static constexpr const char * name_str = "UART0::S1"; };
template<> struct address_map< 0x4006a005 > { static constexpr const char * name_str = "UART0::S2"; };
template<> struct address_map< 0x4006a006 > { static constexpr const char * name_str = "UART0::C3"; };
template<> struct address_map< 0x4006a007 > { static constexpr const char * name_str = "UART0::D"; };
template<> struct address_map< 0x4006a008 > { static constexpr const char * name_str = "UART0::MA1"; };
template<> struct address_map< 0x4006a009 > { static constexpr const char * name_str = "UART0::MA2"; };
template<> struct address_map< 0x4006a00a > { static constexpr const char * name_str = "UART0::C4"; };
template<> struct address_map< 0x4006a00b > { static constexpr const char * name_str = "UART0::C5"; };
template<> struct address_map< 0x4006a00c > { static constexpr const char * name_str = "UART0::ED"; };
template<> struct address_map< 0x4006a00d > { static constexpr const char * name_str = "UART0::MODEM"; };
template<> struct address_map< 0x4006a00e > { static constexpr const char * name_str = "UART0::IR"; };
template<> struct address_map< 0x4006a010 > { static constexpr const char * name_str = "UART0::PFIFO"; };
template<> struct address_map< 0x4006a011 > { static constexpr const char * name_str = "UART0::CFIFO"; };
template<> struct address_map< 0x4006a012 > { static constexpr const char * name_str = "UART0::SFIFO"; };
template<> struct address_map< 0x4006a013 > { static constexpr const char * name_str = "UART0::TWFIFO"; };
template<> struct address_map< 0x4006a014 > { static constexpr const char * name_str = "UART0::TCFIFO"; };
template<> struct address_map< 0x4006a015 > { static constexpr const char * name_str = "UART0::RWFIFO"; };
template<> struct address_map< 0x4006a016 > { static constexpr const char * name_str = "UART0::RCFIFO"; };
template<> struct address_map< 0x4006a018 > { static constexpr const char * name_str = "UART0::C7816"; };
template<> struct address_map< 0x4006a019 > { static constexpr const char * name_str = "UART0::IE7816"; };
template<> struct address_map< 0x4006a01a > { static constexpr const char * name_str = "UART0::IS7816"; };
template<> struct address_map< 0x4006a01b > { static constexpr const char * name_str = "UART0::WP7816"; };
template<> struct address_map< 0x4006a01c > { static constexpr const char * name_str = "UART0::WN7816"; };
template<> struct address_map< 0x4006a01d > { static constexpr const char * name_str = "UART0::WF7816"; };
template<> struct address_map< 0x4006a01e > { static constexpr const char * name_str = "UART0::ET7816"; };
template<> struct address_map< 0x4006a01f > { static constexpr const char * name_str = "UART0::TL7816"; };
template<> struct address_map< 0x4006a03a > { static constexpr const char * name_str = "UART0::AP7816A_T0"; };
template<> struct address_map< 0x4006a03b > { static constexpr const char * name_str = "UART0::AP7816B_T0"; };
template<> struct address_map< 0x4006a03c > { static constexpr const char * name_str = "UART0::WP7816A_T1"; };  /* svd2hpp: duplicate address for: UART0::WP7816A_T0, UART0::WP7816A_T1 */
template<> struct address_map< 0x4006a03d > { static constexpr const char * name_str = "UART0::WP7816B_T1"; };  /* svd2hpp: duplicate address for: UART0::WP7816B_T0, UART0::WP7816B_T1 */
template<> struct address_map< 0x4006a03e > { static constexpr const char * name_str = "UART0::WGP7816_T1"; };
template<> struct address_map< 0x4006a03f > { static constexpr const char * name_str = "UART0::WP7816C_T1"; };
template<> struct address_map< 0x4006b000 > { static constexpr const char * name_str = "UART1::BDH"; };
template<> struct address_map< 0x4006b001 > { static constexpr const char * name_str = "UART1::BDL"; };
template<> struct address_map< 0x4006b002 > { static constexpr const char * name_str = "UART1::C1"; };
template<> struct address_map< 0x4006b003 > { static constexpr const char * name_str = "UART1::C2"; };
template<> struct address_map< 0x4006b004 > { static constexpr const char * name_str = "UART1::S1"; };
template<> struct address_map< 0x4006b005 > { static constexpr const char * name_str = "UART1::S2"; };
template<> struct address_map< 0x4006b006 > { static constexpr const char * name_str = "UART1::C3"; };
template<> struct address_map< 0x4006b007 > { static constexpr const char * name_str = "UART1::D"; };
template<> struct address_map< 0x4006b008 > { static constexpr const char * name_str = "UART1::MA1"; };
template<> struct address_map< 0x4006b009 > { static constexpr const char * name_str = "UART1::MA2"; };
template<> struct address_map< 0x4006b00a > { static constexpr const char * name_str = "UART1::C4"; };
template<> struct address_map< 0x4006b00b > { static constexpr const char * name_str = "UART1::C5"; };
template<> struct address_map< 0x4006b00c > { static constexpr const char * name_str = "UART1::ED"; };
template<> struct address_map< 0x4006b00d > { static constexpr const char * name_str = "UART1::MODEM"; };
template<> struct address_map< 0x4006b00e > { static constexpr const char * name_str = "UART1::IR"; };
template<> struct address_map< 0x4006b010 > { static constexpr const char * name_str = "UART1::PFIFO"; };
template<> struct address_map< 0x4006b011 > { static constexpr const char * name_str = "UART1::CFIFO"; };
template<> struct address_map< 0x4006b012 > { static constexpr const char * name_str = "UART1::SFIFO"; };
template<> struct address_map< 0x4006b013 > { static constexpr const char * name_str = "UART1::TWFIFO"; };
template<> struct address_map< 0x4006b014 > { static constexpr const char * name_str = "UART1::TCFIFO"; };
template<> struct address_map< 0x4006b015 > { static constexpr const char * name_str = "UART1::RWFIFO"; };
template<> struct address_map< 0x4006b016 > { static constexpr const char * name_str = "UART1::RCFIFO"; };
template<> struct address_map< 0x4006c000 > { static constexpr const char * name_str = "UART2::BDH"; };
template<> struct address_map< 0x4006c001 > { static constexpr const char * name_str = "UART2::BDL"; };
template<> struct address_map< 0x4006c002 > { static constexpr const char * name_str = "UART2::C1"; };
template<> struct address_map< 0x4006c003 > { static constexpr const char * name_str = "UART2::C2"; };
template<> struct address_map< 0x4006c004 > { static constexpr const char * name_str = "UART2::S1"; };
template<> struct address_map< 0x4006c005 > { static constexpr const char * name_str = "UART2::S2"; };
template<> struct address_map< 0x4006c006 > { static constexpr const char * name_str = "UART2::C3"; };
template<> struct address_map< 0x4006c007 > { static constexpr const char * name_str = "UART2::D"; };
template<> struct address_map< 0x4006c008 > { static constexpr const char * name_str = "UART2::MA1"; };
template<> struct address_map< 0x4006c009 > { static constexpr const char * name_str = "UART2::MA2"; };
template<> struct address_map< 0x4006c00a > { static constexpr const char * name_str = "UART2::C4"; };
template<> struct address_map< 0x4006c00b > { static constexpr const char * name_str = "UART2::C5"; };
template<> struct address_map< 0x4006c00c > { static constexpr const char * name_str = "UART2::ED"; };
template<> struct address_map< 0x4006c00d > { static constexpr const char * name_str = "UART2::MODEM"; };
template<> struct address_map< 0x4006c00e > { static constexpr const char * name_str = "UART2::IR"; };
template<> struct address_map< 0x4006c010 > { static constexpr const char * name_str = "UART2::PFIFO"; };
template<> struct address_map< 0x4006c011 > { static constexpr const char * name_str = "UART2::CFIFO"; };
template<> struct address_map< 0x4006c012 > { static constexpr const char * name_str = "UART2::SFIFO"; };
template<> struct address_map< 0x4006c013 > { static constexpr const char * name_str = "UART2::TWFIFO"; };
template<> struct address_map< 0x4006c014 > { static constexpr const char * name_str = "UART2::TCFIFO"; };
template<> struct address_map< 0x4006c015 > { static constexpr const char * name_str = "UART2::RWFIFO"; };
template<> struct address_map< 0x4006c016 > { static constexpr const char * name_str = "UART2::RCFIFO"; };
template<> struct address_map< 0x40072000 > { static constexpr const char * name_str = "USB0::PERID"; };
template<> struct address_map< 0x40072004 > { static constexpr const char * name_str = "USB0::IDCOMP"; };
template<> struct address_map< 0x40072008 > { static constexpr const char * name_str = "USB0::REV"; };
template<> struct address_map< 0x4007200c > { static constexpr const char * name_str = "USB0::ADDINFO"; };
template<> struct address_map< 0x40072010 > { static constexpr const char * name_str = "USB0::OTGISTAT"; };
template<> struct address_map< 0x40072014 > { static constexpr const char * name_str = "USB0::OTGICR"; };
template<> struct address_map< 0x40072018 > { static constexpr const char * name_str = "USB0::OTGSTAT"; };
template<> struct address_map< 0x4007201c > { static constexpr const char * name_str = "USB0::OTGCTL"; };
template<> struct address_map< 0x40072080 > { static constexpr const char * name_str = "USB0::ISTAT"; };
template<> struct address_map< 0x40072084 > { static constexpr const char * name_str = "USB0::INTEN"; };
template<> struct address_map< 0x40072088 > { static constexpr const char * name_str = "USB0::ERRSTAT"; };
template<> struct address_map< 0x4007208c > { static constexpr const char * name_str = "USB0::ERREN"; };
template<> struct address_map< 0x40072090 > { static constexpr const char * name_str = "USB0::STAT"; };
template<> struct address_map< 0x40072094 > { static constexpr const char * name_str = "USB0::CTL"; };
template<> struct address_map< 0x40072098 > { static constexpr const char * name_str = "USB0::ADDR"; };
template<> struct address_map< 0x4007209c > { static constexpr const char * name_str = "USB0::BDTPAGE1"; };
template<> struct address_map< 0x400720a0 > { static constexpr const char * name_str = "USB0::FRMNUML"; };
template<> struct address_map< 0x400720a4 > { static constexpr const char * name_str = "USB0::FRMNUMH"; };
template<> struct address_map< 0x400720a8 > { static constexpr const char * name_str = "USB0::TOKEN"; };
template<> struct address_map< 0x400720ac > { static constexpr const char * name_str = "USB0::SOFTHLD"; };
template<> struct address_map< 0x400720b0 > { static constexpr const char * name_str = "USB0::BDTPAGE2"; };
template<> struct address_map< 0x400720b4 > { static constexpr const char * name_str = "USB0::BDTPAGE3"; };
template<> struct address_map< 0x400720c0 > { static constexpr const char * name_str = "USB0::ENDPT%s"; };
template<> struct address_map< 0x40072100 > { static constexpr const char * name_str = "USB0::USBCTRL"; };
template<> struct address_map< 0x40072104 > { static constexpr const char * name_str = "USB0::OBSERVE"; };
template<> struct address_map< 0x40072108 > { static constexpr const char * name_str = "USB0::CONTROL"; };
template<> struct address_map< 0x4007210c > { static constexpr const char * name_str = "USB0::USBTRC0"; };
template<> struct address_map< 0x40072114 > { static constexpr const char * name_str = "USB0::USBFRMADJUST"; };
template<> struct address_map< 0x4007212c > { static constexpr const char * name_str = "USB0::MISCCTRL"; };
template<> struct address_map< 0x40072130 > { static constexpr const char * name_str = "USB0::STALL_IL_DIS"; };
template<> struct address_map< 0x40072134 > { static constexpr const char * name_str = "USB0::STALL_IH_DIS"; };
template<> struct address_map< 0x40072138 > { static constexpr const char * name_str = "USB0::STALL_OL_DIS"; };
template<> struct address_map< 0x4007213c > { static constexpr const char * name_str = "USB0::STALL_OH_DIS"; };
template<> struct address_map< 0x40072140 > { static constexpr const char * name_str = "USB0::CLK_RECOVER_CTRL"; };
template<> struct address_map< 0x40072144 > { static constexpr const char * name_str = "USB0::CLK_RECOVER_IRC_EN"; };
template<> struct address_map< 0x40072154 > { static constexpr const char * name_str = "USB0::CLK_RECOVER_INT_EN"; };
template<> struct address_map< 0x4007215c > { static constexpr const char * name_str = "USB0::CLK_RECOVER_INT_STATUS"; };
template<> struct address_map< 0x40073000 > { static constexpr const char * name_str = "CMP0::CR0"; };
template<> struct address_map< 0x40073001 > { static constexpr const char * name_str = "CMP0::CR1"; };
template<> struct address_map< 0x40073002 > { static constexpr const char * name_str = "CMP0::FPR"; };
template<> struct address_map< 0x40073003 > { static constexpr const char * name_str = "CMP0::SCR"; };
template<> struct address_map< 0x40073004 > { static constexpr const char * name_str = "CMP0::DACCR"; };
template<> struct address_map< 0x40073005 > { static constexpr const char * name_str = "CMP0::MUXCR"; };
template<> struct address_map< 0x4007c000 > { static constexpr const char * name_str = "LLWU::PE1"; };
template<> struct address_map< 0x4007c001 > { static constexpr const char * name_str = "LLWU::PE2"; };
template<> struct address_map< 0x4007c002 > { static constexpr const char * name_str = "LLWU::PE3"; };
template<> struct address_map< 0x4007c003 > { static constexpr const char * name_str = "LLWU::PE4"; };
template<> struct address_map< 0x4007c004 > { static constexpr const char * name_str = "LLWU::PE5"; };
template<> struct address_map< 0x4007c005 > { static constexpr const char * name_str = "LLWU::PE6"; };
template<> struct address_map< 0x4007c006 > { static constexpr const char * name_str = "LLWU::PE7"; };
template<> struct address_map< 0x4007c007 > { static constexpr const char * name_str = "LLWU::PE8"; };
template<> struct address_map< 0x4007c008 > { static constexpr const char * name_str = "LLWU::ME"; };
template<> struct address_map< 0x4007c009 > { static constexpr const char * name_str = "LLWU::PF1"; };
template<> struct address_map< 0x4007c00a > { static constexpr const char * name_str = "LLWU::PF2"; };
template<> struct address_map< 0x4007c00b > { static constexpr const char * name_str = "LLWU::PF3"; };
template<> struct address_map< 0x4007c00c > { static constexpr const char * name_str = "LLWU::PF4"; };
template<> struct address_map< 0x4007c00d > { static constexpr const char * name_str = "LLWU::MF5"; };
template<> struct address_map< 0x4007c00e > { static constexpr const char * name_str = "LLWU::FILT1"; };
template<> struct address_map< 0x4007c00f > { static constexpr const char * name_str = "LLWU::FILT2"; };
template<> struct address_map< 0x4007d000 > { static constexpr const char * name_str = "PMC::LVDSC1"; };
template<> struct address_map< 0x4007d001 > { static constexpr const char * name_str = "PMC::LVDSC2"; };
template<> struct address_map< 0x4007d002 > { static constexpr const char * name_str = "PMC::REGSC"; };
template<> struct address_map< 0x4007d00b > { static constexpr const char * name_str = "PMC::HVDSC1"; };
template<> struct address_map< 0x4007e000 > { static constexpr const char * name_str = "SMC::PMPROT"; };
template<> struct address_map< 0x4007e001 > { static constexpr const char * name_str = "SMC::PMCTRL"; };
template<> struct address_map< 0x4007e002 > { static constexpr const char * name_str = "SMC::STOPCTRL"; };
template<> struct address_map< 0x4007e003 > { static constexpr const char * name_str = "SMC::PMSTAT"; };
template<> struct address_map< 0x4007f000 > { static constexpr const char * name_str = "RCM::SRS0"; };
template<> struct address_map< 0x4007f001 > { static constexpr const char * name_str = "RCM::SRS1"; };
template<> struct address_map< 0x4007f004 > { static constexpr const char * name_str = "RCM::RPFC"; };
template<> struct address_map< 0x4007f005 > { static constexpr const char * name_str = "RCM::RPFW"; };
template<> struct address_map< 0x4007f008 > { static constexpr const char * name_str = "RCM::SSRS0"; };
template<> struct address_map< 0x4007f009 > { static constexpr const char * name_str = "RCM::SSRS1"; };
template<> struct address_map< 0x400ff000 > { static constexpr const char * name_str = "PTA::PDOR"; };
template<> struct address_map< 0x400ff004 > { static constexpr const char * name_str = "PTA::PSOR"; };
template<> struct address_map< 0x400ff008 > { static constexpr const char * name_str = "PTA::PCOR"; };
template<> struct address_map< 0x400ff00c > { static constexpr const char * name_str = "PTA::PTOR"; };
template<> struct address_map< 0x400ff010 > { static constexpr const char * name_str = "PTA::PDIR"; };
template<> struct address_map< 0x400ff014 > { static constexpr const char * name_str = "PTA::PDDR"; };
template<> struct address_map< 0x400ff040 > { static constexpr const char * name_str = "PTB::PDOR"; };
template<> struct address_map< 0x400ff044 > { static constexpr const char * name_str = "PTB::PSOR"; };
template<> struct address_map< 0x400ff048 > { static constexpr const char * name_str = "PTB::PCOR"; };
template<> struct address_map< 0x400ff04c > { static constexpr const char * name_str = "PTB::PTOR"; };
template<> struct address_map< 0x400ff050 > { static constexpr const char * name_str = "PTB::PDIR"; };
template<> struct address_map< 0x400ff054 > { static constexpr const char * name_str = "PTB::PDDR"; };
template<> struct address_map< 0x400ff080 > { static constexpr const char * name_str = "PTC::PDOR"; };
template<> struct address_map< 0x400ff084 > { static constexpr const char * name_str = "PTC::PSOR"; };
template<> struct address_map< 0x400ff088 > { static constexpr const char * name_str = "PTC::PCOR"; };
template<> struct address_map< 0x400ff08c > { static constexpr const char * name_str = "PTC::PTOR"; };
template<> struct address_map< 0x400ff090 > { static constexpr const char * name_str = "PTC::PDIR"; };
template<> struct address_map< 0x400ff094 > { static constexpr const char * name_str = "PTC::PDDR"; };
template<> struct address_map< 0x400ff0c0 > { static constexpr const char * name_str = "PTD::PDOR"; };
template<> struct address_map< 0x400ff0c4 > { static constexpr const char * name_str = "PTD::PSOR"; };
template<> struct address_map< 0x400ff0c8 > { static constexpr const char * name_str = "PTD::PCOR"; };
template<> struct address_map< 0x400ff0cc > { static constexpr const char * name_str = "PTD::PTOR"; };
template<> struct address_map< 0x400ff0d0 > { static constexpr const char * name_str = "PTD::PDIR"; };
template<> struct address_map< 0x400ff0d4 > { static constexpr const char * name_str = "PTD::PDDR"; };
template<> struct address_map< 0x400ff100 > { static constexpr const char * name_str = "PTE::PDOR"; };
template<> struct address_map< 0x400ff104 > { static constexpr const char * name_str = "PTE::PSOR"; };
template<> struct address_map< 0x400ff108 > { static constexpr const char * name_str = "PTE::PCOR"; };
template<> struct address_map< 0x400ff10c > { static constexpr const char * name_str = "PTE::PTOR"; };
template<> struct address_map< 0x400ff110 > { static constexpr const char * name_str = "PTE::PDIR"; };
template<> struct address_map< 0x400ff114 > { static constexpr const char * name_str = "PTE::PDDR"; };
template<> struct address_map< 0xe0080008 > { static constexpr const char * name_str = "MCM::PLASC"; };
template<> struct address_map< 0xe008000a > { static constexpr const char * name_str = "MCM::PLAMC"; };
template<> struct address_map< 0xe008000c > { static constexpr const char * name_str = "MCM::PLACR"; };
template<> struct address_map< 0xe0080010 > { static constexpr const char * name_str = "MCM::ISCR"; };
template<> struct address_map< 0xe0080040 > { static constexpr const char * name_str = "MCM::CPO"; };

} // namespace mptl

#endif // ARCH_REG_ADDRESS_MAP_HPP_INCLUDED
