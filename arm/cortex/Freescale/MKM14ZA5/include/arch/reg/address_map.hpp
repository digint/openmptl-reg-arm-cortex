/*
 * OpenMPTL - C++ Microprocessor Template Library
 *
 * This program is a derivative representation of a CMSIS System View
 * Description (SVD) file, and is subject to the corresponding license
 * (see "Freescale CMSIS-SVD License Agreement.pdf" in the parent directory).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */

////////////////////////////////////////////////////////////////////////
//
//  Import from CMSIS-SVD: "Freescale/MKM14ZA5.svd"
//
//  vendor: Freescale Semiconductor, Inc.
//  vendorID: Freescale
//  name: MKM14ZA5
//  series: Kinetis_M
//  version: 1.6
//  description: MKM14ZA5 Freescale Microcontroller
//  --------------------------------------------------------------------
//
//  C++ Header file, containing architecture specific register
//  declarations for use in OpenMPTL. It has been converted directly
//  from a CMSIS-SVD file.
//
//  https://digint.ch/openmptl
//  https://github.com/posborne/cmsis-svd
//

#ifndef ARCH_REG_ADDRESS_MAP_HPP_INCLUDED
#define ARCH_REG_ADDRESS_MAP_HPP_INCLUDED

#warning "using untested register declarations"

#include <register_type.hpp>

namespace mptl {

template<reg_addr_t addr>
struct address_map {
  static constexpr const char * name_str = nullptr;
};

template<> struct address_map< 0x00000400 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY3"; };
template<> struct address_map< 0x00000401 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY2"; };
template<> struct address_map< 0x00000402 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY1"; };
template<> struct address_map< 0x00000403 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY0"; };
template<> struct address_map< 0x00000404 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY7"; };
template<> struct address_map< 0x00000405 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY6"; };
template<> struct address_map< 0x00000406 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY5"; };
template<> struct address_map< 0x00000407 > { static constexpr const char * name_str = "FTFA_FlashConfig::BACKKEY4"; };
template<> struct address_map< 0x00000408 > { static constexpr const char * name_str = "FTFA_FlashConfig::FPROT3"; };
template<> struct address_map< 0x00000409 > { static constexpr const char * name_str = "FTFA_FlashConfig::FPROT2"; };
template<> struct address_map< 0x0000040a > { static constexpr const char * name_str = "FTFA_FlashConfig::FPROT1"; };
template<> struct address_map< 0x0000040b > { static constexpr const char * name_str = "FTFA_FlashConfig::FPROT0"; };
template<> struct address_map< 0x0000040c > { static constexpr const char * name_str = "FTFA_FlashConfig::FSEC"; };
template<> struct address_map< 0x0000040d > { static constexpr const char * name_str = "FTFA_FlashConfig::FOPT"; };
template<> struct address_map< 0x40000020 > { static constexpr const char * name_str = "AIPS::PACRA"; };
template<> struct address_map< 0x40000024 > { static constexpr const char * name_str = "AIPS::PACRB"; };
template<> struct address_map< 0x40000040 > { static constexpr const char * name_str = "AIPS::PACRE"; };
template<> struct address_map< 0x40000044 > { static constexpr const char * name_str = "AIPS::PACRF"; };
template<> struct address_map< 0x40000048 > { static constexpr const char * name_str = "AIPS::PACRG"; };
template<> struct address_map< 0x4000004c > { static constexpr const char * name_str = "AIPS::PACRH"; };
template<> struct address_map< 0x40000050 > { static constexpr const char * name_str = "AIPS::PACRI"; };
template<> struct address_map< 0x40000054 > { static constexpr const char * name_str = "AIPS::PACRJ"; };
template<> struct address_map< 0x40000058 > { static constexpr const char * name_str = "AIPS::PACRK"; };
template<> struct address_map< 0x4000005c > { static constexpr const char * name_str = "AIPS::PACRL"; };
template<> struct address_map< 0x40000060 > { static constexpr const char * name_str = "AIPS::PACRM"; };
template<> struct address_map< 0x40000064 > { static constexpr const char * name_str = "AIPS::PACRN"; };
template<> struct address_map< 0x40000068 > { static constexpr const char * name_str = "AIPS::PACRO"; };
template<> struct address_map< 0x4000006c > { static constexpr const char * name_str = "AIPS::PACRP"; };
template<> struct address_map< 0x40008100 > { static constexpr const char * name_str = "DMA::SAR0"; };
template<> struct address_map< 0x40008104 > { static constexpr const char * name_str = "DMA::DAR0"; };
template<> struct address_map< 0x40008108 > { static constexpr const char * name_str = "DMA::DSR_BCR0"; };
template<> struct address_map< 0x4000810b > { static constexpr const char * name_str = "DMA::DSR0"; };
template<> struct address_map< 0x4000810c > { static constexpr const char * name_str = "DMA::DCR0"; };
template<> struct address_map< 0x40008110 > { static constexpr const char * name_str = "DMA::SAR1"; };
template<> struct address_map< 0x40008114 > { static constexpr const char * name_str = "DMA::DAR1"; };
template<> struct address_map< 0x40008118 > { static constexpr const char * name_str = "DMA::DSR_BCR1"; };
template<> struct address_map< 0x4000811b > { static constexpr const char * name_str = "DMA::DSR1"; };
template<> struct address_map< 0x4000811c > { static constexpr const char * name_str = "DMA::DCR1"; };
template<> struct address_map< 0x40008120 > { static constexpr const char * name_str = "DMA::SAR2"; };
template<> struct address_map< 0x40008124 > { static constexpr const char * name_str = "DMA::DAR2"; };
template<> struct address_map< 0x40008128 > { static constexpr const char * name_str = "DMA::DSR_BCR2"; };
template<> struct address_map< 0x4000812b > { static constexpr const char * name_str = "DMA::DSR2"; };
template<> struct address_map< 0x4000812c > { static constexpr const char * name_str = "DMA::DCR2"; };
template<> struct address_map< 0x40008130 > { static constexpr const char * name_str = "DMA::SAR3"; };
template<> struct address_map< 0x40008134 > { static constexpr const char * name_str = "DMA::DAR3"; };
template<> struct address_map< 0x40008138 > { static constexpr const char * name_str = "DMA::DSR_BCR3"; };
template<> struct address_map< 0x4000813b > { static constexpr const char * name_str = "DMA::DSR3"; };
template<> struct address_map< 0x4000813c > { static constexpr const char * name_str = "DMA::DCR3"; };
template<> struct address_map< 0x4000a000 > { static constexpr const char * name_str = "MPU::CESR"; };
template<> struct address_map< 0x4000a010 > { static constexpr const char * name_str = "MPU::EAR%s"; };
template<> struct address_map< 0x4000a014 > { static constexpr const char * name_str = "MPU::EDR%s"; };
template<> struct address_map< 0x4000a400 > { static constexpr const char * name_str = "MPU::RGD%s_WORD0"; };
template<> struct address_map< 0x4000a404 > { static constexpr const char * name_str = "MPU::RGD%s_WORD1"; };
template<> struct address_map< 0x4000a408 > { static constexpr const char * name_str = "MPU::RGD%s_WORD2"; };
template<> struct address_map< 0x4000a40c > { static constexpr const char * name_str = "MPU::RGD%s_WORD3"; };
template<> struct address_map< 0x4000a800 > { static constexpr const char * name_str = "MPU::RGDAAC%s"; };
template<> struct address_map< 0x40020000 > { static constexpr const char * name_str = "FTFA::FSTAT"; };
template<> struct address_map< 0x40020001 > { static constexpr const char * name_str = "FTFA::FCNFG"; };
template<> struct address_map< 0x40020002 > { static constexpr const char * name_str = "FTFA::FSEC"; };
template<> struct address_map< 0x40020003 > { static constexpr const char * name_str = "FTFA::FOPT"; };
template<> struct address_map< 0x40020004 > { static constexpr const char * name_str = "FTFA::FCCOB%s"; };
template<> struct address_map< 0x40020010 > { static constexpr const char * name_str = "FTFA::FPROT%s"; };
template<> struct address_map< 0x40021000 > { static constexpr const char * name_str = "DMAMUX0::CHCFG"; };
template<> struct address_map< 0x40022000 > { static constexpr const char * name_str = "DMAMUX1::CHCFG"; };
template<> struct address_map< 0x40023000 > { static constexpr const char * name_str = "DMAMUX2::CHCFG"; };
template<> struct address_map< 0x40024000 > { static constexpr const char * name_str = "DMAMUX3::CHCFG"; };
template<> struct address_map< 0x40029000 > { static constexpr const char * name_str = "RNG::CR"; };
template<> struct address_map< 0x40029004 > { static constexpr const char * name_str = "RNG::SR"; };
template<> struct address_map< 0x40029008 > { static constexpr const char * name_str = "RNG::ER"; };
template<> struct address_map< 0x4002900c > { static constexpr const char * name_str = "RNG::OR"; };
template<> struct address_map< 0x4002b000 > { static constexpr const char * name_str = "ADC::SC1%s"; };
template<> struct address_map< 0x4002b010 > { static constexpr const char * name_str = "ADC::CFG1"; };
template<> struct address_map< 0x4002b014 > { static constexpr const char * name_str = "ADC::CFG2"; };
template<> struct address_map< 0x4002b018 > { static constexpr const char * name_str = "ADC::R%s"; };
template<> struct address_map< 0x4002b028 > { static constexpr const char * name_str = "ADC::CV%s"; };
template<> struct address_map< 0x4002b030 > { static constexpr const char * name_str = "ADC::SC2"; };
template<> struct address_map< 0x4002b034 > { static constexpr const char * name_str = "ADC::SC3"; };
template<> struct address_map< 0x4002b038 > { static constexpr const char * name_str = "ADC::OFS"; };
template<> struct address_map< 0x4002b03c > { static constexpr const char * name_str = "ADC::PG"; };
template<> struct address_map< 0x4002b044 > { static constexpr const char * name_str = "ADC::CLPD"; };
template<> struct address_map< 0x4002b048 > { static constexpr const char * name_str = "ADC::CLPS"; };
template<> struct address_map< 0x4002b04c > { static constexpr const char * name_str = "ADC::CLP4"; };
template<> struct address_map< 0x4002b050 > { static constexpr const char * name_str = "ADC::CLP3"; };
template<> struct address_map< 0x4002b054 > { static constexpr const char * name_str = "ADC::CLP2"; };
template<> struct address_map< 0x4002b058 > { static constexpr const char * name_str = "ADC::CLP1"; };
template<> struct address_map< 0x4002b05c > { static constexpr const char * name_str = "ADC::CLP0"; };
template<> struct address_map< 0x4002d000 > { static constexpr const char * name_str = "PIT0::MCR"; };
template<> struct address_map< 0x4002d100 > { static constexpr const char * name_str = "PIT0::LDVAL%s"; };
template<> struct address_map< 0x4002d104 > { static constexpr const char * name_str = "PIT0::CVAL%s"; };
template<> struct address_map< 0x4002d108 > { static constexpr const char * name_str = "PIT0::TCTRL%s"; };
template<> struct address_map< 0x4002d10c > { static constexpr const char * name_str = "PIT0::TFLG%s"; };
template<> struct address_map< 0x4002e000 > { static constexpr const char * name_str = "PIT1::MCR"; };
template<> struct address_map< 0x4002e100 > { static constexpr const char * name_str = "PIT1::LDVAL%s"; };
template<> struct address_map< 0x4002e104 > { static constexpr const char * name_str = "PIT1::CVAL%s"; };
template<> struct address_map< 0x4002e108 > { static constexpr const char * name_str = "PIT1::TCTRL%s"; };
template<> struct address_map< 0x4002e10c > { static constexpr const char * name_str = "PIT1::TFLG%s"; };
template<> struct address_map< 0x40030000 > { static constexpr const char * name_str = "AFE::CH0_CFR"; };
template<> struct address_map< 0x40030004 > { static constexpr const char * name_str = "AFE::CH1_CFR"; };
template<> struct address_map< 0x40030008 > { static constexpr const char * name_str = "AFE::CH2_CFR"; };
template<> struct address_map< 0x4003000c > { static constexpr const char * name_str = "AFE::CH3_CFR"; };
template<> struct address_map< 0x40030018 > { static constexpr const char * name_str = "AFE::CR"; };
template<> struct address_map< 0x4003001c > { static constexpr const char * name_str = "AFE::CKR"; };
template<> struct address_map< 0x40030020 > { static constexpr const char * name_str = "AFE::DI"; };
template<> struct address_map< 0x4003002c > { static constexpr const char * name_str = "AFE::CH0_DR"; };
template<> struct address_map< 0x40030030 > { static constexpr const char * name_str = "AFE::CH1_DR"; };
template<> struct address_map< 0x40030034 > { static constexpr const char * name_str = "AFE::CH2_DR"; };
template<> struct address_map< 0x40030038 > { static constexpr const char * name_str = "AFE::CH3_DR"; };
template<> struct address_map< 0x40030044 > { static constexpr const char * name_str = "AFE::CH0_RR"; };
template<> struct address_map< 0x40030048 > { static constexpr const char * name_str = "AFE::CH1_RR"; };
template<> struct address_map< 0x4003004c > { static constexpr const char * name_str = "AFE::CH2_RR"; };
template<> struct address_map< 0x40030050 > { static constexpr const char * name_str = "AFE::CH3_RR"; };
template<> struct address_map< 0x4003005c > { static constexpr const char * name_str = "AFE::SR"; };
template<> struct address_map< 0x40034000 > { static constexpr const char * name_str = "CRC::DATA"; };  /* svd2hpp: duplicate address for: CRC::DATA, CRC::DATAL, CRC::DATALL */
template<> struct address_map< 0x40034001 > { static constexpr const char * name_str = "CRC::DATALU"; };
template<> struct address_map< 0x40034002 > { static constexpr const char * name_str = "CRC::DATAH"; };  /* svd2hpp: duplicate address for: CRC::DATAH, CRC::DATAHL */
template<> struct address_map< 0x40034003 > { static constexpr const char * name_str = "CRC::DATAHU"; };
template<> struct address_map< 0x40034004 > { static constexpr const char * name_str = "CRC::GPOLY"; };  /* svd2hpp: duplicate address for: CRC::GPOLY, CRC::GPOLYL, CRC::GPOLYLL */
template<> struct address_map< 0x40034005 > { static constexpr const char * name_str = "CRC::GPOLYLU"; };
template<> struct address_map< 0x40034006 > { static constexpr const char * name_str = "CRC::GPOLYH"; };  /* svd2hpp: duplicate address for: CRC::GPOLYH, CRC::GPOLYHL */
template<> struct address_map< 0x40034007 > { static constexpr const char * name_str = "CRC::GPOLYHU"; };
template<> struct address_map< 0x40034008 > { static constexpr const char * name_str = "CRC::CTRL"; };
template<> struct address_map< 0x4003400b > { static constexpr const char * name_str = "CRC::CTRLHU"; };
template<> struct address_map< 0x4003c000 > { static constexpr const char * name_str = "LPTMR::CSR"; };
template<> struct address_map< 0x4003c004 > { static constexpr const char * name_str = "LPTMR::PSR"; };
template<> struct address_map< 0x4003c008 > { static constexpr const char * name_str = "LPTMR::CMR"; };
template<> struct address_map< 0x4003c00c > { static constexpr const char * name_str = "LPTMR::CNR"; };
template<> struct address_map< 0x4003e000 > { static constexpr const char * name_str = "SIM::SOPT1"; };
template<> struct address_map< 0x4003e004 > { static constexpr const char * name_str = "SIM::SOPT1_CFG"; };
template<> struct address_map< 0x4003f004 > { static constexpr const char * name_str = "SIM::CTRL_REG"; };
template<> struct address_map< 0x4003f024 > { static constexpr const char * name_str = "SIM::SDID"; };
template<> struct address_map< 0x4003f034 > { static constexpr const char * name_str = "SIM::SCGC4"; };
template<> struct address_map< 0x4003f038 > { static constexpr const char * name_str = "SIM::SCGC5"; };
template<> struct address_map< 0x4003f03c > { static constexpr const char * name_str = "SIM::SCGC6"; };
template<> struct address_map< 0x4003f040 > { static constexpr const char * name_str = "SIM::SCGC7"; };
template<> struct address_map< 0x4003f044 > { static constexpr const char * name_str = "SIM::CLKDIV1"; };
template<> struct address_map< 0x4003f04c > { static constexpr const char * name_str = "SIM::FCFG1"; };
template<> struct address_map< 0x4003f050 > { static constexpr const char * name_str = "SIM::FCFG2"; };
template<> struct address_map< 0x4003f054 > { static constexpr const char * name_str = "SIM::UID0"; };
template<> struct address_map< 0x4003f058 > { static constexpr const char * name_str = "SIM::UID1"; };
template<> struct address_map< 0x4003f05c > { static constexpr const char * name_str = "SIM::UID2"; };
template<> struct address_map< 0x4003f060 > { static constexpr const char * name_str = "SIM::UID3"; };
template<> struct address_map< 0x4003f06c > { static constexpr const char * name_str = "SIM::MISC_CTL"; };
template<> struct address_map< 0x40046000 > { static constexpr const char * name_str = "PORTA::PCR%s"; };
template<> struct address_map< 0x40046080 > { static constexpr const char * name_str = "PORTA::GPCLR"; };
template<> struct address_map< 0x40046084 > { static constexpr const char * name_str = "PORTA::GPCHR"; };
template<> struct address_map< 0x400460a0 > { static constexpr const char * name_str = "PORTA::ISFR"; };
template<> struct address_map< 0x40047000 > { static constexpr const char * name_str = "PORTB::PCR%s"; };
template<> struct address_map< 0x40047080 > { static constexpr const char * name_str = "PORTB::GPCLR"; };
template<> struct address_map< 0x40047084 > { static constexpr const char * name_str = "PORTB::GPCHR"; };
template<> struct address_map< 0x400470a0 > { static constexpr const char * name_str = "PORTB::ISFR"; };
template<> struct address_map< 0x40048000 > { static constexpr const char * name_str = "PORTC::PCR%s"; };
template<> struct address_map< 0x40048080 > { static constexpr const char * name_str = "PORTC::GPCLR"; };
template<> struct address_map< 0x40048084 > { static constexpr const char * name_str = "PORTC::GPCHR"; };
template<> struct address_map< 0x400480a0 > { static constexpr const char * name_str = "PORTC::ISFR"; };
template<> struct address_map< 0x40049000 > { static constexpr const char * name_str = "PORTD::PCR%s"; };
template<> struct address_map< 0x40049080 > { static constexpr const char * name_str = "PORTD::GPCLR"; };
template<> struct address_map< 0x40049084 > { static constexpr const char * name_str = "PORTD::GPCHR"; };
template<> struct address_map< 0x400490a0 > { static constexpr const char * name_str = "PORTD::ISFR"; };
template<> struct address_map< 0x4004a000 > { static constexpr const char * name_str = "PORTE::PCR%s"; };
template<> struct address_map< 0x4004a080 > { static constexpr const char * name_str = "PORTE::GPCLR"; };
template<> struct address_map< 0x4004a084 > { static constexpr const char * name_str = "PORTE::GPCHR"; };
template<> struct address_map< 0x4004a0a0 > { static constexpr const char * name_str = "PORTE::ISFR"; };
template<> struct address_map< 0x4004a0c0 > { static constexpr const char * name_str = "PORTE::DFER"; };
template<> struct address_map< 0x4004a0c4 > { static constexpr const char * name_str = "PORTE::DFCR"; };
template<> struct address_map< 0x4004a0c8 > { static constexpr const char * name_str = "PORTE::DFWR"; };
template<> struct address_map< 0x4004b000 > { static constexpr const char * name_str = "PORTF::PCR%s"; };
template<> struct address_map< 0x4004b080 > { static constexpr const char * name_str = "PORTF::GPCLR"; };
template<> struct address_map< 0x4004b084 > { static constexpr const char * name_str = "PORTF::GPCHR"; };
template<> struct address_map< 0x4004b0a0 > { static constexpr const char * name_str = "PORTF::ISFR"; };
template<> struct address_map< 0x4004c000 > { static constexpr const char * name_str = "PORTG::PCR%s"; };
template<> struct address_map< 0x4004c080 > { static constexpr const char * name_str = "PORTG::GPCLR"; };
template<> struct address_map< 0x4004c084 > { static constexpr const char * name_str = "PORTG::GPCHR"; };
template<> struct address_map< 0x4004c0a0 > { static constexpr const char * name_str = "PORTG::ISFR"; };
template<> struct address_map< 0x4004d000 > { static constexpr const char * name_str = "PORTH::PCR%s"; };
template<> struct address_map< 0x4004d080 > { static constexpr const char * name_str = "PORTH::GPCLR"; };
template<> struct address_map< 0x4004d084 > { static constexpr const char * name_str = "PORTH::GPCHR"; };
template<> struct address_map< 0x4004d0a0 > { static constexpr const char * name_str = "PORTH::ISFR"; };
template<> struct address_map< 0x4004e000 > { static constexpr const char * name_str = "PORTI::PCR%s"; };
template<> struct address_map< 0x4004e080 > { static constexpr const char * name_str = "PORTI::GPCLR"; };
template<> struct address_map< 0x4004e084 > { static constexpr const char * name_str = "PORTI::GPCHR"; };
template<> struct address_map< 0x4004e0a0 > { static constexpr const char * name_str = "PORTI::ISFR"; };
template<> struct address_map< 0x40050000 > { static constexpr const char * name_str = "RTC::YEARMON"; };
template<> struct address_map< 0x40050002 > { static constexpr const char * name_str = "RTC::DAYS"; };
template<> struct address_map< 0x40050004 > { static constexpr const char * name_str = "RTC::HOURMIN"; };
template<> struct address_map< 0x40050006 > { static constexpr const char * name_str = "RTC::SECONDS"; };
template<> struct address_map< 0x40050008 > { static constexpr const char * name_str = "RTC::ALM_YEARMON"; };
template<> struct address_map< 0x4005000a > { static constexpr const char * name_str = "RTC::ALM_DAYS"; };
template<> struct address_map< 0x4005000c > { static constexpr const char * name_str = "RTC::ALM_HOURMIN"; };
template<> struct address_map< 0x4005000e > { static constexpr const char * name_str = "RTC::ALM_SECONDS"; };
template<> struct address_map< 0x40050010 > { static constexpr const char * name_str = "RTC::CTRL"; };
template<> struct address_map< 0x40050012 > { static constexpr const char * name_str = "RTC::STATUS"; };
template<> struct address_map< 0x40050014 > { static constexpr const char * name_str = "RTC::ISR"; };
template<> struct address_map< 0x40050016 > { static constexpr const char * name_str = "RTC::IER"; };
template<> struct address_map< 0x40050020 > { static constexpr const char * name_str = "RTC::GP_DATA_REG"; };
template<> struct address_map< 0x40050022 > { static constexpr const char * name_str = "RTC::DST_HOUR"; };
template<> struct address_map< 0x40050024 > { static constexpr const char * name_str = "RTC::DST_MONTH"; };
template<> struct address_map< 0x40050026 > { static constexpr const char * name_str = "RTC::DST_DAY"; };
template<> struct address_map< 0x40050028 > { static constexpr const char * name_str = "RTC::COMPEN"; };
template<> struct address_map< 0x4005002c > { static constexpr const char * name_str = "RTC::TAMPER_DIRECTION"; };
template<> struct address_map< 0x4005002e > { static constexpr const char * name_str = "RTC::TAMPER_QSCR"; };
template<> struct address_map< 0x40050032 > { static constexpr const char * name_str = "RTC::TAMPER_SCR"; };
template<> struct address_map< 0x40050034 > { static constexpr const char * name_str = "RTC::FILTER01_CFG"; };
template<> struct address_map< 0x40050036 > { static constexpr const char * name_str = "RTC::FILTER2_CFG"; };
template<> struct address_map< 0x40050040 > { static constexpr const char * name_str = "RTC::TAMPER_QUEUE"; };
template<> struct address_map< 0x40050042 > { static constexpr const char * name_str = "RTC::CTRL2"; };
template<> struct address_map< 0x40053000 > { static constexpr const char * name_str = "WDOG::STCTRLH"; };
template<> struct address_map< 0x40053002 > { static constexpr const char * name_str = "WDOG::STCTRLL"; };
template<> struct address_map< 0x40053004 > { static constexpr const char * name_str = "WDOG::TOVALH"; };
template<> struct address_map< 0x40053006 > { static constexpr const char * name_str = "WDOG::TOVALL"; };
template<> struct address_map< 0x40053008 > { static constexpr const char * name_str = "WDOG::WINH"; };
template<> struct address_map< 0x4005300a > { static constexpr const char * name_str = "WDOG::WINL"; };
template<> struct address_map< 0x4005300c > { static constexpr const char * name_str = "WDOG::REFRESH"; };
template<> struct address_map< 0x4005300e > { static constexpr const char * name_str = "WDOG::UNLOCK"; };
template<> struct address_map< 0x40053010 > { static constexpr const char * name_str = "WDOG::TMROUTH"; };
template<> struct address_map< 0x40053012 > { static constexpr const char * name_str = "WDOG::TMROUTL"; };
template<> struct address_map< 0x40053014 > { static constexpr const char * name_str = "WDOG::RSTCNT"; };
template<> struct address_map< 0x40053016 > { static constexpr const char * name_str = "WDOG::PRESC"; };
template<> struct address_map< 0x40055000 > { static constexpr const char * name_str = "XBAR::SEL0"; };
template<> struct address_map< 0x40055002 > { static constexpr const char * name_str = "XBAR::SEL1"; };
template<> struct address_map< 0x40055004 > { static constexpr const char * name_str = "XBAR::SEL2"; };
template<> struct address_map< 0x40055006 > { static constexpr const char * name_str = "XBAR::SEL3"; };
template<> struct address_map< 0x40055008 > { static constexpr const char * name_str = "XBAR::SEL4"; };
template<> struct address_map< 0x4005500a > { static constexpr const char * name_str = "XBAR::SEL5"; };
template<> struct address_map< 0x4005500c > { static constexpr const char * name_str = "XBAR::SEL6"; };
template<> struct address_map< 0x4005500e > { static constexpr const char * name_str = "XBAR::SEL7"; };
template<> struct address_map< 0x40055010 > { static constexpr const char * name_str = "XBAR::SEL8"; };
template<> struct address_map< 0x40055012 > { static constexpr const char * name_str = "XBAR::SEL9"; };
template<> struct address_map< 0x40055014 > { static constexpr const char * name_str = "XBAR::SEL10"; };
template<> struct address_map< 0x40055016 > { static constexpr const char * name_str = "XBAR::SEL11"; };
template<> struct address_map< 0x40055018 > { static constexpr const char * name_str = "XBAR::SEL12"; };
template<> struct address_map< 0x4005501a > { static constexpr const char * name_str = "XBAR::SEL13"; };
template<> struct address_map< 0x4005501c > { static constexpr const char * name_str = "XBAR::SEL14"; };
template<> struct address_map< 0x4005501e > { static constexpr const char * name_str = "XBAR::SEL15"; };
template<> struct address_map< 0x40055020 > { static constexpr const char * name_str = "XBAR::SEL16"; };
template<> struct address_map< 0x40055022 > { static constexpr const char * name_str = "XBAR::CTRL0"; };
template<> struct address_map< 0x40057000 > { static constexpr const char * name_str = "TMR0::COMP1"; };
template<> struct address_map< 0x40057002 > { static constexpr const char * name_str = "TMR0::COMP2"; };
template<> struct address_map< 0x40057004 > { static constexpr const char * name_str = "TMR0::CAPT"; };
template<> struct address_map< 0x40057006 > { static constexpr const char * name_str = "TMR0::LOAD"; };
template<> struct address_map< 0x40057008 > { static constexpr const char * name_str = "TMR0::HOLD"; };
template<> struct address_map< 0x4005700a > { static constexpr const char * name_str = "TMR0::CNTR"; };
template<> struct address_map< 0x4005700c > { static constexpr const char * name_str = "TMR0::CTRL"; };
template<> struct address_map< 0x4005700e > { static constexpr const char * name_str = "TMR0::SCTRL"; };
template<> struct address_map< 0x40057010 > { static constexpr const char * name_str = "TMR0::CMPLD1"; };
template<> struct address_map< 0x40057012 > { static constexpr const char * name_str = "TMR0::CMPLD2"; };
template<> struct address_map< 0x40057014 > { static constexpr const char * name_str = "TMR0::CSCTRL"; };
template<> struct address_map< 0x40057016 > { static constexpr const char * name_str = "TMR0::FILT"; };
template<> struct address_map< 0x4005701e > { static constexpr const char * name_str = "TMR0::ENBL"; };
template<> struct address_map< 0x40058000 > { static constexpr const char * name_str = "TMR1::COMP1"; };
template<> struct address_map< 0x40058002 > { static constexpr const char * name_str = "TMR1::COMP2"; };
template<> struct address_map< 0x40058004 > { static constexpr const char * name_str = "TMR1::CAPT"; };
template<> struct address_map< 0x40058006 > { static constexpr const char * name_str = "TMR1::LOAD"; };
template<> struct address_map< 0x40058008 > { static constexpr const char * name_str = "TMR1::HOLD"; };
template<> struct address_map< 0x4005800a > { static constexpr const char * name_str = "TMR1::CNTR"; };
template<> struct address_map< 0x4005800c > { static constexpr const char * name_str = "TMR1::CTRL"; };
template<> struct address_map< 0x4005800e > { static constexpr const char * name_str = "TMR1::SCTRL"; };
template<> struct address_map< 0x40058010 > { static constexpr const char * name_str = "TMR1::CMPLD1"; };
template<> struct address_map< 0x40058012 > { static constexpr const char * name_str = "TMR1::CMPLD2"; };
template<> struct address_map< 0x40058014 > { static constexpr const char * name_str = "TMR1::CSCTRL"; };
template<> struct address_map< 0x40058016 > { static constexpr const char * name_str = "TMR1::FILT"; };
template<> struct address_map< 0x40059000 > { static constexpr const char * name_str = "TMR2::COMP1"; };
template<> struct address_map< 0x40059002 > { static constexpr const char * name_str = "TMR2::COMP2"; };
template<> struct address_map< 0x40059004 > { static constexpr const char * name_str = "TMR2::CAPT"; };
template<> struct address_map< 0x40059006 > { static constexpr const char * name_str = "TMR2::LOAD"; };
template<> struct address_map< 0x40059008 > { static constexpr const char * name_str = "TMR2::HOLD"; };
template<> struct address_map< 0x4005900a > { static constexpr const char * name_str = "TMR2::CNTR"; };
template<> struct address_map< 0x4005900c > { static constexpr const char * name_str = "TMR2::CTRL"; };
template<> struct address_map< 0x4005900e > { static constexpr const char * name_str = "TMR2::SCTRL"; };
template<> struct address_map< 0x40059010 > { static constexpr const char * name_str = "TMR2::CMPLD1"; };
template<> struct address_map< 0x40059012 > { static constexpr const char * name_str = "TMR2::CMPLD2"; };
template<> struct address_map< 0x40059014 > { static constexpr const char * name_str = "TMR2::CSCTRL"; };
template<> struct address_map< 0x40059016 > { static constexpr const char * name_str = "TMR2::FILT"; };
template<> struct address_map< 0x4005a000 > { static constexpr const char * name_str = "TMR3::COMP1"; };
template<> struct address_map< 0x4005a002 > { static constexpr const char * name_str = "TMR3::COMP2"; };
template<> struct address_map< 0x4005a004 > { static constexpr const char * name_str = "TMR3::CAPT"; };
template<> struct address_map< 0x4005a006 > { static constexpr const char * name_str = "TMR3::LOAD"; };
template<> struct address_map< 0x4005a008 > { static constexpr const char * name_str = "TMR3::HOLD"; };
template<> struct address_map< 0x4005a00a > { static constexpr const char * name_str = "TMR3::CNTR"; };
template<> struct address_map< 0x4005a00c > { static constexpr const char * name_str = "TMR3::CTRL"; };
template<> struct address_map< 0x4005a00e > { static constexpr const char * name_str = "TMR3::SCTRL"; };
template<> struct address_map< 0x4005a010 > { static constexpr const char * name_str = "TMR3::CMPLD1"; };
template<> struct address_map< 0x4005a012 > { static constexpr const char * name_str = "TMR3::CMPLD2"; };
template<> struct address_map< 0x4005a014 > { static constexpr const char * name_str = "TMR3::CSCTRL"; };
template<> struct address_map< 0x4005a016 > { static constexpr const char * name_str = "TMR3::FILT"; };
template<> struct address_map< 0x40061000 > { static constexpr const char * name_str = "EWM::CTRL"; };
template<> struct address_map< 0x40061001 > { static constexpr const char * name_str = "EWM::SERV"; };
template<> struct address_map< 0x40061002 > { static constexpr const char * name_str = "EWM::CMPL"; };
template<> struct address_map< 0x40061003 > { static constexpr const char * name_str = "EWM::CMPH"; };
template<> struct address_map< 0x40064000 > { static constexpr const char * name_str = "MCG::C1"; };
template<> struct address_map< 0x40064001 > { static constexpr const char * name_str = "MCG::C2"; };
template<> struct address_map< 0x40064002 > { static constexpr const char * name_str = "MCG::C3"; };
template<> struct address_map< 0x40064003 > { static constexpr const char * name_str = "MCG::C4"; };
template<> struct address_map< 0x40064004 > { static constexpr const char * name_str = "MCG::C5"; };
template<> struct address_map< 0x40064005 > { static constexpr const char * name_str = "MCG::C6"; };
template<> struct address_map< 0x40064006 > { static constexpr const char * name_str = "MCG::S"; };
template<> struct address_map< 0x40064008 > { static constexpr const char * name_str = "MCG::SC"; };
template<> struct address_map< 0x4006400a > { static constexpr const char * name_str = "MCG::ATCVH"; };
template<> struct address_map< 0x4006400b > { static constexpr const char * name_str = "MCG::ATCVL"; };
template<> struct address_map< 0x4006400c > { static constexpr const char * name_str = "MCG::C7"; };
template<> struct address_map< 0x4006400d > { static constexpr const char * name_str = "MCG::C8"; };
template<> struct address_map< 0x4006400e > { static constexpr const char * name_str = "MCG::C9"; };
template<> struct address_map< 0x40066000 > { static constexpr const char * name_str = "OSC::CR"; };
template<> struct address_map< 0x40067000 > { static constexpr const char * name_str = "I2C0::A1"; };
template<> struct address_map< 0x40067001 > { static constexpr const char * name_str = "I2C0::F"; };
template<> struct address_map< 0x40067002 > { static constexpr const char * name_str = "I2C0::C1"; };
template<> struct address_map< 0x40067003 > { static constexpr const char * name_str = "I2C0::S"; };
template<> struct address_map< 0x40067004 > { static constexpr const char * name_str = "I2C0::D"; };
template<> struct address_map< 0x40067005 > { static constexpr const char * name_str = "I2C0::C2"; };
template<> struct address_map< 0x40067006 > { static constexpr const char * name_str = "I2C0::FLT"; };
template<> struct address_map< 0x40067007 > { static constexpr const char * name_str = "I2C0::RA"; };
template<> struct address_map< 0x40067008 > { static constexpr const char * name_str = "I2C0::SMB"; };
template<> struct address_map< 0x40067009 > { static constexpr const char * name_str = "I2C0::A2"; };
template<> struct address_map< 0x4006700a > { static constexpr const char * name_str = "I2C0::SLTH"; };
template<> struct address_map< 0x4006700b > { static constexpr const char * name_str = "I2C0::SLTL"; };
template<> struct address_map< 0x40068000 > { static constexpr const char * name_str = "I2C1::A1"; };
template<> struct address_map< 0x40068001 > { static constexpr const char * name_str = "I2C1::F"; };
template<> struct address_map< 0x40068002 > { static constexpr const char * name_str = "I2C1::C1"; };
template<> struct address_map< 0x40068003 > { static constexpr const char * name_str = "I2C1::S"; };
template<> struct address_map< 0x40068004 > { static constexpr const char * name_str = "I2C1::D"; };
template<> struct address_map< 0x40068005 > { static constexpr const char * name_str = "I2C1::C2"; };
template<> struct address_map< 0x40068006 > { static constexpr const char * name_str = "I2C1::FLT"; };
template<> struct address_map< 0x40068007 > { static constexpr const char * name_str = "I2C1::RA"; };
template<> struct address_map< 0x40068008 > { static constexpr const char * name_str = "I2C1::SMB"; };
template<> struct address_map< 0x40068009 > { static constexpr const char * name_str = "I2C1::A2"; };
template<> struct address_map< 0x4006800a > { static constexpr const char * name_str = "I2C1::SLTH"; };
template<> struct address_map< 0x4006800b > { static constexpr const char * name_str = "I2C1::SLTL"; };
template<> struct address_map< 0x4006a000 > { static constexpr const char * name_str = "UART0::BDH"; };
template<> struct address_map< 0x4006a001 > { static constexpr const char * name_str = "UART0::BDL"; };
template<> struct address_map< 0x4006a002 > { static constexpr const char * name_str = "UART0::C1"; };
template<> struct address_map< 0x4006a003 > { static constexpr const char * name_str = "UART0::C2"; };
template<> struct address_map< 0x4006a004 > { static constexpr const char * name_str = "UART0::S1"; };
template<> struct address_map< 0x4006a005 > { static constexpr const char * name_str = "UART0::S2"; };
template<> struct address_map< 0x4006a006 > { static constexpr const char * name_str = "UART0::C3"; };
template<> struct address_map< 0x4006a007 > { static constexpr const char * name_str = "UART0::D"; };
template<> struct address_map< 0x4006a008 > { static constexpr const char * name_str = "UART0::MA1"; };
template<> struct address_map< 0x4006a009 > { static constexpr const char * name_str = "UART0::MA2"; };
template<> struct address_map< 0x4006a00a > { static constexpr const char * name_str = "UART0::C4"; };
template<> struct address_map< 0x4006a00b > { static constexpr const char * name_str = "UART0::C5"; };
template<> struct address_map< 0x4006a00c > { static constexpr const char * name_str = "UART0::ED"; };
template<> struct address_map< 0x4006a00d > { static constexpr const char * name_str = "UART0::MODEM"; };
template<> struct address_map< 0x4006a010 > { static constexpr const char * name_str = "UART0::PFIFO"; };
template<> struct address_map< 0x4006a011 > { static constexpr const char * name_str = "UART0::CFIFO"; };
template<> struct address_map< 0x4006a012 > { static constexpr const char * name_str = "UART0::SFIFO"; };
template<> struct address_map< 0x4006a013 > { static constexpr const char * name_str = "UART0::TWFIFO"; };
template<> struct address_map< 0x4006a014 > { static constexpr const char * name_str = "UART0::TCFIFO"; };
template<> struct address_map< 0x4006a015 > { static constexpr const char * name_str = "UART0::RWFIFO"; };
template<> struct address_map< 0x4006a016 > { static constexpr const char * name_str = "UART0::RCFIFO"; };
template<> struct address_map< 0x4006b000 > { static constexpr const char * name_str = "UART1::BDH"; };
template<> struct address_map< 0x4006b001 > { static constexpr const char * name_str = "UART1::BDL"; };
template<> struct address_map< 0x4006b002 > { static constexpr const char * name_str = "UART1::C1"; };
template<> struct address_map< 0x4006b003 > { static constexpr const char * name_str = "UART1::C2"; };
template<> struct address_map< 0x4006b004 > { static constexpr const char * name_str = "UART1::S1"; };
template<> struct address_map< 0x4006b005 > { static constexpr const char * name_str = "UART1::S2"; };
template<> struct address_map< 0x4006b006 > { static constexpr const char * name_str = "UART1::C3"; };
template<> struct address_map< 0x4006b007 > { static constexpr const char * name_str = "UART1::D"; };
template<> struct address_map< 0x4006b008 > { static constexpr const char * name_str = "UART1::MA1"; };
template<> struct address_map< 0x4006b009 > { static constexpr const char * name_str = "UART1::MA2"; };
template<> struct address_map< 0x4006b00a > { static constexpr const char * name_str = "UART1::C4"; };
template<> struct address_map< 0x4006b00b > { static constexpr const char * name_str = "UART1::C5"; };
template<> struct address_map< 0x4006b00c > { static constexpr const char * name_str = "UART1::ED"; };
template<> struct address_map< 0x4006b00d > { static constexpr const char * name_str = "UART1::MODEM"; };
template<> struct address_map< 0x4006b010 > { static constexpr const char * name_str = "UART1::PFIFO"; };
template<> struct address_map< 0x4006b011 > { static constexpr const char * name_str = "UART1::CFIFO"; };
template<> struct address_map< 0x4006b012 > { static constexpr const char * name_str = "UART1::SFIFO"; };
template<> struct address_map< 0x4006b013 > { static constexpr const char * name_str = "UART1::TWFIFO"; };
template<> struct address_map< 0x4006b014 > { static constexpr const char * name_str = "UART1::TCFIFO"; };
template<> struct address_map< 0x4006b015 > { static constexpr const char * name_str = "UART1::RWFIFO"; };
template<> struct address_map< 0x4006b016 > { static constexpr const char * name_str = "UART1::RCFIFO"; };
template<> struct address_map< 0x4006b018 > { static constexpr const char * name_str = "UART1::C7816"; };
template<> struct address_map< 0x4006b019 > { static constexpr const char * name_str = "UART1::IE7816"; };
template<> struct address_map< 0x4006b01a > { static constexpr const char * name_str = "UART1::IS7816"; };
template<> struct address_map< 0x4006b01b > { static constexpr const char * name_str = "UART1::WP7816T1"; };  /* svd2hpp: duplicate address for: UART1::WP7816T0, UART1::WP7816T1 */
template<> struct address_map< 0x4006b01c > { static constexpr const char * name_str = "UART1::WN7816"; };
template<> struct address_map< 0x4006b01d > { static constexpr const char * name_str = "UART1::WF7816"; };
template<> struct address_map< 0x4006b01e > { static constexpr const char * name_str = "UART1::ET7816"; };
template<> struct address_map< 0x4006b01f > { static constexpr const char * name_str = "UART1::TL7816"; };
template<> struct address_map< 0x4006c000 > { static constexpr const char * name_str = "UART2::BDH"; };
template<> struct address_map< 0x4006c001 > { static constexpr const char * name_str = "UART2::BDL"; };
template<> struct address_map< 0x4006c002 > { static constexpr const char * name_str = "UART2::C1"; };
template<> struct address_map< 0x4006c003 > { static constexpr const char * name_str = "UART2::C2"; };
template<> struct address_map< 0x4006c004 > { static constexpr const char * name_str = "UART2::S1"; };
template<> struct address_map< 0x4006c005 > { static constexpr const char * name_str = "UART2::S2"; };
template<> struct address_map< 0x4006c006 > { static constexpr const char * name_str = "UART2::C3"; };
template<> struct address_map< 0x4006c007 > { static constexpr const char * name_str = "UART2::D"; };
template<> struct address_map< 0x4006c008 > { static constexpr const char * name_str = "UART2::MA1"; };
template<> struct address_map< 0x4006c009 > { static constexpr const char * name_str = "UART2::MA2"; };
template<> struct address_map< 0x4006c00a > { static constexpr const char * name_str = "UART2::C4"; };
template<> struct address_map< 0x4006c00b > { static constexpr const char * name_str = "UART2::C5"; };
template<> struct address_map< 0x4006c00c > { static constexpr const char * name_str = "UART2::ED"; };
template<> struct address_map< 0x4006c00d > { static constexpr const char * name_str = "UART2::MODEM"; };
template<> struct address_map< 0x4006c010 > { static constexpr const char * name_str = "UART2::PFIFO"; };
template<> struct address_map< 0x4006c011 > { static constexpr const char * name_str = "UART2::CFIFO"; };
template<> struct address_map< 0x4006c012 > { static constexpr const char * name_str = "UART2::SFIFO"; };
template<> struct address_map< 0x4006c013 > { static constexpr const char * name_str = "UART2::TWFIFO"; };
template<> struct address_map< 0x4006c014 > { static constexpr const char * name_str = "UART2::TCFIFO"; };
template<> struct address_map< 0x4006c015 > { static constexpr const char * name_str = "UART2::RWFIFO"; };
template<> struct address_map< 0x4006c016 > { static constexpr const char * name_str = "UART2::RCFIFO"; };
template<> struct address_map< 0x4006d000 > { static constexpr const char * name_str = "UART3::BDH"; };
template<> struct address_map< 0x4006d001 > { static constexpr const char * name_str = "UART3::BDL"; };
template<> struct address_map< 0x4006d002 > { static constexpr const char * name_str = "UART3::C1"; };
template<> struct address_map< 0x4006d003 > { static constexpr const char * name_str = "UART3::C2"; };
template<> struct address_map< 0x4006d004 > { static constexpr const char * name_str = "UART3::S1"; };
template<> struct address_map< 0x4006d005 > { static constexpr const char * name_str = "UART3::S2"; };
template<> struct address_map< 0x4006d006 > { static constexpr const char * name_str = "UART3::C3"; };
template<> struct address_map< 0x4006d007 > { static constexpr const char * name_str = "UART3::D"; };
template<> struct address_map< 0x4006d008 > { static constexpr const char * name_str = "UART3::MA1"; };
template<> struct address_map< 0x4006d009 > { static constexpr const char * name_str = "UART3::MA2"; };
template<> struct address_map< 0x4006d00a > { static constexpr const char * name_str = "UART3::C4"; };
template<> struct address_map< 0x4006d00b > { static constexpr const char * name_str = "UART3::C5"; };
template<> struct address_map< 0x4006d00c > { static constexpr const char * name_str = "UART3::ED"; };
template<> struct address_map< 0x4006d00d > { static constexpr const char * name_str = "UART3::MODEM"; };
template<> struct address_map< 0x4006d010 > { static constexpr const char * name_str = "UART3::PFIFO"; };
template<> struct address_map< 0x4006d011 > { static constexpr const char * name_str = "UART3::CFIFO"; };
template<> struct address_map< 0x4006d012 > { static constexpr const char * name_str = "UART3::SFIFO"; };
template<> struct address_map< 0x4006d013 > { static constexpr const char * name_str = "UART3::TWFIFO"; };
template<> struct address_map< 0x4006d014 > { static constexpr const char * name_str = "UART3::TCFIFO"; };
template<> struct address_map< 0x4006d015 > { static constexpr const char * name_str = "UART3::RWFIFO"; };
template<> struct address_map< 0x4006d016 > { static constexpr const char * name_str = "UART3::RCFIFO"; };
template<> struct address_map< 0x4006d018 > { static constexpr const char * name_str = "UART3::C7816"; };
template<> struct address_map< 0x4006d019 > { static constexpr const char * name_str = "UART3::IE7816"; };
template<> struct address_map< 0x4006d01a > { static constexpr const char * name_str = "UART3::IS7816"; };
template<> struct address_map< 0x4006d01b > { static constexpr const char * name_str = "UART3::WP7816T1"; };  /* svd2hpp: duplicate address for: UART3::WP7816T0, UART3::WP7816T1 */
template<> struct address_map< 0x4006d01c > { static constexpr const char * name_str = "UART3::WN7816"; };
template<> struct address_map< 0x4006d01d > { static constexpr const char * name_str = "UART3::WF7816"; };
template<> struct address_map< 0x4006d01e > { static constexpr const char * name_str = "UART3::ET7816"; };
template<> struct address_map< 0x4006d01f > { static constexpr const char * name_str = "UART3::TL7816"; };
template<> struct address_map< 0x4006f000 > { static constexpr const char * name_str = "VREF::VREFH_TRM"; };
template<> struct address_map< 0x4006f001 > { static constexpr const char * name_str = "VREF::VREFH_SC"; };
template<> struct address_map< 0x4006f005 > { static constexpr const char * name_str = "VREF::VREFL_TRM"; };
template<> struct address_map< 0x40072000 > { static constexpr const char * name_str = "CMP0::CR0"; };
template<> struct address_map< 0x40072001 > { static constexpr const char * name_str = "CMP0::CR1"; };
template<> struct address_map< 0x40072002 > { static constexpr const char * name_str = "CMP0::FPR"; };
template<> struct address_map< 0x40072003 > { static constexpr const char * name_str = "CMP0::SCR"; };
template<> struct address_map< 0x40072004 > { static constexpr const char * name_str = "CMP0::DACCR"; };
template<> struct address_map< 0x40072005 > { static constexpr const char * name_str = "CMP0::MUXCR"; };
template<> struct address_map< 0x40072008 > { static constexpr const char * name_str = "CMP1::CR0"; };
template<> struct address_map< 0x40072009 > { static constexpr const char * name_str = "CMP1::CR1"; };
template<> struct address_map< 0x4007200a > { static constexpr const char * name_str = "CMP1::FPR"; };
template<> struct address_map< 0x4007200b > { static constexpr const char * name_str = "CMP1::SCR"; };
template<> struct address_map< 0x4007200c > { static constexpr const char * name_str = "CMP1::DACCR"; };
template<> struct address_map< 0x4007200d > { static constexpr const char * name_str = "CMP1::MUXCR"; };
template<> struct address_map< 0x40075000 > { static constexpr const char * name_str = "SPI0::S"; };
template<> struct address_map< 0x40075001 > { static constexpr const char * name_str = "SPI0::BR"; };
template<> struct address_map< 0x40075002 > { static constexpr const char * name_str = "SPI0::C2"; };
template<> struct address_map< 0x40075003 > { static constexpr const char * name_str = "SPI0::C1"; };
template<> struct address_map< 0x40075004 > { static constexpr const char * name_str = "SPI0::ML"; };
template<> struct address_map< 0x40075005 > { static constexpr const char * name_str = "SPI0::MH"; };
template<> struct address_map< 0x40075006 > { static constexpr const char * name_str = "SPI0::DL"; };
template<> struct address_map< 0x40075007 > { static constexpr const char * name_str = "SPI0::DH"; };
template<> struct address_map< 0x4007500a > { static constexpr const char * name_str = "SPI0::CI"; };
template<> struct address_map< 0x4007500b > { static constexpr const char * name_str = "SPI0::C3"; };
template<> struct address_map< 0x40076000 > { static constexpr const char * name_str = "SPI1::S"; };
template<> struct address_map< 0x40076001 > { static constexpr const char * name_str = "SPI1::BR"; };
template<> struct address_map< 0x40076002 > { static constexpr const char * name_str = "SPI1::C2"; };
template<> struct address_map< 0x40076003 > { static constexpr const char * name_str = "SPI1::C1"; };
template<> struct address_map< 0x40076004 > { static constexpr const char * name_str = "SPI1::ML"; };
template<> struct address_map< 0x40076005 > { static constexpr const char * name_str = "SPI1::MH"; };
template<> struct address_map< 0x40076006 > { static constexpr const char * name_str = "SPI1::DL"; };
template<> struct address_map< 0x40076007 > { static constexpr const char * name_str = "SPI1::DH"; };
template<> struct address_map< 0x4007600a > { static constexpr const char * name_str = "SPI1::CI"; };
template<> struct address_map< 0x4007600b > { static constexpr const char * name_str = "SPI1::C3"; };
template<> struct address_map< 0x4007b000 > { static constexpr const char * name_str = "RCM::SRS0"; };
template<> struct address_map< 0x4007b001 > { static constexpr const char * name_str = "RCM::SRS1"; };
template<> struct address_map< 0x4007b004 > { static constexpr const char * name_str = "RCM::RPFC"; };
template<> struct address_map< 0x4007b005 > { static constexpr const char * name_str = "RCM::RPFW"; };
template<> struct address_map< 0x4007c000 > { static constexpr const char * name_str = "LLWU::PE1"; };
template<> struct address_map< 0x4007c001 > { static constexpr const char * name_str = "LLWU::PE2"; };
template<> struct address_map< 0x4007c002 > { static constexpr const char * name_str = "LLWU::PE3"; };
template<> struct address_map< 0x4007c003 > { static constexpr const char * name_str = "LLWU::PE4"; };
template<> struct address_map< 0x4007c004 > { static constexpr const char * name_str = "LLWU::ME"; };
template<> struct address_map< 0x4007c005 > { static constexpr const char * name_str = "LLWU::F1"; };
template<> struct address_map< 0x4007c006 > { static constexpr const char * name_str = "LLWU::F2"; };
template<> struct address_map< 0x4007c007 > { static constexpr const char * name_str = "LLWU::F3"; };
template<> struct address_map< 0x4007c008 > { static constexpr const char * name_str = "LLWU::FILT1"; };
template<> struct address_map< 0x4007c009 > { static constexpr const char * name_str = "LLWU::FILT2"; };
template<> struct address_map< 0x4007d000 > { static constexpr const char * name_str = "PMC::LVDSC1"; };
template<> struct address_map< 0x4007d001 > { static constexpr const char * name_str = "PMC::LVDSC2"; };
template<> struct address_map< 0x4007d002 > { static constexpr const char * name_str = "PMC::REGSC"; };
template<> struct address_map< 0x4007e000 > { static constexpr const char * name_str = "SMC::PMPROT"; };
template<> struct address_map< 0x4007e001 > { static constexpr const char * name_str = "SMC::PMCTRL"; };
template<> struct address_map< 0x4007e002 > { static constexpr const char * name_str = "SMC::STOPCTRL"; };
template<> struct address_map< 0x4007e003 > { static constexpr const char * name_str = "SMC::PMSTAT"; };
template<> struct address_map< 0x400ff000 > { static constexpr const char * name_str = "GPIOA::PDOR"; };
template<> struct address_map< 0x400ff001 > { static constexpr const char * name_str = "GPIOB::PDOR"; };
template<> struct address_map< 0x400ff002 > { static constexpr const char * name_str = "GPIOC::PDOR"; };
template<> struct address_map< 0x400ff003 > { static constexpr const char * name_str = "GPIOD::PDOR"; };
template<> struct address_map< 0x400ff010 > { static constexpr const char * name_str = "GPIOA::PDIR"; };
template<> struct address_map< 0x400ff011 > { static constexpr const char * name_str = "GPIOB::PDIR"; };
template<> struct address_map< 0x400ff012 > { static constexpr const char * name_str = "GPIOC::PDIR"; };
template<> struct address_map< 0x400ff013 > { static constexpr const char * name_str = "GPIOD::PDIR"; };
template<> struct address_map< 0x400ff014 > { static constexpr const char * name_str = "GPIOA::PDDR"; };
template<> struct address_map< 0x400ff015 > { static constexpr const char * name_str = "GPIOB::PDDR"; };
template<> struct address_map< 0x400ff016 > { static constexpr const char * name_str = "GPIOC::PDDR"; };
template<> struct address_map< 0x400ff017 > { static constexpr const char * name_str = "GPIOD::PDDR"; };
template<> struct address_map< 0x400ff01c > { static constexpr const char * name_str = "GPIOA::GACR"; };
template<> struct address_map< 0x400ff01d > { static constexpr const char * name_str = "GPIOB::GACR"; };
template<> struct address_map< 0x400ff01e > { static constexpr const char * name_str = "GPIOC::GACR"; };
template<> struct address_map< 0x400ff01f > { static constexpr const char * name_str = "GPIOD::GACR"; };
template<> struct address_map< 0x400ff040 > { static constexpr const char * name_str = "GPIOE::PDOR"; };
template<> struct address_map< 0x400ff041 > { static constexpr const char * name_str = "GPIOF::PDOR"; };
template<> struct address_map< 0x400ff042 > { static constexpr const char * name_str = "GPIOG::PDOR"; };
template<> struct address_map< 0x400ff043 > { static constexpr const char * name_str = "GPIOH::PDOR"; };
template<> struct address_map< 0x400ff050 > { static constexpr const char * name_str = "GPIOE::PDIR"; };
template<> struct address_map< 0x400ff051 > { static constexpr const char * name_str = "GPIOF::PDIR"; };
template<> struct address_map< 0x400ff052 > { static constexpr const char * name_str = "GPIOG::PDIR"; };
template<> struct address_map< 0x400ff053 > { static constexpr const char * name_str = "GPIOH::PDIR"; };
template<> struct address_map< 0x400ff054 > { static constexpr const char * name_str = "GPIOE::PDDR"; };
template<> struct address_map< 0x400ff055 > { static constexpr const char * name_str = "GPIOF::PDDR"; };
template<> struct address_map< 0x400ff056 > { static constexpr const char * name_str = "GPIOG::PDDR"; };
template<> struct address_map< 0x400ff057 > { static constexpr const char * name_str = "GPIOH::PDDR"; };
template<> struct address_map< 0x400ff05c > { static constexpr const char * name_str = "GPIOE::GACR"; };
template<> struct address_map< 0x400ff05d > { static constexpr const char * name_str = "GPIOF::GACR"; };
template<> struct address_map< 0x400ff05e > { static constexpr const char * name_str = "GPIOG::GACR"; };
template<> struct address_map< 0x400ff05f > { static constexpr const char * name_str = "GPIOH::GACR"; };
template<> struct address_map< 0x400ff080 > { static constexpr const char * name_str = "GPIOI::PDOR"; };
template<> struct address_map< 0x400ff090 > { static constexpr const char * name_str = "GPIOI::PDIR"; };
template<> struct address_map< 0x400ff094 > { static constexpr const char * name_str = "GPIOI::PDDR"; };
template<> struct address_map< 0x400ff09c > { static constexpr const char * name_str = "GPIOI::GACR"; };
template<> struct address_map< 0xf0000000 > { static constexpr const char * name_str = "MTB::POSITION"; };
template<> struct address_map< 0xf0000004 > { static constexpr const char * name_str = "MTB::MASTER"; };
template<> struct address_map< 0xf0000008 > { static constexpr const char * name_str = "MTB::FLOW"; };
template<> struct address_map< 0xf000000c > { static constexpr const char * name_str = "MTB::BASE"; };
template<> struct address_map< 0xf0000f00 > { static constexpr const char * name_str = "MTB::MODECTRL"; };
template<> struct address_map< 0xf0000fa0 > { static constexpr const char * name_str = "MTB::TAGSET"; };
template<> struct address_map< 0xf0000fa4 > { static constexpr const char * name_str = "MTB::TAGCLEAR"; };
template<> struct address_map< 0xf0000fb0 > { static constexpr const char * name_str = "MTB::LOCKACCESS"; };
template<> struct address_map< 0xf0000fb4 > { static constexpr const char * name_str = "MTB::LOCKSTAT"; };
template<> struct address_map< 0xf0000fb8 > { static constexpr const char * name_str = "MTB::AUTHSTAT"; };
template<> struct address_map< 0xf0000fbc > { static constexpr const char * name_str = "MTB::DEVICEARCH"; };
template<> struct address_map< 0xf0000fc8 > { static constexpr const char * name_str = "MTB::DEVICECFG"; };
template<> struct address_map< 0xf0000fcc > { static constexpr const char * name_str = "MTB::DEVICETYPID"; };
template<> struct address_map< 0xf0000fd0 > { static constexpr const char * name_str = "MTB::PERIPHID%s"; };
template<> struct address_map< 0xf0000ff0 > { static constexpr const char * name_str = "MTB::COMPID%s"; };
template<> struct address_map< 0xf0001000 > { static constexpr const char * name_str = "MTBDWT::CTRL"; };
template<> struct address_map< 0xf0001020 > { static constexpr const char * name_str = "MTBDWT::COMP%s"; };
template<> struct address_map< 0xf0001024 > { static constexpr const char * name_str = "MTBDWT::MASK%s"; };
template<> struct address_map< 0xf0001028 > { static constexpr const char * name_str = "MTBDWT::FCT0"; };
template<> struct address_map< 0xf0001038 > { static constexpr const char * name_str = "MTBDWT::FCT1"; };
template<> struct address_map< 0xf0001200 > { static constexpr const char * name_str = "MTBDWT::TBCTRL"; };
template<> struct address_map< 0xf0001fc8 > { static constexpr const char * name_str = "MTBDWT::DEVICECFG"; };
template<> struct address_map< 0xf0001fcc > { static constexpr const char * name_str = "MTBDWT::DEVICETYPID"; };
template<> struct address_map< 0xf0001fd0 > { static constexpr const char * name_str = "MTBDWT::PERIPHID%s"; };
template<> struct address_map< 0xf0001ff0 > { static constexpr const char * name_str = "MTBDWT::COMPID%s"; };
template<> struct address_map< 0xf0002000 > { static constexpr const char * name_str = "ROM::ENTRY%s"; };
template<> struct address_map< 0xf000200c > { static constexpr const char * name_str = "ROM::TABLEMARK"; };
template<> struct address_map< 0xf0002fcc > { static constexpr const char * name_str = "ROM::SYSACCESS"; };
template<> struct address_map< 0xf0002fd0 > { static constexpr const char * name_str = "ROM::PERIPHID%s"; };
template<> struct address_map< 0xf0002ff0 > { static constexpr const char * name_str = "ROM::COMPID%s"; };
template<> struct address_map< 0xf0003008 > { static constexpr const char * name_str = "MCM::PLASC"; };
template<> struct address_map< 0xf000300a > { static constexpr const char * name_str = "MCM::PLAMC"; };
template<> struct address_map< 0xf000300c > { static constexpr const char * name_str = "MCM::PLACR"; };
template<> struct address_map< 0xf0003030 > { static constexpr const char * name_str = "MCM::PID"; };
template<> struct address_map< 0xf0003040 > { static constexpr const char * name_str = "MCM::CPO"; };
template<> struct address_map< 0xf0003080 > { static constexpr const char * name_str = "MCM::MATCR"; };

} // namespace mptl

#endif // ARCH_REG_ADDRESS_MAP_HPP_INCLUDED
